"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[5274],{1057:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>o});var r=s(4848),i=s(8453);const t={},a="Tool Architecture",c={id:"made/advanced_concepts/made_tool_architecture",title:"Tool Architecture",description:"\ud83c\udfd7\ufe0f For Developers: Understanding MADE's internal architecture for debugging, extending, or contributing to the project.",source:"@site/docs/made/advanced_concepts/2_made_tool_architecture.md",sourceDirName:"made/advanced_concepts",slug:"/made/advanced_concepts/made_tool_architecture",permalink:"/leds-tools-public/made/advanced_concepts/made_tool_architecture",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"made",previous:{title:"Understanding MADE's Architecture: Tool vs Library",permalink:"/leds-tools-public/made/advanced_concepts/made_tool_vs_lib"},next:{title:"Library Architecture",permalink:"/leds-tools-public/made/advanced_concepts/made_lib_architecture"}},l={},o=[{value:"\ud83c\udfaf Quick Overview",id:"-quick-overview",level:2},{value:"\ud83e\uddf1 Core Components",id:"-core-components",level:2},{value:"1. Language Layer (<code>src/language/</code>) \ud83d\udcdd",id:"1-language-layer-srclanguage-",level:3},{value:"2. Application Layer (<code>src/cli/project_management/</code>) \ud83c\udfed",id:"2-application-layer-srccliproject_management-",level:3},{value:"3. User Interfaces \ud83c\udfa8",id:"3-user-interfaces-",level:3},{value:"\ud83d\udd04 Processing Flow",id:"-processing-flow",level:2},{value:"\ud83d\udd17 made-lib-beta Integration",id:"-made-lib-beta-integration",level:2},{value:"\ud83d\udd27 Key Processing Functions",id:"-key-processing-functions",level:2},{value:"\ud83c\udfa8 VS Code Extension",id:"-vs-code-extension",level:2},{value:"\ud83d\udd0c Extension Points",id:"-extension-points",level:2},{value:"1. Langium Grammar Extensions",id:"1-langium-grammar-extensions",level:3},{value:"2. Processing Extensions",id:"2-processing-extensions",level:3},{value:"\ud83d\udcda Summary",id:"-summary",level:2}];function d(e){const n={blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tool-architecture",children:"Tool Architecture"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\ud83c\udfd7\ufe0f ",(0,r.jsx)(n.strong,{children:"For Developers"}),": Understanding MADE's internal architecture for debugging, extending, or contributing to the project."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-quick-overview",children:"\ud83c\udfaf Quick Overview"}),"\n",(0,r.jsxs)(n.p,{children:["MADE Tool processes ",(0,r.jsx)(n.code,{children:".made"})," files through this pipeline:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:".made file \u2192 Language Server \u2192 ApplicationManager \u2192 Sprint Ceremonies \u2192 JSON Output \u2192 made-lib-beta Integration\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key Components:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Language Server"}),": Parses and validates ",(0,r.jsx)(n.code,{children:".made"})," files using Langium"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ApplicationManager"}),': Orchestrates processing through "Sprint Ceremonies" (Singleton pattern)']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Applications"}),": Handle specific domains (Team, Process, Backlog, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Builders"}),": Construct objects using Builder pattern"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"made-lib-beta"}),": Generates final outputs (docs, GitHub integration)"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-core-components",children:"\ud83e\uddf1 Core Components"}),"\n",(0,r.jsxs)(n.h3,{id:"1-language-layer-srclanguage-",children:["1. Language Layer (",(0,r.jsx)(n.code,{children:"src/language/"}),") \ud83d\udcdd"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"made.langium"})})," - Grammar definition for the MADE DSL"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-langium",children:"Project: 'project' name=ID '{' components+=Component* '}';\r\nTeam: 'team' name=ID '{' teammember+=TeamMember* '}';\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"main.ts"})})," - Language server entry point"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"made-validator.ts"})})," - Semantic validation rules"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"checks: {\r\n    Project: validateProject,\r\n    Team: validateTeamSize\r\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"generated/"})})," - Auto-generated AST types (don't edit these!)"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"2-application-layer-srccliproject_management-",children:["2. Application Layer (",(0,r.jsx)(n.code,{children:"src/cli/project_management/"}),") \ud83c\udfed"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"ApplicationManager (Singleton)"}),' orchestrates processing through 6 "Sprint Ceremonies":']}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MADE Backlog"})," - Creates issues from epics/stories/tasks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MADE Team"})," - Processes team member assignments"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MADE Projects"})," - Generates project structure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MADE Processes"})," - Creates reusable process templates"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MADE Roadmap"})," - Builds release planning"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MADE Documentation"})," - Generates reports"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key Patterns:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"AbstractApplication"})," - Base class for all applications"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"abstract class AbstractApplication {\r\n    protected db: LowSync<any>;\r\n    abstract initialize(): Promise<void>;\r\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Builder Pattern"})," - IssueBuilder, ProcessBuilder, etc."]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'const issue = new IssueBuilder()\r\n    .setTitle("User Login")\r\n    .setAssignee(teamMember)\r\n    .build();\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"LowDB"})," - JSON persistence for data storage"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"this.db.data = { issues: [], teams: [] };\r\nthis.db.write();\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Service Layer"})," - Utilities for file ops and HTTP calls"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"createFile(path, content);\r\nsend(url, data, headers);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-user-interfaces-",children:"3. User Interfaces \ud83c\udfa8"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["VS Code Extension (",(0,r.jsx)(n.code,{children:"src/extension/main.ts"}),")"]})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Commands: ",(0,r.jsx)(n.code,{children:"made.generateDocumentation"}),", ",(0,r.jsx)(n.code,{children:"made.generateGithubIssues"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:'vscode.commands.registerCommand("made.generateDocumentation", () => {\r\n    generateAction(filepath, { only_project_documentation: true });\r\n});\n'})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Language server integration for syntax highlighting"}),"\n",(0,r.jsx)(n.li,{children:"Environment variable support for GitHub integration"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"GITHUB_TOKEN=ghp_xxxx\r\nGITHUB_ORG=myorg\r\nGITHUB_REPO=myproject\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["CLI (",(0,r.jsx)(n.code,{children:"src/cli/main.ts"}),")"]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"npx made-cli generate project.made -d ./output    # Generate docs\r\nnpx made-cli github project.made -t token -o org -r repo  # Push to GitHub\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-processing-flow",children:"\ud83d\udd04 Processing Flow"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:".made file \u2192 Validation \u2192 AST Generation \u2192 ApplicationManager \u2192 Sprint Ceremonies \u2192 JSON Files \u2192 made-lib-beta \u2192 Outputs\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Parse & Validate"}),": Langium parses ",(0,r.jsx)(n.code,{children:".made"})," file and validates syntax"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const document = await langiumServices.shared.workspace.LangiumDocuments.getOrCreateDocument(uri);\r\nconst parseResult = document.parseResult;\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Extract Components"}),": Sort AST nodes by type (Team, Backlog, etc.)"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const teams = model.components.filter(c => c.$type === 'Team');\r\nconst backlogs = model.components.filter(c => c.$type === 'Backlog');\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Run Ceremonies"}),": ApplicationManager executes 6 initialization steps"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"for (const ceremony of this.ceremonies) {\r\n    await ceremony.execute();\r\n}\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"4",children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build Objects"}),": Use Builder pattern to create structured data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Persist Data"}),": Save to JSON files using LowDB"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Generate Outputs"}),": made-lib-beta creates docs and GitHub integration"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-made-lib-beta-integration",children:"\ud83d\udd17 made-lib-beta Integration"}),"\n",(0,r.jsxs)(n.p,{children:["MADE Tool handles parsing and data extraction. ",(0,r.jsx)(n.strong,{children:"made-lib-beta"})," handles business logic and outputs:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// After processing, integrate with library\r\nconst reportManager = new ReportManager();\r\nawait reportManager.createReport(dbPath);           // Generate docs\r\nawait reportManager.githubPush(/* parameters */);   // GitHub sync\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Data Flow"}),": ",(0,r.jsx)(n.code,{children:"MADE Tool (AST Processing) \u2192 JSON Files \u2192 made-lib-beta (Business Logic) \u2192 Outputs"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-key-processing-functions",children:"\ud83d\udd27 Key Processing Functions"}),"\n",(0,r.jsx)(n.p,{children:"These functions handle the core transformations:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// AST to Issue conversion\r\nfunction astEpicToIssue(epic: Epic, sprintId: string): Issue { \r\n    return { id: epic.id, title: epic.name, sprint: sprintId }; \r\n}\r\n\r\n// Backlog processing\r\nfunction processBacklogs(backlogs: Backlog[]): Issue[] {\r\n    return backlogs.flatMap(b => b.epics.map(e => astEpicToIssue(e, b.sprint)));\r\n}\r\n\r\n// Team assignment\r\nfunction buildAssigneeMap(team: Person[]): Map<string, Person> {\r\n    return new Map(team.map(p => [p.role, p]));\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Pattern"}),": AST Node \u2192 Processing Function \u2192 Structured Data \u2192 JSON Storage"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-vs-code-extension",children:"\ud83c\udfa8 VS Code Extension"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Two main commands"}),": made.generateDocumentation and made.generateGithubIssues"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Extension activation\r\nexport function activate(context: vscode.ExtensionContext): void {\r\n    registerGeneratorCommand(context);        // Documentation generator\r\n    registerGitHubCommand(context);          // GitHub integration\r\n    client = startLanguageClient(context);    // Language features\r\n}\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Features"}),": Syntax highlighting, auto-completion, validation, and commands through language server."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Language server provides these features automatically:\r\n// - Syntax highlighting for .made files\r\n// - Error detection (red squiggles)\r\n// - Auto-completion as you type\r\n// - Hover information for elements\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-extension-points",children:"\ud83d\udd0c Extension Points"}),"\n",(0,r.jsx)(n.h3,{id:"1-langium-grammar-extensions",children:"1. Langium Grammar Extensions"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Extend the DSL syntax"})," by modifying ",(0,r.jsx)(n.code,{children:"src/language/made.langium"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-langium",children:"// Add new grammar rules\r\nCustomBlock:\r\n    'custom' name=ID '{'\r\n        properties+=CustomProperty*\r\n    '}';\r\n\r\nCustomProperty:\r\n    key=ID ':' value=STRING;\r\n\r\n// Extend existing rules\r\nProject:\r\n    'project' name=ID '{'\r\n        // ... existing properties\r\n        customBlocks+=CustomBlock*  // \u2190 Add your extension\r\n    '}';\n"})}),"\n",(0,r.jsx)(n.p,{children:"After grammar changes:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Run ",(0,r.jsx)(n.code,{children:"npm run langium:generate"})," to regenerate AST types"]}),"\n",(0,r.jsxs)(n.li,{children:["Update validation rules in ",(0,r.jsx)(n.code,{children:"made-validator.ts"})]}),"\n",(0,r.jsx)(n.li,{children:"Add processing logic in ApplicationManager ceremonies"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-processing-extensions",children:"2. Processing Extensions"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"InitializationStep pattern"})," for custom processing:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"// Add custom initialization steps\r\nclass CustomDataStep extends InitializationStep {\r\n    execute(): void {\r\n        // Your custom processing logic\r\n    }\r\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Real extension points:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Langium Grammar"}),": Add new DSL syntax and rules"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-langium",children:"// Add new component type\r\nCustomResource: 'resource' name=ID '{' properties+=Property* '}';\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sprint Ceremonies"}),": Add new initialization steps"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"class ResourceProcessingStep extends InitializationStep {\r\n    execute(): void { /* process custom resources */ }\r\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Builder Classes"}),": Extend existing builders"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"class EnhancedIssueBuilder extends IssueBuilder {\r\n    setPriority(p: string) { this.issue.priority = p; return this; }\r\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Service Functions"}),": Add utility functions"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"export function validateEmail(email: string): boolean {\r\n    return /\\S+@\\S+\\.\\S+/.test(email);\r\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Application Types"}),": Create new applications"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"class ResourceApplication extends AbstractApplication {\r\n    async initialize() { /* handle resources */ }\r\n}\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Validation Rules"}),": Add semantic validation in ",(0,r.jsx)(n.code,{children:"made-validator.ts"})]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-typescript",children:"const validateTeamSize: ValidationCheck<Team> = (team, accept) => {\r\n    if (team.teammember.length > 10) {\r\n        accept('warning', 'Large team size', { node: team });\r\n    }\r\n};\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-summary",children:"\ud83d\udcda Summary"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"MADE Tool Architecture"})," follows a clear pipeline:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Language Server"})," - Parses ",(0,r.jsx)(n.code,{children:".made"})," files using Langium"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ApplicationManager"}),' - Orchestrates 6 "Sprint Ceremonies"']}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Processing Functions"})," - Transform AST to structured data"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"JSON Storage"})," - Persist data using LowDB"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"made-lib-beta"})," - Generate final outputs"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Key Patterns"}),": Singleton, Builder, Service Layer",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Extension Points"}),": InitializationStep, Builders, Services"]}),"\n",(0,r.jsx)(n.p,{children:"The architecture separates parsing (MADE Tool) from business logic (made-lib-beta), making it maintainable and extensible."})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var r=s(6540);const i={},t=r.createContext(i);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);