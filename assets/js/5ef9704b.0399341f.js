"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[1789],{954:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=s(4848),i=s(8453);const r={sidebar_position:1,title:"TodoList - A Complete Pipeline"},l="TodoList - A Complete Pipeline",o={id:"todo_list/todo_list",title:"TodoList - A Complete Pipeline",description:"This section is intended to explain the use of all the tools together through a fictitious project, the ToDo List. You can check the source code here.",source:"@site/docs/todo_list/todo_list.md",sourceDirName:"todo_list",slug:"/todo_list/",permalink:"/leds-tools-public/todo_list/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"TodoList - A Complete Pipeline"},sidebar:"todolist"},a={},d=[{value:"1. General Description",id:"1-general-description",level:2},{value:"2. Features",id:"2-features",level:2},{value:"2.1. User Registration",id:"21-user-registration",level:3},{value:"2.2. User Authentication",id:"22-user-authentication",level:3},{value:"2.3. Task Management",id:"23-task-management",level:3},{value:"2.4. Task Organization",id:"24-task-organization",level:3},{value:"2.5. Notifications (Optional)",id:"25-notifications-optional",level:3},{value:"3. Functional Requirements",id:"3-functional-requirements",level:2},{value:"4. Non-Functional Requirements",id:"4-non-functional-requirements",level:2},{value:"5. Data Model",id:"5-data-model",level:2},{value:"6. Main Flow",id:"6-main-flow",level:2},{value:"7. Technologies (Example)",id:"7-technologies-example",level:2}];function c(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"todolist---a-complete-pipeline",children:"TodoList - A Complete Pipeline"})}),"\n",(0,t.jsxs)(n.p,{children:["This section is intended to explain the use of all the tools together through a fictitious project, the ToDo List. You can check the source code ",(0,t.jsx)(n.a,{href:"https://github.com/chevitareseCodes/LEDS-TOOLS-TodoList_Pipeline/tree/main",children:"here"}),"."]}),"\n",(0,t.jsx)(n.h1,{id:"explaining-the-pipeline-and-tools",children:"Explaining the Pipeline and Tools"}),"\n",(0,t.jsxs)(n.p,{children:["The pipeline starts by setting up the git workflow, in this particular case the ",(0,t.jsx)(n.a,{href:"https://docs.github.com/en/actions/how-tos/write-workflows",children:"GitHub workflow"}),".",(0,t.jsx)(n.br,{}),"\n","In the root of the project, in the folder ",(0,t.jsx)(n.code,{children:".github/workflows"}),", there is the file ",(0,t.jsx)(n.code,{children:"generate-artifacts.yml"}),", which is as follows:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"name: Generate Artifacts\r\n\r\non:\r\n  push:\r\n    branches:\r\n      - main\r\n    paths:\r\n      - 'TodoList.andes'\r\n      - '.github/workflows/generate-artifacts.yml'\r\n\r\njobs:\r\n  generate:\r\n    runs-on: ubuntu-latest\r\n    env:\r\n      GITHUB_TOKEN: ${{ secrets.REPOSITORY_TOKEN }}\r\n      GITHUB_ORG: ${{ github.repository_owner }}\r\n      GITHUB_REPO: ${{ github.event.repository.name }}\r\n    steps:\r\n      - name: Checkout repository\r\n        uses: actions/checkout@v4\r\n        with:\r\n          persist-credentials: true\r\n\r\n      - name: Set up Node.js\r\n        uses: actions/setup-node@v4\r\n        with:\r\n          node-version: '20'\r\n\r\n      - name: Install dependencies\r\n        run: npm ci\r\n      - name: Setup Github\r\n        run: |\r\n          git config --global user.name 'github-actions[bot]'\r\n          git config --global user.email 'github-actions[bot]@users.noreply.github.com'\r\n          git pull --rebase origin main\r\n      - name: Run Andes CLI\r\n        run: npx andes-cli generate ./TodoList.andes\r\n      - name: Commit and push Andes\r\n        run: |\r\n          git add .\r\n          git diff --cached --quiet || git commit -m \"chore: generate artifacts [skip ci]\"\r\n          git remote set-url origin https://x-access-token:${{ secrets.REPOSITORY_TOKEN }}@github.com/${{ github.repository }}\r\n          git push\r\n\r\n      - name: Run Spark CLI\r\n        run: npx spark-cli generate ./artifacts/ToDoList.spark\r\n      - name: Commit and push Spark\r\n        run: |\r\n          git add .\r\n          git diff --cached --quiet || git commit -m \"chore: generate artifacts [skip ci]\"\r\n          git remote set-url origin https://x-access-token:${{ secrets.REPOSITORY_TOKEN }}@github.com/${{ github.repository }}\r\n          git push\r\n\r\n      - name: Run Made CLI\r\n        run: |\r\n          npx made-cli github ./artifacts/TodoList.made\r\n      - name: Commit and push Made\r\n        run: |\r\n          git add .\r\n          git diff --cached --quiet || git commit -m \"chore: generate artifacts [skip ci]\"\r\n          git remote set-url origin https://x-access-token:${{ secrets.REPOSITORY_TOKEN }}@github.com/${{ github.repository }}\r\n          git push\n"})}),"\n",(0,t.jsxs)(n.p,{children:["The purpose of this file is to configure an action to run when a ",(0,t.jsx)(n.code,{children:"push"})," on the ",(0,t.jsx)(n.code,{children:"main"})," branch occurs.",(0,t.jsx)(n.br,{}),"\n","This action installs the dependencies (",(0,t.jsx)(n.a,{href:"/leds-tools-public/andes/overview",children:"andes-lib"}),", ",(0,t.jsx)(n.a,{href:"/leds-tools-public/spark/basic_concepts/anchor",children:"spark-lib"}),", and ",(0,t.jsx)(n.a,{href:"/leds-tools-public/made/basic_concepts/made_overview",children:"made-lib"}),") temporarily on a GitHub Ubuntu runner, executes the provided ",(0,t.jsx)(n.code,{children:".andes"})," file, and from the generated ",(0,t.jsx)(n.code,{children:".spark"})," and ",(0,t.jsx)(n.code,{children:".made"})," files, runs ",(0,t.jsx)(n.a,{href:"/leds-tools-public/spark/basic_concepts/anchor",children:"spark-lib"})," and ",(0,t.jsx)(n.a,{href:"/leds-tools-public/made/basic_concepts/made_overview",children:"made-lib"})," respectively.",(0,t.jsx)(n.br,{}),"\n","As a result, you end up with a repository containing the artifacts (frontend + backend + documentation) and ",(0,t.jsx)(n.code,{children:"tasks"})," in the project repository."]}),"\n",(0,t.jsxs)(n.p,{children:["Additionally, there are also files in the repository to install Python dependencies to use ",(0,t.jsx)(n.a,{href:"/leds-tools-public/code_wise/code_wise_lib/Overview%20CW-PR",children:"code-wise"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["As for the ",(0,t.jsx)(n.a,{href:"/leds-tools-public/oraculo/basic_concepts/overview",children:"oracle"}),", its usage link is not permanent, so it was not included here."]}),"\n",(0,t.jsx)(n.h1,{id:"system-specification--to-do-list",children:"System Specification \u2014 To-Do List"}),"\n",(0,t.jsx)(n.h2,{id:"1-general-description",children:"1. General Description"}),"\n",(0,t.jsxs)(n.p,{children:["The To-Do List system is an application that allows users to organize their daily tasks.",(0,t.jsx)(n.br,{}),"\n","Through it, the user can create, view, update, delete, and manage tasks, as well as organize them by categories, set deadlines, and track their status."]}),"\n",(0,t.jsx)(n.h2,{id:"2-features",children:"2. Features"}),"\n",(0,t.jsx)(n.h3,{id:"21-user-registration",children:"2.1. User Registration"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Allow users to create an account in the system."}),"\n",(0,t.jsx)(n.li,{children:"Required data: Name, Email, Password."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"22-user-authentication",children:"2.2. User Authentication"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Allow login and logout."}),"\n",(0,t.jsx)(n.li,{children:"Secure authentication with encrypted password."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"23-task-management",children:"2.3. Task Management"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Create Task"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Fields: Title, Description, Due Date, Priority, Status, Category (optional)."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Edit Task"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Allow updating any task information."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Delete Task"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Allow removing a task from the system."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"List Tasks"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"View all registered tasks with filters by: status, due date, priority, and category."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Change Status"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Possible statuses: Pending, In Progress, Completed, Canceled."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"24-task-organization",children:"2.4. Task Organization"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Create and manage categories (e.g., Work, Study, Personal)."}),"\n",(0,t.jsx)(n.li,{children:"Filter tasks by category."}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"25-notifications-optional",children:"2.5. Notifications (Optional)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Send reminders for tasks close to the due date (via email or in-system notification)."}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"3-functional-requirements",children:"3. Functional Requirements"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"ID"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RF01"}),(0,t.jsx)(n.td,{children:"The system must allow users to register with name, email, and password."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RF02"}),(0,t.jsx)(n.td,{children:"The system must allow user authentication."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RF03"}),(0,t.jsx)(n.td,{children:"The system must allow users to create new tasks."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RF04"}),(0,t.jsx)(n.td,{children:"The system must allow users to edit existing tasks."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RF05"}),(0,t.jsx)(n.td,{children:"The system must allow users to delete tasks."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RF06"}),(0,t.jsx)(n.td,{children:"The system must list the user\u2019s tasks."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RF07"}),(0,t.jsx)(n.td,{children:"The system must allow changing the status of tasks."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RF08"}),(0,t.jsx)(n.td,{children:"The system must allow users to create and manage categories."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RF09"}),(0,t.jsx)(n.td,{children:"The system must allow filtering tasks by status, date, and category."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RF10"}),(0,t.jsx)(n.td,{children:"The system may send notifications about pending or upcoming tasks."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"4-non-functional-requirements",children:"4. Non-Functional Requirements"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"ID"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RNF01"}),(0,t.jsx)(n.td,{children:"The system must have secure authentication with password encryption."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RNF02"}),(0,t.jsx)(n.td,{children:"It must be a responsive application, working well on desktop and mobile."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RNF03"}),(0,t.jsx)(n.td,{children:"The backend must be developed in [e.g., Node.js, Django, Spring Boot]."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RNF04"}),(0,t.jsx)(n.td,{children:"The frontend must be developed in [e.g., Vue.js, React, Angular]."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RNF05"}),(0,t.jsx)(n.td,{children:"The system must support at least 100 concurrent users."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RNF06"}),(0,t.jsx)(n.td,{children:"Request response time must not exceed 2 seconds in 95% of cases."})]})]})]}),"\n",(0,t.jsx)(n.h2,{id:"5-data-model",children:"5. Data Model"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"User"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"id (UUID)"}),"\n",(0,t.jsx)(n.li,{children:"name (string)"}),"\n",(0,t.jsx)(n.li,{children:"email (string, unique)"}),"\n",(0,t.jsx)(n.li,{children:"password (hash)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Category"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"id (UUID)"}),"\n",(0,t.jsx)(n.li,{children:"name (string)"}),"\n",(0,t.jsx)(n.li,{children:"user_id (UUID, FK)"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Task"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"id (UUID)"}),"\n",(0,t.jsx)(n.li,{children:"title (string)"}),"\n",(0,t.jsx)(n.li,{children:"description (string)"}),"\n",(0,t.jsx)(n.li,{children:"due_date (date)"}),"\n",(0,t.jsx)(n.li,{children:"priority (enum: low, medium, high)"}),"\n",(0,t.jsx)(n.li,{children:"status (enum: pending, in progress, completed, canceled)"}),"\n",(0,t.jsx)(n.li,{children:"category_id (UUID, FK, optional)"}),"\n",(0,t.jsx)(n.li,{children:"user_id (UUID, FK)"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"6-main-flow",children:"6. Main Flow"}),"\n",(0,t.jsx)(n.p,{children:"The user accesses the system and logs in or registers."}),"\n",(0,t.jsx)(n.p,{children:"Once logged in, they see their task dashboard."}),"\n",(0,t.jsx)(n.p,{children:"They can create a new task by filling in title, description, date, and initial status."}),"\n",(0,t.jsx)(n.p,{children:"They can update the status as progress is made (e.g., pending \u2192 in progress \u2192 completed)."}),"\n",(0,t.jsx)(n.p,{children:"They can filter tasks by date, status, or category."}),"\n",(0,t.jsx)(n.p,{children:"They can delete tasks that are no longer needed."}),"\n",(0,t.jsx)(n.p,{children:"They track their tasks on the dashboard."}),"\n",(0,t.jsx)(n.h2,{id:"7-technologies-example",children:"7. Technologies (Example)"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Frontend: Vue.js with Tailwind CSS"}),"\n",(0,t.jsx)(n.li,{children:"Backend: Django Rest Framework or C#"}),"\n",(0,t.jsx)(n.li,{children:"Database: PostgreSQL"}),"\n",(0,t.jsx)(n.li,{children:"Hosting: Render, Railway, or Vercel"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var t=s(6540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);