"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[5299],{5314:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>o});var i=r(4848),s=r(8453);const a={sidebar_position:8,title:"Minimal API Csharp"},c="C# Minimal API Architecture",t={id:"spark/advanced_concepts/sparklib_advanced/backend/generated_arch/Csharp_Minimal-API",title:"Minimal API Csharp",description:"Minimal API Architecture",source:"@site/docs/spark/advanced_concepts/3_sparklib_advanced/2_backend/4_generated_arch/3_Csharp_Minimal-API.md",sourceDirName:"spark/advanced_concepts/3_sparklib_advanced/2_backend/4_generated_arch",slug:"/spark/advanced_concepts/sparklib_advanced/backend/generated_arch/Csharp_Minimal-API",permalink:"/leds-tools-public/spark/advanced_concepts/sparklib_advanced/backend/generated_arch/Csharp_Minimal-API",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Minimal API Csharp"},sidebar:"spark",previous:{title:"Python Architecture",permalink:"/leds-tools-public/spark/advanced_concepts/sparklib_advanced/backend/generated_arch/Python"},next:{title:"Java Architecture",permalink:"/leds-tools-public/spark/advanced_concepts/sparklib_advanced/backend/generated_arch/Java"}},d={},o=[{value:"Layered Architecture",id:"layered-architecture",level:2},{value:"Presentation Layer",id:"presentation-layer",level:3},{value:"Domain Layer",id:"domain-layer",level:3},{value:"Shared Layer",id:"shared-layer",level:3},{value:"Main Folders",id:"main-folders",level:2},{value:"Webservice",id:"webservice",level:3},{value:"Program.cs",id:"programcs",level:4},{value:"Endpoints and Middleware",id:"endpoints-and-middleware",level:4},{value:"Moranguinho",id:"moranguinho",level:3},{value:"Agricultor.cs",id:"agricultorcs",level:4},{value:"Propriedade.cs",id:"propriedadecs",level:4},{value:"ContextDbFactory.cs",id:"contextdbfactorycs",level:4},{value:"Shared",id:"shared",level:3},{value:"ContextDb/",id:"contextdb",level:4},{value:"References",id:"references",level:2},{value:"Improvement Points",id:"improvement-points",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"c-minimal-api-architecture",children:"C# Minimal API Architecture"})}),"\n",(0,i.jsxs)(n.p,{children:["This document describes the backend project structure in ",(0,i.jsx)(n.strong,{children:"C# Minimal API"}),", organized into layers and modular folders to ensure scalability, testability, and clarity in responsibilities."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"layered-architecture",children:"Layered Architecture"}),"\n",(0,i.jsxs)(n.p,{children:["The backend follows a ",(0,i.jsx)(n.strong,{children:"modular layered architecture"}),", organizing components by domain and functionality. Each layer has a defined responsibility, as shown below:"]}),"\n",(0,i.jsx)(n.mermaid,{value:"graph TD\r\n\r\nsubgraph WebService\r\n    A[Webservice - Presentation Layer]\r\n    B[Moranguinho - Domain Layer]\r\n    C[Shared - Shared Components]\r\nend\r\n\r\nsubgraph Moranguinho\r\n    B1[Agricultor.cs]\r\n    B2[Propriedade.cs]\r\n    B3[ContextDbFactory.cs]\r\nend\r\n\r\nsubgraph Shared\r\n    C1[ContextDb - EF Core]\r\nend\r\n\r\nA --\x3e B\r\nB --\x3e C\r\nC --\x3e C1"}),"\n",(0,i.jsx)(n.h3,{id:"presentation-layer",children:"Presentation Layer"}),"\n",(0,i.jsxs)(n.p,{children:["Located in the ",(0,i.jsx)(n.code,{children:"Webservice/"})," folder."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Contains the ",(0,i.jsx)(n.code,{children:"Program.cs"})," file, responsible for configuring and exposing HTTP routes, middlewares (Swagger, CORS, authentication), and app services."]}),"\n",(0,i.jsx)(n.li,{children:"Acts as the UI of the API, handling direct interaction with clients."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"domain-layer",children:"Domain Layer"}),"\n",(0,i.jsxs)(n.p,{children:["Located in the ",(0,i.jsx)(n.code,{children:"Moranguinho/"})," folder."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Includes domain-specific logic and models such as ",(0,i.jsx)(n.code,{children:"Agricultor.cs"}),", ",(0,i.jsx)(n.code,{children:"Propriedade.cs"}),", and ",(0,i.jsx)(n.code,{children:"ContextDbFactory.cs"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Organizes code by feature, improving maintainability and separation of concerns."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"shared-layer",children:"Shared Layer"}),"\n",(0,i.jsxs)(n.p,{children:["Located in the ",(0,i.jsx)(n.code,{children:"Shared/"})," folder."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Provides cross-cutting utilities and shared components like models, enums, and helper classes."}),"\n",(0,i.jsxs)(n.li,{children:["Contains the ",(0,i.jsx)(n.code,{children:"ContextDb/"})," subfolder, which handles database access using EF Core (Entity Framework Core)."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"This structure enables a clean separation between domain logic, infrastructure, and service exposure."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"main-folders",children:"Main Folders"}),"\n",(0,i.jsx)(n.h3,{id:"webservice",children:"Webservice"}),"\n",(0,i.jsx)(n.p,{children:"Service exposure layer of the application."}),"\n",(0,i.jsx)(n.h4,{id:"programcs",children:"Program.cs"}),"\n",(0,i.jsx)(n.p,{children:"Initializes and configures the Minimal API app, sets up services, middlewares, and routes."}),"\n",(0,i.jsx)(n.h4,{id:"endpoints-and-middleware",children:"Endpoints and Middleware"}),"\n",(0,i.jsx)(n.p,{children:"Responsible for exposing routes to external consumers, including Swagger setup, CORS policy, and authentication (if applicable)."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"moranguinho",children:"Moranguinho"}),"\n",(0,i.jsx)(n.p,{children:"Represents the core domain logic."}),"\n",(0,i.jsx)(n.h4,{id:"agricultorcs",children:"Agricultor.cs"}),"\n",(0,i.jsxs)(n.p,{children:["Defines the ",(0,i.jsx)(n.code,{children:"Agricultor"})," entity and related domain logic."]}),"\n",(0,i.jsx)(n.h4,{id:"propriedadecs",children:"Propriedade.cs"}),"\n",(0,i.jsxs)(n.p,{children:["Represents the ",(0,i.jsx)(n.code,{children:"Propriedade"})," entity, modeling the domain structure for rural properties."]}),"\n",(0,i.jsx)(n.h4,{id:"contextdbfactorycs",children:"ContextDbFactory.cs"}),"\n",(0,i.jsxs)(n.p,{children:["A factory class used to instantiate the ",(0,i.jsx)(n.code,{children:"DbContext"}),", especially useful for dependency injection or testing scenarios."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"shared",children:"Shared"}),"\n",(0,i.jsx)(n.p,{children:"Shared resources and infrastructure."}),"\n",(0,i.jsx)(n.h4,{id:"contextdb",children:"ContextDb/"}),"\n",(0,i.jsx)(n.p,{children:"Contains:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"DbContext"})," definition used by EF Core"]}),"\n",(0,i.jsx)(n.li,{children:"Entity configurations and model mappings"}),"\n",(0,i.jsx)(n.li,{children:"Responsible for database interaction (CRUD operations, migrations, etc.)"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Used across the entire application to maintain a centralized and consistent data access approach."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis",children:"https://learn.microsoft.com/en-us/aspnet/core/fundamentals/minimal-apis"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://www.infoq.com/articles/minimal-api-dotnet6/",children:"https://www.infoq.com/articles/minimal-api-dotnet6/"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/ef/core/",children:"https://learn.microsoft.com/en-us/ef/core/"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"improvement-points",children:"Improvement Points"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Add Service Layer (optional):"})," Including a service layer between endpoints and domain classes could improve the separation of business logic."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Program.cs too big:"})," Create the service layer, and routes configurations"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>t});var i=r(6540);const s={},a=i.createContext(s);function c(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);