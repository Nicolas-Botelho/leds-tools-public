"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[1577],{1818:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var s=i(4848),t=i(8453);const r={sidebar_position:1,title:"Metamodel"},l=void 0,c={id:"spark/advanced_concepts/spark_advanced/metamodel",title:"Metamodel",description:"This class diagram provides a structured overview of the SPARK grammar, illustrating how various components such as Model, Configuration, AbstractElement, Module, EnumX, Actor, and UseCase interact and relate to each other. By defining AbstractElement as a base for Module and EnumX, the diagram promotes a hierarchical and organized approach to modeling system components. Additionally, the inclusion of fragments like QualifiedName and Comment ensures that elements are uniquely identifiable and well-documented within the system.",source:"@site/docs/spark/advanced_concepts/2_spark_advanced/1_metamodel.md",sourceDirName:"spark/advanced_concepts/2_spark_advanced",slug:"/spark/advanced_concepts/spark_advanced/metamodel",permalink:"/leds-tools-public/spark/advanced_concepts/spark_advanced/metamodel",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Metamodel"},sidebar:"spark",previous:{title:"An Advanced Study of Grammar",permalink:"/leds-tools-public/spark/advanced_concepts/advanced_study"},next:{title:"Understanding the Language",permalink:"/leds-tools-public/spark/advanced_concepts/spark_advanced/lang"}},a={},d=[{value:"Model",id:"model",level:2},{value:"Configuration",id:"configuration",level:3},{value:"AbstractElement",id:"abstractelement",level:3},{value:"ModuleImport",id:"moduleimport",level:3},{value:"Actor",id:"actor",level:3},{value:"UseCase",id:"usecase",level:3},{value:"Module",id:"module",level:3},{value:"EnumX",id:"enumx",level:3},{value:"LocalEntity",id:"localentity",level:3},{value:"Comment",id:"comment",level:3},{value:"QualifiedName",id:"qualifiedname",level:3},{value:"Configuration",id:"configuration-1",level:2},{value:"Configuration",id:"configuration-2",level:3},{value:"DataBaseName",id:"databasename",level:3},{value:"Language",id:"language",level:3},{value:"PackagePath",id:"packagepath",level:3},{value:"Features",id:"features",level:3},{value:"Entity",id:"entity",level:2},{value:"Entity",id:"entity-1",level:3},{value:"ModuleImport",id:"moduleimport-1",level:3},{value:"ImportedEntity",id:"importedentity",level:3},{value:"LocalEntity",id:"localentity-1",level:3},{value:"FunctionEntity",id:"functionentity",level:3},{value:"Parameter",id:"parameter",level:3},{value:"Element",id:"element",level:3},{value:"Attribute",id:"attribute",level:3},{value:"EnumEntityAtribute",id:"enumentityatribute",level:3},{value:"EnumX",id:"enumx-1",level:3},{value:"AttributeEnum",id:"attributeenum",level:3},{value:"Relation (Abstract Class)",id:"relation-abstract-class",level:3},{value:"OneToOne",id:"onetoone",level:4},{value:"OneToMany",id:"onetomany",level:4},{value:"ManyToOne",id:"manytoone",level:4},{value:"ManyToMany",id:"manytomany",level:4},{value:"QualifiedName",id:"qualifiedname-1",level:3},{value:"Comment",id:"comment-1",level:3},{value:"UseCase",id:"usecase-1",level:2},{value:"Actor",id:"actor-1",level:3},{value:"UseCase",id:"usecase-2",level:3},{value:"Entity",id:"entity-2",level:3},{value:"QualifiedName",id:"qualifiedname-2",level:3},{value:"Kind (Enumeration)",id:"kind-enumeration",level:3}];function o(e){const n={code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["This class diagram provides a structured overview of the ",(0,s.jsx)(n.code,{children:"SPARK"})," grammar, illustrating how various components such as ",(0,s.jsx)(n.code,{children:"Model"}),", ",(0,s.jsx)(n.code,{children:"Configuration"}),", ",(0,s.jsx)(n.code,{children:"AbstractElement"}),", ",(0,s.jsx)(n.code,{children:"Module"}),", ",(0,s.jsx)(n.code,{children:"EnumX"}),", ",(0,s.jsx)(n.code,{children:"Actor"}),", and ",(0,s.jsx)(n.code,{children:"UseCase"})," interact and relate to each other. By defining ",(0,s.jsx)(n.code,{children:"AbstractElement"})," as a base for ",(0,s.jsx)(n.code,{children:"Module"})," and ",(0,s.jsx)(n.code,{children:"EnumX"}),", the diagram promotes a hierarchical and organized approach to modeling system components. Additionally, the inclusion of fragments like ",(0,s.jsx)(n.code,{children:"QualifiedName"})," and ",(0,s.jsx)(n.code,{children:"Comment"})," ensures that elements are uniquely identifiable and well-documented within the system."]}),"\n",(0,s.jsx)(n.h2,{id:"model",children:"Model"}),"\n",(0,s.jsx)(n.mermaid,{value:'classDiagram\r\n    %% Main Classes\r\n    class Model {\r\n        +Configuration configuration\r\n        +AbstractElement abstractElements*\r\n    }\r\n    \r\n    class Configuration {\r\n    }\r\n    \r\n    class AbstractElement {\r\n    }\r\n    \r\n    class ModuleImport {\r\n    }\r\n    \r\n    class Actor {\r\n    }\r\n    \r\n    class UseCase {\r\n    }\r\n    \r\n    class Module {\r\n        +QualifiedName name\r\n        +Comment comment\r\n        +AbstractElement elements*\r\n    }\r\n    \r\n    class EnumX {\r\n    }\r\n    \r\n    class LocalEntity {\r\n    }\r\n    \r\n    class Comment {\r\n        +STRING content\r\n    }\r\n    \r\n    class QualifiedName {\r\n    }\r\n    \r\n    %% Relationships\r\n    Model "1" --o "0..1" Configuration : has\r\n    Model "1" -- "*" AbstractElement : contains\r\n    Model "1" -- "*" ModuleImport : contains\r\n    Model "1" -- "*" Actor : contains\r\n    Model "1" -- "*" UseCase : contains\r\n    \r\n    AbstractElement <|-- Module\r\n    AbstractElement <|-- EnumX\r\n    \r\n    Module "1" --o "0..1" Comment : has\r\n    Module "1" -- "*" AbstractElement : contains\r\n    Module "1" -- "*" LocalEntity : contains'}),"\n",(0,s.jsx)(n.h3,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents the configuration settings of the system. This class is imported from the ",(0,s.jsx)(n.code,{children:"config"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),": (Attributes are defined within the ",(0,s.jsx)(n.code,{children:"config"})," package and are not detailed here.)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"abstractelement",children:"AbstractElement"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": An abstract representation of system elements. It serves as a base for more specific elements like ",(0,s.jsx)(n.code,{children:"Module"})," and ",(0,s.jsx)(n.code,{children:"EnumX"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Inheritance"}),": ",(0,s.jsx)(n.code,{children:"Module"})," and ",(0,s.jsx)(n.code,{children:"EnumX"})," inherit from ",(0,s.jsx)(n.code,{children:"AbstractElement"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"moduleimport",children:"ModuleImport"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents an import statement for modules. This class is imported from the ",(0,s.jsx)(n.code,{children:"modules"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),": (Attributes are defined within the ",(0,s.jsx)(n.code,{children:"modules"})," package and are not detailed here.)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"actor",children:"Actor"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents an actor in the system, typically a user or external system that interacts with the system's use cases."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),": (Attributes are defined within the ",(0,s.jsx)(n.code,{children:"entities"})," or ",(0,s.jsx)(n.code,{children:"usescases"})," package and are not detailed here.)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"usecase",children:"UseCase"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a use case within the system, defining a specific functionality or behavior that actors can perform."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),": (Attributes are defined within the ",(0,s.jsx)(n.code,{children:"usescases"})," package and are not detailed here.)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"module",children:"Module"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a module within the system, which can contain various elements such as other modules, enums, or local entities."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": A ",(0,s.jsx)(n.code,{children:"QualifiedName"})," that uniquely identifies the module."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"comment"}),": An optional ",(0,s.jsx)(n.code,{children:"Comment"})," providing additional information about the module."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"elements"}),": A collection of ",(0,s.jsx)(n.code,{children:"AbstractElement"})," or ",(0,s.jsx)(n.code,{children:"LocalEntity"})," instances contained within the module."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Has"}),": May contain one ",(0,s.jsx)(n.code,{children:"Comment"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Contains"}),": Can contain multiple ",(0,s.jsx)(n.code,{children:"AbstractElement"})," and ",(0,s.jsx)(n.code,{children:"LocalEntity"})," instances."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"enumx",children:"EnumX"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents an enumeration within the system. Inherits from ",(0,s.jsx)(n.code,{children:"AbstractElement"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),": (Attributes specific to the enumeration are defined within the ",(0,s.jsx)(n.code,{children:"entities"})," package and are not detailed here.)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"localentity",children:"LocalEntity"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a local entity within a module. This could be a class, interface, or other construct defined within a module."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),": (Attributes are defined within the ",(0,s.jsx)(n.code,{children:"entities"})," package and are not detailed here.)"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"comment",children:"Comment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a comment within the grammar, providing additional context or explanations for modules."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"content"}),": A string containing the comment text."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"qualifiedname",children:"QualifiedName"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a qualified name used to uniquely identify elements within the system. Imported from the ",(0,s.jsx)(n.code,{children:"terminals"})," package."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),": (Attributes are defined within the ",(0,s.jsx)(n.code,{children:"terminals"})," package and are not detailed here.)"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-1",children:"Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["This class diagram provides a clear and organized view of the ",(0,s.jsx)(n.code,{children:"Configuration"})," class within the ",(0,s.jsx)(n.code,{children:"SPARK"})," grammar, demonstrating how it integrates various fragments to encapsulate different aspects of the system's configuration. By using fragments such as ",(0,s.jsx)(n.code,{children:"DataBaseName"}),", ",(0,s.jsx)(n.code,{children:"Language"}),", ",(0,s.jsx)(n.code,{children:"PackagePath"}),", and ",(0,s.jsx)(n.code,{children:"Features"}),", the model promotes reusability and consistency, ensuring that common configuration patterns are maintained across different components of the system. The optional association between ",(0,s.jsx)(n.code,{children:"Features"})," and ",(0,s.jsx)(n.code,{children:"Entity"})," allows for enhanced flexibility, enabling features to be contextually linked to specific entities as needed."]}),"\n",(0,s.jsx)(n.mermaid,{value:'classDiagram\r\n    %% Fragments as Stereotyped Classes\r\n    class DataBaseName {\r\n        <<fragment>>\r\n        +STRING database_name\r\n    }\r\n    \r\n    class Language {\r\n        <<fragment>>\r\n        +LANGUAGETYPE language\r\n    }\r\n    \r\n    class PackagePath {\r\n        <<fragment>>\r\n        +LANGUAGETYPE package_path\r\n    }\r\n    \r\n    class Features {\r\n        <<fragment>>\r\n        +FEATURE_TYPE feature\r\n        +QualifiedName entity\r\n    }\r\n    \r\n    %% Main Classes\r\n    class Configuration {\r\n        +STRING name\r\n        +STRING description\r\n        +DataBaseName dataBaseName\r\n        +PackagePath packagePath\r\n        +Language language\r\n        +Features features\r\n    }\r\n    \r\n    class Entity {\r\n        +QualifiedName qualifiedName\r\n    }\r\n    \r\n    class QualifiedName {\r\n        +STRING id\r\n    }\r\n    \r\n    %% Relationships\r\n    Configuration "1" --\x3e "1" DataBaseName : includes\r\n    Configuration "1" --\x3e "1" PackagePath : includes\r\n    Configuration "1" --\x3e "1" Language : includes\r\n    Configuration "1" --\x3e "1" Features : includes\r\n    \r\n    Features "0..1" --\x3e "1" Entity : of\r\n'}),"\n",(0,s.jsx)(n.h3,{id:"configuration-2",children:"Configuration"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": The ",(0,s.jsx)(n.code,{children:"Configuration"})," class encapsulates the system's configuration settings. It includes various attributes that define the software's name, description, database configuration, package paths, programming language, and feature settings."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": A string representing the name of the software."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"description"}),": A string providing an overview or details about the software."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"dataBaseName"}),": An instance of the ",(0,s.jsx)(n.code,{children:"DataBaseName"})," fragment specifying the database name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"packagePath"}),": An instance of the ",(0,s.jsx)(n.code,{children:"PackagePath"})," fragment specifying the package path."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"language"}),": An instance of the ",(0,s.jsx)(n.code,{children:"Language"})," fragment specifying the programming language used."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"features"}),": An instance of the ",(0,s.jsx)(n.code,{children:"Features"})," fragment defining various features of the software."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Includes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"DataBaseName"}),": Defines the name of the database."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PackagePath"}),": Specifies the package path used in the system."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Language"}),": Indicates the programming language employed."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Features"}),": Details the features available, optionally associating them with specific entities."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"databasename",children:"DataBaseName"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Stereotype"}),": ",(0,s.jsx)(n.code,{children:"<<fragment>>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Specifies the name of the database used by the system."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"database_name"}),": A string representing the database name."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"language",children:"Language"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Stereotype"}),": ",(0,s.jsx)(n.code,{children:"<<fragment>>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Specifies the programming language used in the system."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"language"}),": An enumeration (",(0,s.jsx)(n.code,{children:"LANGUAGETYPE"}),") representing the programming language (e.g., Java, Python)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"packagepath",children:"PackagePath"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Stereotype"}),": ",(0,s.jsx)(n.code,{children:"<<fragment>>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Specifies the package path used in the system."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"package_path"}),": An enumeration (",(0,s.jsx)(n.code,{children:"LANGUAGETYPE"}),") representing the package path."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Stereotype"}),": ",(0,s.jsx)(n.code,{children:"<<fragment>>"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Defines features of the system, optionally associating them with specific entities."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"feature"}),": An enumeration (",(0,s.jsx)(n.code,{children:"FEATURE_TYPE"}),") representing the type of feature."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"entity"}),": An optional reference to an ",(0,s.jsx)(n.code,{children:"Entity"})," using a ",(0,s.jsx)(n.code,{children:"QualifiedName"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"entity",children:"Entity"}),"\n",(0,s.jsx)(n.mermaid,{value:'classDiagram\r\n    %% Interfaces\r\n    class Entity {\r\n        <<interface>>\r\n    }\r\n\r\n    %% Fragments as Stereotyped Classes\r\n    class Comment {\r\n        +STRING content\r\n    }\r\n\r\n    %% Main Classes\r\n    class ModuleImport {\r\n        +STRING package_path\r\n        +STRING library\r\n        +STRING name\r\n        +ImportedEntity entities*\r\n    }\r\n\r\n    class ImportedEntity {\r\n        +STRING name\r\n    }\r\n\r\n    class LocalEntity {\r\n        +STRING name\r\n        +QualifiedName superType\r\n        +BOOL is_abstract\r\n        +Attribute attributes*\r\n        +EnumEntityAtribute enumEntityAttributes*\r\n        +Relation relations*\r\n        +FunctionEntity functions*\r\n    }\r\n\r\n    class FunctionEntity {\r\n        +STRING name\r\n        +DATATYPE response\r\n        +Parameter parameters*\r\n    }\r\n\r\n    class Parameter {\r\n        +Element elements*\r\n    }\r\n\r\n    class Element {\r\n        +STRING name\r\n        +DATATYPE type\r\n    }\r\n\r\n    class Attribute {\r\n        +STRING name\r\n        +DATATYPE type\r\n        +STRING fullName\r\n        +BOOL unique\r\n        +BOOL blank\r\n        +INT max\r\n        +INT min\r\n    }\r\n\r\n    class EnumEntityAtribute {\r\n        +STRING name\r\n        +EnumX type\r\n    }\r\n\r\n    class EnumX {\r\n        +STRING name\r\n        +AttributeEnum attributes*\r\n    }\r\n\r\n    class AttributeEnum {\r\n        +STRING name\r\n        +STRING fullName\r\n    }\r\n\r\n    class Relation {\r\n        <<abstract>>\r\n    }\r\n\r\n    class OneToOne {\r\n        +STRING name\r\n        +QualifiedName type\r\n        +STRING fullName\r\n    }\r\n\r\n    class OneToMany {\r\n        +STRING name\r\n        +QualifiedName type\r\n        +STRING fullName\r\n    }\r\n\r\n    class ManyToOne {\r\n        +STRING name\r\n        +QualifiedName type\r\n        +STRING fullName\r\n    }\r\n\r\n    class ManyToMany {\r\n        +STRING name\r\n        +QualifiedName type\r\n        +STRING fullName\r\n        +QualifiedName by\r\n    }\r\n\r\n    class QualifiedName {\r\n        +STRING id\r\n    }\r\n\r\n    %% Relationships\r\n    ModuleImport "1" --\x3e "*" ImportedEntity : imports\r\n    LocalEntity ..|> Entity\r\n    ImportedEntity ..|> Entity\r\n\r\n    LocalEntity "1" --\x3e "0..1" Comment : has\r\n    LocalEntity "1" --\x3e "*" Attribute : has\r\n    LocalEntity "1" --\x3e "*" EnumEntityAtribute : has\r\n    LocalEntity "1" --\x3e "*" Relation : has\r\n    LocalEntity "1" --\x3e "*" FunctionEntity : has\r\n\r\n    FunctionEntity "1" --\x3e "*" Parameter : has\r\n    Parameter "1" --\x3e "*" Element : includes\r\n\r\n    EnumEntityAtribute "1" --\x3e "1" EnumX : uses\r\n\r\n    EnumX "1" --\x3e "*" AttributeEnum : has\r\n\r\n    %% Inheritance for Relation\r\n    Relation <|-- OneToOne\r\n    Relation <|-- OneToMany\r\n    Relation <|-- ManyToOne\r\n    Relation <|-- ManyToMany'}),"\n",(0,s.jsx)(n.h3,{id:"entity-1",children:"Entity"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": The ",(0,s.jsx)(n.code,{children:"Entity"})," interface is implemented by both ",(0,s.jsx)(n.code,{children:"LocalEntity"})," and ",(0,s.jsx)(n.code,{children:"ImportedEntity"}),". This allows these classes to be treated uniformly when establishing relationships and dependencies."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Inheritance"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LocalEntity"})," ..|> ",(0,s.jsx)(n.code,{children:"Entity"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ImportedEntity"})," ..|> ",(0,s.jsx)(n.code,{children:"Entity"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"moduleimport-1",children:"ModuleImport"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents an import statement for modules. It specifies the package path, library, module name, and the entities being imported."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"package_path"}),": The path of the package as a string."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"library"}),": The name of the library from which modules are imported."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the module."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"entities"}),": A list of ",(0,s.jsx)(n.code,{children:"ImportedEntity"})," instances representing the entities being imported."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Imports"}),": Can import multiple ",(0,s.jsx)(n.code,{children:"ImportedEntity"})," instances."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"importedentity",children:"ImportedEntity"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents an entity that is imported into a module. It holds the name of the entity."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the imported entity."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"localentity-1",children:"LocalEntity"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a local entity within a module. This could be a class, interface, or other construct defined within a module."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the entity."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"superType"}),": An optional reference to another ",(0,s.jsx)(n.code,{children:"Entity"})," that this entity extends."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"is_abstract"}),": A boolean flag indicating whether the entity is abstract."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"attributes"}),": A collection of ",(0,s.jsx)(n.code,{children:"Attribute"})," instances defining the entity's attributes."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"enumEntityAttributes"}),": A collection of ",(0,s.jsx)(n.code,{children:"EnumEntityAtribute"})," instances."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"relations"}),": A collection of ",(0,s.jsx)(n.code,{children:"Relation"})," instances defining relationships with other entities."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"functions"}),": A collection of ",(0,s.jsx)(n.code,{children:"FunctionEntity"})," instances defining the entity's functions."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Inherits"}),": Implements the ",(0,s.jsx)(n.code,{children:"Entity"})," interface."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Contains"}),": Can contain multiple ",(0,s.jsx)(n.code,{children:"Attribute"}),", ",(0,s.jsx)(n.code,{children:"EnumEntityAtribute"}),", ",(0,s.jsx)(n.code,{children:"Relation"}),", and ",(0,s.jsx)(n.code,{children:"FunctionEntity"})," instances."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Has"}),": May have an optional ",(0,s.jsx)(n.code,{children:"Comment"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"functionentity",children:"FunctionEntity"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a function within an entity, detailing its name, parameters, and return type."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the function."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"response"}),": The data type of the function's return value."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"parameters"}),": A collection of ",(0,s.jsx)(n.code,{children:"Parameter"})," instances defining the function's parameters."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Has"}),": Can contain multiple ",(0,s.jsx)(n.code,{children:"Parameter"})," instances."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"parameter",children:"Parameter"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a parameter of a function within an entity."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"elements"}),": A collection of ",(0,s.jsx)(n.code,{children:"Element"})," instances defining the parameter's elements."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Includes"}),": Can contain multiple ",(0,s.jsx)(n.code,{children:"Element"})," instances."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"element",children:"Element"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents an individual element within a parameter, specifying its name and type."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the element."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type"}),": The data type of the element."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"attribute",children:"Attribute"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents an attribute of an entity, detailing its name, type, and various constraints."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the attribute."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type"}),": The data type of the attribute."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fullName"}),": An optional string specifying the full name."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"unique"}),": An optional boolean indicating if the attribute is unique."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"blank"}),": An optional boolean indicating if the attribute can be blank."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"max"}),": An optional integer specifying the maximum value."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"min"}),": An optional integer specifying the minimum value."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"enumentityatribute",children:"EnumEntityAtribute"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents an attribute of an enumeration within an entity."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the enumeration attribute."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type"}),": A reference to an ",(0,s.jsx)(n.code,{children:"EnumX"})," instance indicating the type of the enumeration."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"enumx-1",children:"EnumX"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents an enumeration type within the system."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the enumeration."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"attributes"}),": A collection of ",(0,s.jsx)(n.code,{children:"AttributeEnum"})," instances defining the enumeration's attributes."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Contains"}),": Can contain multiple ",(0,s.jsx)(n.code,{children:"AttributeEnum"})," instances."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"attributeenum",children:"AttributeEnum"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a single attribute within an enumeration."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the enumeration value."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fullName"}),": An optional string specifying the full name of the enumeration value."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"relation-abstract-class",children:"Relation (Abstract Class)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": An abstract class representing relationships between entities. Specific types of relationships (",(0,s.jsx)(n.code,{children:"OneToOne"}),", ",(0,s.jsx)(n.code,{children:"OneToMany"}),", ",(0,s.jsx)(n.code,{children:"ManyToOne"}),", ",(0,s.jsx)(n.code,{children:"ManyToMany"}),") inherit from this class."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"onetoone",children:"OneToOne"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a one-to-one relationship between two entities."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the relationship."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type"}),": A reference to the related ",(0,s.jsx)(n.code,{children:"Entity"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fullName"}),": An optional string specifying the full name of the relationship."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"onetomany",children:"OneToMany"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a one-to-many relationship between two entities."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the relationship."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type"}),": A reference to the related ",(0,s.jsx)(n.code,{children:"Entity"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fullName"}),": An optional string specifying the full name of the relationship."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"manytoone",children:"ManyToOne"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a many-to-one relationship between two entities."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the relationship."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type"}),": A reference to the related ",(0,s.jsx)(n.code,{children:"Entity"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fullName"}),": An optional string specifying the full name of the relationship."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"manytomany",children:"ManyToMany"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a many-to-many relationship between two entities."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": The name of the relationship."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"type"}),": A reference to the related ",(0,s.jsx)(n.code,{children:"Entity"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fullName"}),": An optional string specifying the full name of the relationship."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"by"}),": An optional reference to a ",(0,s.jsx)(n.code,{children:"LocalEntity"})," that mediates the relationship."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"qualifiedname-1",children:"QualifiedName"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a qualified name used to uniquely identify elements within the system. It typically follows the format ",(0,s.jsx)(n.code,{children:"ID(.ID)*"}),", allowing for hierarchical naming."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"id"}),": A string representing the qualified name, composed of one or more identifiers separated by dots (e.g., ",(0,s.jsx)(n.code,{children:"com.example.project"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"comment-1",children:"Comment"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a comment within the grammar, providing additional context or explanations for modules or other elements."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"content"}),": A string containing the comment text."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"usecase-1",children:"UseCase"}),"\n",(0,s.jsxs)(n.p,{children:["This class diagram focuses on the ",(0,s.jsx)(n.code,{children:"Actor"})," and ",(0,s.jsx)(n.code,{children:"UseCase"})," elements defined in your ",(0,s.jsx)(n.code,{children:"SPARK"})," grammar. It includes related classes such as ",(0,s.jsx)(n.code,{children:"Entity"}),", ",(0,s.jsx)(n.code,{children:"QualifiedName"}),", and ",(0,s.jsx)(n.code,{children:"Comment"})," to fully represent the structure and relationships within your metamodel."]}),"\n",(0,s.jsx)(n.mermaid,{value:'classDiagram\r\n    %% Interfaces and Fragments\r\n    class Entity {\r\n        <<interface>>\r\n    }\r\n\r\n    class QualifiedName {\r\n        +STRING id\r\n    }\r\n\r\n    class Comment {\r\n        +STRING content\r\n    }\r\n\r\n    %% Main Classes\r\n    class Actor {\r\n        +QualifiedName name\r\n        +Entity entity\r\n        +Actor superType\r\n    }\r\n\r\n    class UseCase {\r\n        +QualifiedName name\r\n        +UseCase superType\r\n        +STRING fullName\r\n        +Kind kind\r\n        +Actor performed*\r\n        +Entity models*\r\n        +UseCase extend*\r\n        +UseCase include*\r\n    }\r\n\r\n    %% Enumerations\r\n    class Kind {\r\n        manage\r\n        view\r\n    }\r\n\r\n    %% Relationships\r\n    Actor "1" --\x3e "1" Entity : is\r\n    Actor "0..1" --\x3e "1" Actor : extends\r\n\r\n    UseCase "1" --\x3e "0..1" UseCase : extends\r\n    UseCase "1" --\x3e "0..1" UseCase : includes\r\n    UseCase "1" --\x3e "*" Actor : performed\r\n    UseCase "1" --\x3e "*" Entity : models\r\n    UseCase "0..*" --\x3e "1" UseCase : extend\r\n    UseCase "0..*" --\x3e "1" UseCase : include\r\n\r\n    %% Inheritance\r\n    Actor ..|> Entity\r\n'}),"\n",(0,s.jsx)(n.h3,{id:"actor-1",children:"Actor"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents an actor within the system, typically a user or external system that interacts with use cases."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": A ",(0,s.jsx)(n.code,{children:"QualifiedName"})," that uniquely identifies the actor."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"entity"}),": An ",(0,s.jsx)(n.code,{children:"Entity"})," that the actor is associated with."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"superType"}),": An optional reference to another ",(0,s.jsx)(n.code,{children:"Actor"})," that this actor extends."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Is"}),": Each ",(0,s.jsx)(n.code,{children:"Actor"})," is associated with one ",(0,s.jsx)(n.code,{children:"Entity"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extends"}),": An ",(0,s.jsx)(n.code,{children:"Actor"})," can optionally extend another ",(0,s.jsx)(n.code,{children:"Actor"}),", establishing an inheritance relationship."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"usecase-2",children:"UseCase"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a use case within the system, defining a specific functionality or behavior that actors can perform."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"name"}),": A ",(0,s.jsx)(n.code,{children:"QualifiedName"})," that uniquely identifies the use case."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"superType"}),": An optional reference to another ",(0,s.jsx)(n.code,{children:"UseCase"})," that this use case extends."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fullName"}),": A string representing the full name of the use case."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"kind"}),": An enumeration (",(0,s.jsx)(n.code,{children:"Kind"}),") indicating the type of use case (",(0,s.jsx)(n.code,{children:"manage"})," or ",(0,s.jsx)(n.code,{children:"view"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"performed"}),": A collection of ",(0,s.jsx)(n.code,{children:"Actor"})," instances that perform this use case."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"models"}),": A collection of ",(0,s.jsx)(n.code,{children:"Entity"})," instances that are involved in this use case."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"extend"}),": An optional collection of ",(0,s.jsx)(n.code,{children:"UseCase"})," instances that this use case extends."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"include"}),": An optional collection of ",(0,s.jsx)(n.code,{children:"UseCase"})," instances that this use case includes."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extends"}),": A ",(0,s.jsx)(n.code,{children:"UseCase"})," can optionally extend another ",(0,s.jsx)(n.code,{children:"UseCase"}),", establishing an inheritance relationship."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Includes"}),": A ",(0,s.jsx)(n.code,{children:"UseCase"})," can optionally include other ",(0,s.jsx)(n.code,{children:"UseCase"})," instances."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Performed By"}),": A ",(0,s.jsx)(n.code,{children:"UseCase"})," is performed by one or more ",(0,s.jsx)(n.code,{children:"Actor"})," instances."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Models"}),": A ",(0,s.jsx)(n.code,{children:"UseCase"})," involves one or more ",(0,s.jsx)(n.code,{children:"Entity"})," instances."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"entity-2",children:"Entity"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": An interface implemented by various entity classes (",(0,s.jsx)(n.code,{children:"LocalEntity"}),", ",(0,s.jsx)(n.code,{children:"ImportedEntity"}),", etc.). Represents any entity within the system."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),": None (serves as a marker interface)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Relationships"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Implemented By"}),": ",(0,s.jsx)(n.code,{children:"Actor"})," implements the ",(0,s.jsx)(n.code,{children:"Entity"})," interface."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"qualifiedname-2",children:"QualifiedName"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Represents a qualified name used to uniquely identify elements within the system. Typically follows the format ",(0,s.jsx)(n.code,{children:"ID(.ID)*"}),", allowing for hierarchical naming."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Attributes"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"id"}),": A string representing the qualified name, composed of one or more identifiers separated by dots (e.g., ",(0,s.jsx)(n.code,{children:"com.example.project"}),")."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"kind-enumeration",children:"Kind (Enumeration)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Defines the type of use case."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Values"}),":","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"manage"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"view"})}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>c});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);