"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[2904],{474:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>a,toc:()=>c});var s=n(4848),l=n(8453);const t={id:"03-Analysis-of-improvement-points-based-on-software-architecture-concepts",title:"Analysis of improvement points based on software architecture concepts",sidebar_label:"Analysis of improvement points based on software architecture concepts"},o=void 0,a={id:"code_wise/code_wise_extension/How was building/03-Analysis-of-improvement-points-based-on-software-architecture-concepts",title:"Analysis of improvement points based on software architecture concepts",description:"Scalability:",source:"@site/docs/code_wise/code_wise_extension/How was building/03-Analysis-of-improvement-points-based-on-software-architecture-concepts.md",sourceDirName:"code_wise/code_wise_extension/How was building",slug:"/code_wise/code_wise_extension/How was building/03-Analysis-of-improvement-points-based-on-software-architecture-concepts",permalink:"/leds-tools-public/code_wise/code_wise_extension/How was building/03-Analysis-of-improvement-points-based-on-software-architecture-concepts",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"03-Analysis-of-improvement-points-based-on-software-architecture-concepts",title:"Analysis of improvement points based on software architecture concepts",sidebar_label:"Analysis of improvement points based on software architecture concepts"},sidebar:"code_wise",previous:{title:"Explanation of each component and layer",permalink:"/leds-tools-public/code_wise/code_wise_extension/How was building/02-Explanation-of-each-component-and-layer"},next:{title:"Bibliographical references on the adopted architecture",permalink:"/leds-tools-public/code_wise/code_wise_extension/How was building/04-Bibliographical-references-on-the-adopted-architecture"}},r={},c=[{value:"Scalability:",id:"scalability",level:2},{value:"Problems:",id:"problems",level:3},{value:"Solutions",id:"solutions",level:3},{value:"Maintainability:",id:"maintainability",level:2},{value:"Problems:",id:"problems-1",level:3},{value:"Solutions:",id:"solutions-1",level:3},{value:"Testability:",id:"testability",level:2},{value:"Problems:",id:"problems-2",level:3},{value:"Solutions:",id:"solutions-2",level:3},{value:"Performance:",id:"performance",level:2},{value:"Problems:",id:"problems-3",level:3},{value:"Solutions:",id:"solutions-3",level:3}];function d(e){const i={h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h2,{id:"scalability",children:"Scalability:"}),"\n",(0,s.jsx)(i.p,{children:"System ability to handle increased load without losing performance."}),"\n",(0,s.jsx)(i.h3,{id:"problems",children:"Problems:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Analysis of PRs done synchronously and sequentially (one at a time)."}),"\n",(0,s.jsx)(i.li,{children:"Coupled code that makes parallelism or use in multiple instances difficult."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"solutions",children:"Solutions"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Use processing queues (e.g. RabbitMQ, Redis, Celery) to handle many PRs at the same time."}),"\n",(0,s.jsx)(i.li,{children:"Run parallel workers to process multiple PRs simultaneously."}),"\n",(0,s.jsx)(i.li,{children:"Store analysis results in cache or database to avoid unnecessary reprocessing."}),"\n",(0,s.jsx)(i.li,{children:"Structure the Model to process multiple files in a distributed or asynchronous manner."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"maintainability",children:"Maintainability:"}),"\n",(0,s.jsx)(i.p,{children:"Ease of understanding, modifying and evolving the system over time"}),"\n",(0,s.jsx)(i.h3,{id:"problems-1",children:"Problems:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Code with mixed responsibilities (e.g. analysis logic within the controller)."}),"\n",(0,s.jsx)(i.li,{children:"Lack of modularization of analysis rules."}),"\n",(0,s.jsx)(i.li,{children:"Lack of standardization for adding new sources (like Slack, GitLab, etc.)."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"solutions-1",children:"Solutions:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Separate each layer well in MVC, avoiding mixing responsibilities."}),"\n",(0,s.jsx)(i.li,{children:"Create independent modules for each type of validation (e.g. style, security, performance)."}),"\n",(0,s.jsx)(i.li,{children:"Use clear interfaces between layers, which allows you to change implementations without affecting the rest of the system."}),"\n",(0,s.jsx)(i.li,{children:"Document rules and flows to facilitate onboarding of new devs."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"testability",children:"Testability:"}),"\n",(0,s.jsx)(i.p,{children:"Ability to test the system in a simple, isolated and reliable way."}),"\n",(0,s.jsx)(i.h3,{id:"problems-2",children:"Problems:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Coupled code with side effects (e.g. performs analysis and sends comments to GitHub in the same method)."}),"\n",(0,s.jsx)(i.li,{children:"Lack of dependency injection (e.g. external APIs hardcoded in the code)."}),"\n",(0,s.jsx)(i.li,{children:"Difficulty simulating scenarios without making real calls."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"solutions-2",children:"Solutions:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Separate business logic from code that interacts with external services."}),"\n",(0,s.jsx)(i.li,{children:"Use dependency injection so you can mock external calls."}),"\n",(0,s.jsx)(i.li,{children:"Create unit tests for each module (mainly Model ones)."}),"\n",(0,s.jsx)(i.li,{children:"Have automated test coverage in Controllers."}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"performance",children:"Performance:"}),"\n",(0,s.jsx)(i.p,{children:"How quickly and efficiently the system responds to operations."}),"\n",(0,s.jsx)(i.h3,{id:"problems-3",children:"Problems:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Reanalyze all code with each PR, even if changes are small."}),"\n",(0,s.jsx)(i.li,{children:"Calling the Gemini API (or other agent) for each file separately (high cost and latency)."}),"\n",(0,s.jsx)(i.li,{children:"Making unnecessary GitHub API calls."}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"solutions-3",children:"Solutions:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Incremental analysis, where actually modified files are processed."}),"\n",(0,s.jsx)(i.li,{children:"Group code snippets by context before sending to the agent, reducing calls."}),"\n",(0,s.jsx)(i.li,{children:"Cache the results of repeated analyzes."}),"\n",(0,s.jsx)(i.li,{children:"Monitor call response times and identify bottlenecks."}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>a});var s=n(6540);const l={},t=s.createContext(l);function o(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);