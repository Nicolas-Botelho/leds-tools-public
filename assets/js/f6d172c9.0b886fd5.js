"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[4985],{9019:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=n(4848),r=n(8453);const s={sidebar_position:3,title:"Detailed Backlog and Metrics \u2014 MADE",description:"Detailed sprint backlog, prioritized features, and project management metrics for the MADE project."},d="Detailed Backlog and Metrics \u2014 MADE",l={id:"made/project_management/detailed_backlog_and_metrics",title:"Detailed Backlog and Metrics \u2014 MADE",description:"Detailed sprint backlog, prioritized features, and project management metrics for the MADE project.",source:"@site/docs/made/project_management/3_detailed_backlog_and_metrics.md",sourceDirName:"made/project_management",slug:"/made/project_management/detailed_backlog_and_metrics",permalink:"/leds-tools-public/made/project_management/detailed_backlog_and_metrics",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Detailed Backlog and Metrics \u2014 MADE",description:"Detailed sprint backlog, prioritized features, and project management metrics for the MADE project."},sidebar:"made",previous:{title:"Project Plan \u2014 MADE",permalink:"/leds-tools-public/made/project_management/made_project_plan"}},a={},c=[{value:"Delivery Timeline and Schedule",id:"delivery-timeline-and-schedule",level:2},{value:"Detailed Backlog by Sprint",id:"detailed-backlog-by-sprint",level:2},{value:"Major Delivery Milestones",id:"major-delivery-milestones",level:2},{value:"Backlog (prioritized)",id:"backlog-prioritized",level:2},{value:"Project Management Metrics",id:"project-management-metrics",level:2},{value:"Bugs vs Features",id:"bugs-vs-features",level:3},{value:"Cycle Time PR",id:"cycle-time-pr",level:3},{value:"Issues Opened vs Closed",id:"issues-opened-vs-closed",level:3},{value:"Success Metrics",id:"success-metrics",level:2}];function o(e){const i={h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"detailed-backlog-and-metrics--made",children:"Detailed Backlog and Metrics \u2014 MADE"})}),"\n",(0,t.jsx)(i.h2,{id:"delivery-timeline-and-schedule",children:"Delivery Timeline and Schedule"}),"\n",(0,t.jsx)(i.p,{children:"Our project follows a structured delivery schedule with built-in buffer time to ensure quality and avoid weekend work:"}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Delivery Schedule Policy:"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Target Delivery Dates"}),": Sprints are planned to complete on Wednesdays"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Final Delivery Deadline"}),": The actual project deadline is on Sunday (4 days after target delivery)"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Buffer Period"}),": The Wednesday-to-Sunday gap provides time for final testing, bug fixes, and quality assurance without requiring weekend work"]}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"This approach ensures we maintain work-life balance while having adequate time to address any last-minute issues before the final deadline."}),"\n",(0,t.jsx)(i.h2,{id:"detailed-backlog-by-sprint",children:"Detailed Backlog by Sprint"}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"Target Delivery"}),(0,t.jsx)(i.th,{children:"Final Deadline"}),(0,t.jsx)(i.th,{children:"Sprint"}),(0,t.jsx)(i.th,{children:"Backlog"}),(0,t.jsx)(i.th,{children:"Importance"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"24/09 (Wed)"}),(0,t.jsx)(i.td,{children:"28/09 (Sun)"}),(0,t.jsx)(i.td,{children:"1 (19/09 -> 24/09)"}),(0,t.jsx)(i.td,{children:"Github Template"}),(0,t.jsx)(i.td,{children:"2"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"15/10 (Wed)"}),(0,t.jsx)(i.td,{children:"19/10 (Sun)"}),(0,t.jsx)(i.td,{children:"2 (29/09 -> 15/10)"}),(0,t.jsx)(i.td,{children:"Map and implement Made components to Github API"}),(0,t.jsx)(i.td,{children:"3"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"15/10 (Wed)"}),(0,t.jsx)(i.td,{children:"19/10 (Sun)"}),(0,t.jsx)(i.td,{children:"2 (29/09 -> 15/10)"}),(0,t.jsx)(i.td,{children:"Map Made components to Jira"}),(0,t.jsx)(i.td,{children:"2"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"29/10 (Wed)"}),(0,t.jsx)(i.td,{children:"02/11 (Sun)"}),(0,t.jsx)(i.td,{children:"3 (20/10 -> 29/10)"}),(0,t.jsx)(i.td,{children:"Fix issue duplication"}),(0,t.jsx)(i.td,{children:"4"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"29/10 (Wed)"}),(0,t.jsx)(i.td,{children:"02/11 (Sun)"}),(0,t.jsx)(i.td,{children:"3 (20/10 -> 29/10)"}),(0,t.jsx)(i.td,{children:"Configure Jira API"}),(0,t.jsx)(i.td,{children:"3"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"12/11 (Wed)"}),(0,t.jsx)(i.td,{children:"16/11 (Sun)"}),(0,t.jsx)(i.td,{children:"4 (3/11 -> 12/11)"}),(0,t.jsx)(i.td,{children:"Map use cases to programming paradigm"}),(0,t.jsx)(i.td,{children:"2"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"12/11 (Wed)"}),(0,t.jsx)(i.td,{children:"16/11 (Sun)"}),(0,t.jsx)(i.td,{children:"4 (3/11 -> 12/11)"}),(0,t.jsx)(i.td,{children:"Implement mapped components generation in Jira API"}),(0,t.jsx)(i.td,{children:"3"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"26/11 (Wed)"}),(0,t.jsx)(i.td,{children:"30/11 (Sun)"}),(0,t.jsx)(i.td,{children:"5 (17/11 -> 26/11)"}),(0,t.jsx)(i.td,{children:"Apply programming paradigm"}),(0,t.jsx)(i.td,{children:"4"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"26/11 (Wed)"}),(0,t.jsx)(i.td,{children:"30/11 (Sun)"}),(0,t.jsx)(i.td,{children:"5 (17/11 -> 26/11)"}),(0,t.jsx)(i.td,{children:"Apply tests to Jira code"}),(0,t.jsx)(i.td,{children:"2"})]})]})]}),"\n",(0,t.jsx)(i.h2,{id:"major-delivery-milestones",children:"Major Delivery Milestones"}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"2nd delivery \u2014 Github Template Implementation (Sprint 1)"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Objective: Create and implement GitHub issue/PR templates"}),"\n",(0,t.jsx)(i.li,{children:"Acceptance criteria: GitHub templates ready and functional; standardized GitHub workflow implemented."}),"\n",(0,t.jsx)(i.li,{children:"Target delivery: 24/09/2025 (Wed)"}),"\n",(0,t.jsx)(i.li,{children:"Final deadline: 28/09/2025 (Sun)"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"3rd delivery \u2014 Map MADE components to GitHub/Jira and fix issue duplication (Sprints 2 & 3)"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Objective: Define and implement mapping between MADE components and GitHub/Jira artifacts, configure APIs, and implement duplicate detection/avoidance"}),"\n",(0,t.jsx)(i.li,{children:"Acceptance criteria: mapping documented; proof of concept that correctly creates issues/milestones in test repository; Jira API configured; integration execution without generating duplicates in multiple executions."}),"\n",(0,t.jsx)(i.li,{children:"Target delivery: 29/10/2025 (Wed)"}),"\n",(0,t.jsx)(i.li,{children:"Final deadline: 02/11/2025 (Sun)"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"4th delivery \u2014 Implement programming paradigm and comprehensive testing (Sprints 4 & 5)"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Objective: Map use cases to programming paradigm, implement mapped components generation in Jira API, apply programming paradigm, and implement comprehensive testing"}),"\n",(0,t.jsx)(i.li,{children:"Acceptance criteria: programming paradigm applied and documented; mapped components generation implemented in Jira API; test coverage implemented for Jira code."}),"\n",(0,t.jsx)(i.li,{children:"Target delivery: 26/11/2025 (Wed)"}),"\n",(0,t.jsx)(i.li,{children:"Final deadline: 30/11/2025 (Sun)"}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"backlog-prioritized",children:"Backlog (prioritized)"}),"\n",(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{children:"ID"}),(0,t.jsx)(i.th,{children:"Feature"}),(0,t.jsx)(i.th,{children:"Description"}),(0,t.jsx)(i.th,{children:"Importance"}),(0,t.jsx)(i.th,{children:"Proposal / Expected Result"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"1"}),(0,t.jsx)(i.td,{children:"Fix issue duplication"}),(0,t.jsx)(i.td,{children:"Compare existing issues and avoid creating duplicates"}),(0,t.jsx)(i.td,{children:"4"}),(0,t.jsx)(i.td,{children:"Reduce repository noise and avoid duplicate work"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"2"}),(0,t.jsx)(i.td,{children:"Apply programming paradigm"}),(0,t.jsx)(i.td,{children:"Implement programming paradigm across the codebase"}),(0,t.jsx)(i.td,{children:"4"}),(0,t.jsx)(i.td,{children:"Better code structure and maintainability"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"3"}),(0,t.jsx)(i.td,{children:"Map and implement Made components to Github API"}),(0,t.jsx)(i.td,{children:"Define and implement mapping between MADE components and GitHub artifacts"}),(0,t.jsx)(i.td,{children:"3"}),(0,t.jsx)(i.td,{children:"More natural integration with GitHub workflow"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"4"}),(0,t.jsx)(i.td,{children:"Implement mapped components generation in Jira API"}),(0,t.jsx)(i.td,{children:"Generate components in Jira based on mapping"}),(0,t.jsx)(i.td,{children:"3"}),(0,t.jsx)(i.td,{children:"Seamless Jira integration for project management"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"5"}),(0,t.jsx)(i.td,{children:"Configure Jira API"}),(0,t.jsx)(i.td,{children:"Set up and configure Jira API integration"}),(0,t.jsx)(i.td,{children:"3"}),(0,t.jsx)(i.td,{children:"Enable Jira functionality within MADE"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"6"}),(0,t.jsx)(i.td,{children:"Map use cases to programming paradigm"}),(0,t.jsx)(i.td,{children:"Define how use cases align with programming paradigm"}),(0,t.jsx)(i.td,{children:"2"}),(0,t.jsx)(i.td,{children:"Clear architectural guidelines"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"7"}),(0,t.jsx)(i.td,{children:"Map Made components to Jira"}),(0,t.jsx)(i.td,{children:"Define mapping between MADE components and Jira artifacts"}),(0,t.jsx)(i.td,{children:"2"}),(0,t.jsx)(i.td,{children:"Consistent project management across platforms"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"8"}),(0,t.jsx)(i.td,{children:"Apply tests to Jira code"}),(0,t.jsx)(i.td,{children:"Implement comprehensive testing for Jira integration"}),(0,t.jsx)(i.td,{children:"2"}),(0,t.jsx)(i.td,{children:"Ensure reliability and quality of Jira features"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:"9"}),(0,t.jsx)(i.td,{children:"Github Template"}),(0,t.jsx)(i.td,{children:"Create and implement GitHub issue/PR templates"}),(0,t.jsx)(i.td,{children:"2"}),(0,t.jsx)(i.td,{children:"Standardized GitHub workflow and better issue management"})]})]})]}),"\n",(0,t.jsx)(i.h2,{id:"project-management-metrics",children:"Project Management Metrics"}),"\n",(0,t.jsx)(i.p,{children:"Our management team will use the following metrics to measure team productivity and project performance:"}),"\n",(0,t.jsx)(i.h3,{id:"bugs-vs-features",children:"Bugs vs Features"}),"\n",(0,t.jsx)(i.p,{children:"This metric tracks the ratio between bug fixes and new feature development over time. It helps us understand:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"How it works"}),': We categorize all issues and pull requests as either "bug" (fixing existing functionality) or "feature" (adding new functionality). The ratio is calculated as bugs/features over a specific time period (sprint, month, etc.).']}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"What it measures"}),": Code quality and development balance. A high bug-to-feature ratio may indicate technical debt or quality issues, while a very low ratio might suggest we're not addressing existing problems."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Target"}),": Maintain a healthy balance, typically aiming for 20-30% bugs to 70-80% features during active development phases."]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"cycle-time-pr",children:"Cycle Time PR"}),"\n",(0,t.jsx)(i.p,{children:"This metric measures the time it takes from when a pull request is created until it's merged and deployed."}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"How it works"}),": We track the timestamp from PR creation to final merge, including time spent in review, revisions, and approval processes."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"What it measures"}),": Development efficiency and team collaboration effectiveness. Shorter cycle times indicate smoother workflows and faster delivery."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Target"}),": Aim for average cycle time of 2-3 days for standard features, with critical fixes processed within 24 hours."]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"issues-opened-vs-closed",children:"Issues Opened vs Closed"}),"\n",(0,t.jsx)(i.p,{children:"This metric tracks the flow of work items through our project management system."}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"How it works"}),": We monitor the number of new issues created versus the number of issues resolved/closed over specific time periods. This includes both GitHub issues and Jira tickets when integrated."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"What it measures"}),": Team capacity and project health. A consistently higher opening rate than closing rate indicates potential resource constraints or scope creep."]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Target"}),": Maintain a balanced or slightly positive closing rate (more issues closed than opened) to prevent backlog growth and ensure steady progress."]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"success-metrics",children:"Success Metrics"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Deliveries completed on milestone dates with acceptance criteria met."}),"\n",(0,t.jsx)(i.li,{children:"Measurable reduction of issue duplication in tests (goal: < 1% duplicates generated)."}),"\n",(0,t.jsx)(i.li,{children:"Minimum unit test coverage in refactored modules (goal: 60%+ in critical areas)."}),"\n",(0,t.jsx)(i.li,{children:"Total development time within the estimated 100-hour limit."}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>d,x:()=>l});var t=n(6540);const r={},s=t.createContext(r);function d(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);