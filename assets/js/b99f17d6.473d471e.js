"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[6347],{1803:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=r(4848),s=r(8453);const i={title:"Use Example",sidebar_position:8},o="Use Exemple",a={id:"andes/new_documentation/andes_example",title:"Use Example",description:"Here you can find a example of the grammar used in the Andes' files.",source:"@site/docs/andes/new_documentation/andes_example.md",sourceDirName:"andes/new_documentation",slug:"/andes/new_documentation/andes_example",permalink:"/leds-tools-public/andes/new_documentation/andes_example",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"Use Example",sidebar_position:8},sidebar:"andes",previous:{title:"Andes GPS Project Lib Architecture",permalink:"/leds-tools-public/andes/new_documentation/andes-lib_DOCUMENTATION"},next:{title:"Project Management",permalink:"/leds-tools-public/andes/project_managment"}},u={},c=[];function m(e){const n={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"use-exemple",children:"Use Exemple"})}),"\n",(0,t.jsx)(n.p,{children:"Here you can find a example of the grammar used in the Andes' files."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-plaintext",children:'overview Todolist {\r\n  name: "ToDoList"\r\n  description: "System for organizing daily tasks"\r\n  purpose: "Help users manage their tasks in a simple, efficient, and organized way"\r\n  miniworld: "Users can register tasks, organize by categories, track deadlines and statuses"\r\n  Architecture: python\r\n}\r\n\r\nrequirements Requirements {\r\n    name: "ToDo Requirements"\r\n    description: "Requirements for the functioning of the To-Do List system"\r\n\r\n    functional_requirement RF01 {\r\n        description: "The system must allow users to register with name, email, and password"\r\n        priority: "High"\r\n    }\r\n\r\n    functional_requirement RF02 {\r\n        description: "The system must allow user authentication"\r\n        priority: "High"\r\n        depend: Requirements.RF01\r\n    }\r\n\r\n    functional_requirement RF03 {\r\n        description: "The system must allow users to create new tasks"\r\n        priority: "High"\r\n    }\r\n\r\n    functional_requirement RF04 {\r\n        description: "The system must allow users to edit existing tasks"\r\n        priority: "High"\r\n    }\r\n\r\n    functional_requirement RF05 {\r\n        description: "The system must allow users to delete tasks"\r\n        priority: "High"\r\n    }\r\n\r\n    functional_requirement RF06 {\r\n        description: "The system must list the user\'s tasks"\r\n        priority: "High"\r\n    }\r\n\r\n    functional_requirement RF07 {\r\n        description: "The system must allow changing the status of tasks"\r\n        priority: "High"\r\n    }\r\n\r\n    functional_requirement RF08 {\r\n        description: "The system must allow users to create and manage categories"\r\n        priority: "Medium"\r\n    }\r\n\r\n    functional_requirement RF09 {\r\n        description: "The system must allow filtering tasks by status, date, and category"\r\n        priority: "Medium"\r\n    }\r\n\r\n    functional_requirement RF10 {\r\n        description: "The system may send notifications about pending or upcoming tasks"\r\n        priority: "Low"\r\n    }\r\n\r\n    non_functional_requirement RNF01 {\r\n        description: "The system must have secure authentication with password encryption"\r\n        priority: "High"\r\n    }\r\n\r\n    non_functional_requirement RNF02 {\r\n        description: "It must be a responsive application, working well on desktop and mobile"\r\n        priority: "High"\r\n    }\r\n\r\n    non_functional_requirement RNF03 {\r\n        description: "The backend must be developed in Django"\r\n        priority: "High"\r\n    }\r\n\r\n    non_functional_requirement RNF04 {\r\n        description: "The frontend must be developed in React"\r\n        priority: "High"\r\n    }\r\n\r\n    non_functional_requirement RNF05 {\r\n        description: "The system must support at least 100 simultaneous users"\r\n        priority: "Medium"\r\n    }\r\n\r\n    non_functional_requirement RNF06 {\r\n        description: "Request response time must not exceed 2 seconds in 95% of cases"\r\n        priority: "High"\r\n    }\r\n}\r\n\r\nusecase Registration {\r\n    name: "Registration and Authentication"\r\n    description: "User registers and logs in"\r\n    requirements: Requirements.RF01, Requirements.RF02\r\n}\r\n\r\nusecase TaskManagement {\r\n    name: "Task Management"\r\n    description: "User creates, edits, deletes, and changes task statuses"\r\n    requirements: Requirements.RF03, Requirements.RF04\r\n}\r\n\r\nusecase TaskOrganization {\r\n    name: "Task Organization"\r\n    description: "User organizes tasks by category, date, and status"\r\n    requirements: Requirements.RF06, Requirements.RF08\r\n}\r\n\r\nusecase Notifications {\r\n    name: "Notifications"\r\n    description: "System sends reminders to the user"\r\n    requirements: Requirements.RF10\r\n\r\n    event EventX{\r\n        name: "Name"\r\n        action: "User Does Something", "System Responds With Something"\r\n    }\r\n}\r\n\r\nmodule ToDoApp {\r\n    description: "Main module of the To-Do List application"\r\n\r\n    enum Priority {\r\n        low\r\n        medium\r\n        high\r\n    }\r\n\r\n    enum Status {\r\n        pending\r\n        in_progress\r\n        completed\r\n        canceled\r\n    }\r\n\r\n    // Description of the User class\r\n    entity User {\r\n        name: string\r\n        _email: email\r\n        password: string\r\n    }\r\n\r\n    entity Category {\r\n        name: string\r\n        user OneToMany User\r\n    }\r\n\r\n    entity Task {\r\n        title: string\r\n        description: string\r\n        due_date: date\r\n        priority uses Priority\r\n        status uses Status\r\n        category ManyToOne Category\r\n        user ManyToOne User\r\n    }\r\n\r\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var t=r(6540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);