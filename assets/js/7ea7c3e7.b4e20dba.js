"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[3525],{3351:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=a(4848),r=a(8453);const s={sidebar_position:8,title:"Python Architecture"},t="Django Project Architecture",o={id:"spark/advanced_concepts/sparklib_advanced/backend/generated_arch/Python",title:"Python Architecture",description:"This document describes the backend project structure in Django, organized in layers to facilitate maintenance, testability, and component reuse.",source:"@site/docs/spark/advanced_concepts/3_sparklib_advanced/2_backend/4_generated_arch/2_Python.md",sourceDirName:"spark/advanced_concepts/3_sparklib_advanced/2_backend/4_generated_arch",slug:"/spark/advanced_concepts/sparklib_advanced/backend/generated_arch/Python",permalink:"/leds-tools-public/spark/advanced_concepts/sparklib_advanced/backend/generated_arch/Python",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Python Architecture"},sidebar:"spark",previous:{title:"Clean Architecture Csharp",permalink:"/leds-tools-public/spark/advanced_concepts/sparklib_advanced/backend/generated_arch/Csharp_Clean"},next:{title:"Minimal API Csharp",permalink:"/leds-tools-public/spark/advanced_concepts/sparklib_advanced/backend/generated_arch/Csharp_Minimal-API"}},d={},c=[{value:"Layered Architecture",id:"layered-architecture",level:2},{value:"Domain Layer \u2014 <code>apps/moranguinho/</code>",id:"domain-layer--appsmoranguinho",level:3},{value:"<code>models.py</code> \u2014 Data Models",id:"modelspy--data-models",level:4},{value:"<code>api_views.py</code> \u2014 API Controllers",id:"api_viewspy--api-controllers",level:4},{value:"<code>serializers.py</code> \u2014 Serialization and Validation",id:"serializerspy--serialization-and-validation",level:4},{value:"<code>pagination.py</code>, <code>utils.py</code>, <code>signals.py</code> \u2014 Supporting Features",id:"paginationpy-utilspy-signalspy--supporting-features",level:4},{value:"<code>test/</code> and <code>features/</code> \u2014 Testing Layer",id:"test-and-features--testing-layer",level:4},{value:"<code>migrations/</code> \u2014 Database Version Control",id:"migrations--database-version-control",level:4},{value:"Global Project Settings \u2014 <code>morango/</code>",id:"global-project-settings--morango",level:3},{value:"References",id:"references",level:2},{value:"Improvement Points",id:"improvement-points",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mermaid:"mermaid",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"django-project-architecture",children:"Django Project Architecture"})}),"\n",(0,i.jsxs)(n.p,{children:["This document describes the backend project structure in ",(0,i.jsx)(n.strong,{children:"Django"}),", organized in layers to facilitate maintenance, testability, and component reuse."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"layered-architecture",children:"Layered Architecture"}),"\n",(0,i.jsx)(n.mermaid,{value:'    graph TD\r\n    A["backend\\\\backend"]\r\n    \r\n    A --\x3e apps\r\n    A --\x3e features\r\n    A --\x3e logs\r\n    A --\x3e morango\r\n    A --\x3e static\r\n\r\n    apps --\x3e moranguinho\r\n    moranguinho --\x3e mig["migrations"]\r\n    moranguinho --\x3e test\r\n    moranguinho --\x3e admin["admin.py"]\r\n    moranguinho --\x3e api_urls["api_urls.py"]\r\n    moranguinho --\x3e api_views["api_views.py"]\r\n    moranguinho --\x3e apps_py["apps.py"]\r\n    moranguinho --\x3e models["models.py"]\r\n    moranguinho --\x3e pagination["pagination.py"]\r\n    moranguinho --\x3e serializers["serializers.py"]\r\n    moranguinho --\x3e signals["signals.py"]\r\n    moranguinho --\x3e utils["utils.py"]\r\n\r\n    test --\x3e unit\r\n    unit --\x3e agri_test["agricultor_tests.py"]\r\n    unit --\x3e prop_test["propriedade_tests.py"]\r\n\r\n    features --\x3e steps\r\n    features --\x3e feat1["Moranguinho_Agricultor.feature"]\r\n    features --\x3e feat2["Moranguinho_Propriedade.feature"]\r\n\r\n    logs --\x3e gitkeep[".gitkeep"]\r\n\r\n    morango --\x3e media\r\n    morango --\x3e settings\r\n    morango --\x3e staticfiles\r\n    morango --\x3e init_m["__init__.py"]\r\n    morango --\x3e asgi["asgi.py"]\r\n    morango --\x3e urls["urls.py"]\r\n    morango --\x3e wsgi["wsgi.py"]\r\n\r\n    static --\x3e init_s["__init__.py"]\r\n'}),"\n",(0,i.jsx)(n.p,{children:"The project follows a modular, domain-driven layered architecture. This structure facilitates the separation of responsibilities, system scalability, and ease of maintenance and testing. Below, we detail each layer and component with examples of their responsibilities."}),"\n",(0,i.jsxs)(n.h3,{id:"domain-layer--appsmoranguinho",children:["Domain Layer \u2014 ",(0,i.jsx)(n.code,{children:"apps/moranguinho/"})]}),"\n",(0,i.jsx)(n.p,{children:"This folder represents a Django application specific to a system domain: the management of farmers and properties. Each functionality related to this domain is grouped here, promoting modularity and functional cohesion."}),"\n",(0,i.jsxs)(n.h4,{id:"modelspy--data-models",children:[(0,i.jsx)(n.code,{children:"models.py"})," \u2014 Data Models"]}),"\n",(0,i.jsxs)(n.p,{children:["The models represent the core entities of the system, such as ",(0,i.jsx)(n.code,{children:"Farmer"})," and ",(0,i.jsx)(n.code,{children:"Property"}),". Each model is linked to a database table, and its attributes reflect the table's columns. Business rules related to data behavior may also be included here."]}),"\n",(0,i.jsxs)(n.h4,{id:"api_viewspy--api-controllers",children:[(0,i.jsx)(n.code,{children:"api_views.py"})," \u2014 API Controllers"]}),"\n",(0,i.jsx)(n.p,{children:"This file contains the interfaces that handle REST API requests. These controllers receive user requests, delegate logic to appropriate layers, and return responses. Examples include listing farmers, creating properties, and updating records."}),"\n",(0,i.jsxs)(n.h4,{id:"serializerspy--serialization-and-validation",children:[(0,i.jsx)(n.code,{children:"serializers.py"})," \u2014 Serialization and Validation"]}),"\n",(0,i.jsx)(n.p,{children:"Serializers convert Python objects into formats like JSON and handle both automatic and custom data validation. They act as an intermediary between database records and user-facing responses."}),"\n",(0,i.jsxs)(n.h4,{id:"paginationpy-utilspy-signalspy--supporting-features",children:[(0,i.jsx)(n.code,{children:"pagination.py"}),", ",(0,i.jsx)(n.code,{children:"utils.py"}),", ",(0,i.jsx)(n.code,{children:"signals.py"})," \u2014 Supporting Features"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"pagination.py"}),": Manages pagination of list views."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"utils.py"}),": Contains reusable utility functions (e.g., formatting, calculations)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"signals.py"}),": Handles automatic actions triggered by events (e.g., creation of a new farmer)."]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"test-and-features--testing-layer",children:[(0,i.jsx)(n.code,{children:"test/"})," and ",(0,i.jsx)(n.code,{children:"features/"})," \u2014 Testing Layer"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"test/"}),": Contains unit and integration tests for component isolation."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"features/"}),": Stores behavior-driven development (BDD) tests using Gherkin to simulate user behavior."]}),"\n"]}),"\n",(0,i.jsxs)(n.h4,{id:"migrations--database-version-control",children:[(0,i.jsx)(n.code,{children:"migrations/"})," \u2014 Database Version Control"]}),"\n",(0,i.jsx)(n.p,{children:"This folder includes Django migration files that track changes to the database schema over time, enabling safe evolution of the data model."}),"\n",(0,i.jsxs)(n.h3,{id:"global-project-settings--morango",children:["Global Project Settings \u2014 ",(0,i.jsx)(n.code,{children:"morango/"})]}),"\n",(0,i.jsx)(n.p,{children:"This directory contains the core configuration files of the Django project."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"settings.py"}),": Defines project-wide settings such as database configuration, installed apps, middleware, and REST framework settings."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"urls.py"}),": Defines main routes for the API and Django admin panel."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"wsgi.py"})," and ",(0,i.jsx)(n.code,{children:"asgi.py"}),": Handle communication between web servers and the application."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://docs.djangoproject.com/en/stable/",children:"Django Official Documentation"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://2023.djangocon.us/talks/decoding-ddd-a-three-tiered-approach-to-django-projects/",children:"Decoding DDD: A Three-Tiered Approach to Django Projects \u2013 DjangoCon US"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"improvement-points",children:"Improvement Points"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Project with growth potential"}),": Split the ",(0,i.jsx)(n.code,{children:"moranguinho"})," app into multiple smaller apps, such as ",(0,i.jsx)(n.code,{children:"farmers"}),", ",(0,i.jsx)(n.code,{children:"properties"}),", and ",(0,i.jsx)(n.code,{children:"reports"}),". Each app would target a specific subdomain, improving maintenance, cohesion, and testability."]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>t,x:()=>o});var i=a(6540);const r={},s=i.createContext(r);function t(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);