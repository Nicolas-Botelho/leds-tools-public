"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[9140],{5379:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var s=r(4848),t=r(8453);const i={},a="Grammar Tokens",o={id:"made/advanced_concepts/made_grammar_tokens",title:"Grammar Tokens",description:"\ud83d\udcda For DSL Authors: Want to write perfect .made files or extend the MADE language? This is your complete syntax reference with copy-paste examples!",source:"@site/docs/made/advanced_concepts/4_made_grammar_tokens.md",sourceDirName:"made/advanced_concepts",slug:"/made/advanced_concepts/made_grammar_tokens",permalink:"/leds-tools-public/made/advanced_concepts/made_grammar_tokens",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"made",previous:{title:"Library Architecture",permalink:"/leds-tools-public/made/advanced_concepts/made_lib_architecture"},next:{title:"Artifact Map",permalink:"/leds-tools-public/made/advanced_concepts/made_artifact_map"}},l={},d=[{value:"\ud83c\udfaf What You&#39;ll Learn",id:"-what-youll-learn",level:2},{value:"\ud83d\ude80 Why Grammar Matters",id:"-why-grammar-matters",level:2},{value:"\ud83d\udd27 Technical Foundation",id:"-technical-foundation",level:2},{value:"\ud83d\udcca Grammar Structure Overview",id:"-grammar-structure-overview",level:2},{value:"Main Grammar Entry Point",id:"main-grammar-entry-point",level:3},{value:"\ud83e\uddf1 Core Tokens - Your Building Blocks",id:"-core-tokens---your-building-blocks",level:2},{value:"1. Project Definition \ud83c\udfe2",id:"1-project-definition-",level:3},{value:"2. Team Structure \ud83d\udc65",id:"2-team-structure-",level:3},{value:"3. Process Definition \u2699\ufe0f",id:"3-process-definition-\ufe0f",level:3},{value:"4. Backlog Structure \ud83d\udccb",id:"4-backlog-structure-",level:3},{value:"5. TimeBox (Sprint) Definition \ud83d\udcc5",id:"5-timebox-sprint-definition-",level:3},{value:"6. Roadmap Structure \ud83d\uddfa\ufe0f",id:"6-roadmap-structure-\ufe0f",level:3},{value:"\ud83d\udd24 Terminal Definitions - The Basic Building Blocks",id:"-terminal-definitions---the-basic-building-blocks",level:2},{value:"Basic Types",id:"basic-types",level:3},{value:"Enumerations - Predefined Values",id:"enumerations---predefined-values",level:3},{value:"Helper Types - Advanced Patterns",id:"helper-types---advanced-patterns",level:3},{value:"\ud83d\udd17 Advanced Grammar Features",id:"-advanced-grammar-features",level:2},{value:"Cross-References - Linking Things Together",id:"cross-references---linking-things-together",level:3},{value:"Optional Properties - Flexibility Built In",id:"optional-properties---flexibility-built-in",level:3},{value:"Collections - Multiple Items",id:"collections---multiple-items",level:3},{value:"\ud83d\udee1\ufe0f Validation Rules - Keeping Your Data Clean",id:"\ufe0f-validation-rules---keeping-your-data-clean",level:2},{value:"Date Format Validation",id:"date-format-validation",level:3},{value:"Reference Validation",id:"reference-validation",level:3},{value:"\ud83d\ude80 Grammar Extension Points - Adding Your Own Features",id:"-grammar-extension-points---adding-your-own-features",level:2},{value:"Adding New Component Types",id:"adding-new-component-types",level:3},{value:"Adding New Properties to Existing Components",id:"adding-new-properties-to-existing-components",level:3},{value:"Best Practices for Extensions \ud83c\udfaf",id:"best-practices-for-extensions-",level:3},{value:"\ud83c\udf93 Summary - Your Grammar Toolkit",id:"-summary---your-grammar-toolkit",level:2},{value:"Quick Reference Card \ud83d\udccb",id:"quick-reference-card-",level:3},{value:"Common Patterns \ud83d\udd04",id:"common-patterns-",level:3},{value:"Troubleshooting Tips \ud83d\udd27",id:"troubleshooting-tips-",level:3}];function c(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"grammar-tokens",children:"Grammar Tokens"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udcda ",(0,s.jsx)(n.strong,{children:"For DSL Authors"}),": Want to write perfect ",(0,s.jsx)(n.code,{children:".made"})," files or extend the MADE language? This is your complete syntax reference with copy-paste examples!"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-what-youll-learn",children:"\ud83c\udfaf What You'll Learn"}),"\n",(0,s.jsx)(n.p,{children:"By the end of this page, you'll know:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Every token and syntax rule in the MADE DSL"}),"\n",(0,s.jsxs)(n.li,{children:["How to write syntactically correct ",(0,s.jsx)(n.code,{children:".made"})," files"]}),"\n",(0,s.jsx)(n.li,{children:"How to extend the grammar for custom needs"}),"\n",(0,s.jsx)(n.li,{children:"Common patterns and best practices"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-why-grammar-matters",children:"\ud83d\ude80 Why Grammar Matters"}),"\n",(0,s.jsxs)(n.p,{children:["Think of grammar as the ",(0,s.jsx)(n.strong,{children:"rules of a language"})," \ud83d\udcd6:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Tokens"})," are like words in a dictionary"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Grammar rules"})," are like sentence structure"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Validation"})," catches mistakes before they cause problems"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Extensions"}),' let you add new "words" to the language']}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Understanding grammar helps you:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsxs)(n.strong,{children:["Write valid ",(0,s.jsx)(n.code,{children:".made"})," files"]})," without syntax errors"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Understand error messages"})," when something goes wrong"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Extend MADE"})," with custom components"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Debug complex projects"})," more effectively"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-technical-foundation",children:"\ud83d\udd27 Technical Foundation"}),"\n",(0,s.jsx)(n.p,{children:"The MADE DSL uses Langium grammar to define its syntax. Langium is a powerful framework that turns grammar definitions into parsers, language servers, and VS Code extensions automatically!"}),"\n",(0,s.jsx)(n.h2,{id:"-grammar-structure-overview",children:"\ud83d\udcca Grammar Structure Overview"}),"\n",(0,s.jsx)(n.p,{children:"Here's how MADE's grammar is organized:"}),"\n",(0,s.jsx)(n.h3,{id:"main-grammar-entry-point",children:"Main Grammar Entry Point"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"grammar Made\r\n\r\nimport 'helpers'      # \ud83d\udee0\ufe0f Utility functions and common patterns\r\nimport 'terminals'    # \ud83d\udcdd Basic building blocks (strings, dates, numbers)\r\nimport 'projects'     # \ud83c\udfe2 Project definitions\r\nimport 'backlog'      # \ud83d\udccb Work breakdown structures\r\nimport 'processes'    # \u2699\ufe0f Workflow definitions\r\nimport 'timebox'      # \ud83d\udcc5 Sprint and iteration management\r\nimport 'team'         # \ud83d\udc65 People and roles\r\nimport 'roadmap'      # \ud83d\uddfa\ufe0f Long-term planning\r\n\r\nentry Model:\r\n    (project=Project)                                    # Every .made file needs a project\r\n    (components+=(Team|Process|Backlog|TimeBox|Roadmap))* # Plus any number of these components\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,s.jsx)(n.strong,{children:"Think of it as"}),": A ",(0,s.jsx)(n.code,{children:".made"})," file is like a ",(0,s.jsx)(n.strong,{children:"project folder"})," that must contain one project description and can contain any number of supporting documents (teams, backlogs, processes, etc.)."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-core-tokens---your-building-blocks",children:"\ud83e\uddf1 Core Tokens - Your Building Blocks"}),"\n",(0,s.jsx)(n.h3,{id:"1-project-definition-",children:"1. Project Definition \ud83c\udfe2"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What it does"}),": Defines the overall project information"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"Project:\r\n    'project' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        ('startDate:' startDate=DATE)?\r\n        ('dueDate:' dueDate=DATE)?\r\n        ('completedDate:' completedDate=DATE)?\r\n    '}';\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Copy-Paste Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'project MyAwesomeProject {\r\n    name: "E-commerce Platform"\r\n    description: "Building a modern online shopping experience"\r\n    startDate: 2024-01-15\r\n    dueDate: 2024-12-31\r\n}\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,s.jsx)(n.strong,{children:"Grammar Notes"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"id=ID"})," means you give your project a unique identifier"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"?"})," means optional - you don't have to include all fields"]}),"\n",(0,s.jsxs)(n.li,{children:["Dates must be in ",(0,s.jsx)(n.code,{children:"YYYY-MM-DD"})," format"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"2-team-structure-",children:"2. Team Structure \ud83d\udc65"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What it does"}),": Defines who's working on the project"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"Team:\r\n    'team' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        (teammember+=TeamMember)*\r\n    '}';\r\n\r\nTeamMember:\r\n    'teammember' id=ID '{'\r\n        'name:' name=STRING\r\n        'email:' email=STRING\r\n        ('discord:' discord=STRING)?\r\n    '}';\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Copy-Paste Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'team DevelopmentTeam {\r\n    name: "Core Development Team"\r\n    description: "Full-stack developers and designers"\r\n    \r\n    teammember alice {\r\n        name: "Alice Johnson"\r\n        email: "alice@company.com"\r\n        discord: "alice#1234"\r\n    }\r\n    \r\n    teammember bob {\r\n        name: "Bob Smith"\r\n        email: "bob@company.com"\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83c\udfaf ",(0,s.jsx)(n.strong,{children:"Pro Tip"}),": Team member IDs (like ",(0,s.jsx)(n.code,{children:"alice"}),", ",(0,s.jsx)(n.code,{children:"bob"}),") can be referenced later when assigning work!"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"3-process-definition-\ufe0f",children:"3. Process Definition \u2699\ufe0f"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What it does"}),": Defines your team's workflow and activities"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"Process:\r\n    'process' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        (activities+=Activity)*\r\n    '}';\r\n\r\nActivity:\r\n    'activity' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        ('DefinitionDone:' definitionDone=STRING)?\r\n        ('DefinitionReady:' definitionReady=STRING)?\r\n        ('Learning:' learning=STRING)?\r\n        ('Label:' label=ID)?\r\n        (tasks+=TaskProcess)*\r\n    '}';\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Copy-Paste Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'process ScrumProcess {\r\n    name: "Agile Scrum Process"\r\n    description: "Our team\'s agile development workflow"\r\n    \r\n    activity Development {\r\n        name: "Development Phase"\r\n        description: "Writing and testing code"\r\n        DefinitionDone: "Code reviewed, tested, and merged"\r\n        DefinitionReady: "Requirements clear, design approved"\r\n        Learning: "Learn new frameworks as needed"\r\n        Label: development\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,s.jsx)(n.strong,{children:"Why define processes?"})," They create consistency and help new team members understand how work gets done."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"4-backlog-structure-",children:"4. Backlog Structure \ud83d\udccb"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What it does"}),": Breaks down work into manageable pieces"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"Backlog:\r\n    'backlog' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        (items+=BacklogItem)*\r\n    '}';\r\n\r\nEpic:\r\n    'epic' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        ('process:' process=[Process:QualifiedName])?\r\n        ('Criterions:' criterions=StringList)?\r\n        ('observation:' observation=STRING)?\r\n        (userstories+=UserStory)*\r\n    '}';\r\n\r\nUserStory:\r\n    'story' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        ('activity:' activity=[Activity:QualifiedName])?\r\n        ('depends:' depends=ReferenceList)?\r\n        ('Requirements:' requirements=StringList)?\r\n        ('Criterions:' criterions=StringList)?\r\n        ('observation:' observation=STRING)?\r\n        (tasks+=Task)*\r\n    '}';\r\n\r\nTask:\r\n    'task' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        ('task:' taskRef=[TaskProcess:QualifiedName])?\r\n        ('depends:' depends=ReferenceList)?\r\n        ('Deliverables:' deliverables=StringList)?\r\n    '}';\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Copy-Paste Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'backlog ProductBacklog {\r\n    name: "E-commerce Product Backlog"\r\n    description: "All features for our online store"\r\n    \r\n    epic UserManagement {\r\n        name: "User Account Management"\r\n        description: "Allow users to create and manage accounts"\r\n        Criterions: "Secure login", "Password recovery", "Profile editing"\r\n        \r\n        story UserRegistration {\r\n            name: "User Registration"\r\n            description: "New users can create accounts"\r\n            Requirements: "Email validation", "Strong passwords"\r\n            \r\n            task CreateRegistrationForm {\r\n                name: "Create Registration Form"\r\n                description: "Build HTML form with validation"\r\n                Deliverables: "HTML form", "CSS styling", "JavaScript validation"\r\n            }\r\n            \r\n            task SetupDatabase {\r\n                name: "Setup User Database"\r\n                description: "Create user table and APIs"\r\n                Deliverables: "Database schema", "API endpoints"\r\n            }\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83c\udfaf ",(0,s.jsx)(n.strong,{children:"Hierarchy Explained"}),": Epic \u2192 User Stories \u2192 Tasks. Like: Project \u2192 Features \u2192 Requirements \u2192 Implementation steps."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"5-timebox-sprint-definition-",children:"5. TimeBox (Sprint) Definition \ud83d\udcc5"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What it does"}),": Organizes work into time-bounded iterations"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"TimeBox:\r\n    'sprint' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        ('startDate:' startDate=DATE)?\r\n        ('endDate:' endDate=DATE)?\r\n        ('status:' status=SprintStatus)?\r\n        ('comment:' comment=STRING)?\r\n        ('completeDate:' completeDate=DATE)?\r\n        (sprintbacklog+=SprintBacklog)*\r\n    '}';\r\n\r\nSprintBacklog:\r\n    'sprintbacklog' id=ID '{'\r\n        (items+=SprintItem)*\r\n    '}';\r\n\r\nSprintItem:\r\n    'item' reference=[BacklogItem:QualifiedName] '{'\r\n        ('assignee:' assignee=[TeamMember:QualifiedName])?\r\n        ('dueDate:' dueDate=DATE)?\r\n        ('startDate:' startDate=DATE)?\r\n        ('completedDate:' completedDate=DATE)?\r\n        ('status:' status=ItemStatus)?\r\n        ('complexity:' complexity=Complexity)?\r\n    '}';\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Copy-Paste Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'sprint Sprint1 {\r\n    name: "Sprint 1 - User Foundation"\r\n    description: "Basic user management features"\r\n    startDate: 2024-01-15\r\n    endDate: 2024-01-29\r\n    status: IN_PROGRESS\r\n    \r\n    sprintbacklog Sprint1Backlog {\r\n        item ProductBacklog.UserManagement.UserRegistration {\r\n            assignee: DevelopmentTeam.alice\r\n            startDate: 2024-01-15\r\n            dueDate: 2024-01-25\r\n            status: DOING\r\n            complexity: MEDIUM\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udd17 ",(0,s.jsx)(n.strong,{children:"Reference Magic"}),": Notice ",(0,s.jsx)(n.code,{children:"ProductBacklog.UserManagement.UserRegistration"})," - this refers to the user story we defined earlier!"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"6-roadmap-structure-\ufe0f",children:"6. Roadmap Structure \ud83d\uddfa\ufe0f"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What it does"}),": Plans long-term milestones and releases"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"Roadmap:\r\n    'roadmap' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        (milestones+=Milestone)*\r\n    '}';\r\n\r\nMilestone:\r\n    'milestone' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        ('startDate:' startDate=DATE)?\r\n        ('dueDate:' dueDate=DATE)?\r\n        ('completedDate:' completedDate=DATE)?\r\n        ('status:' status=MilestoneStatus)?\r\n        ('depends:' depends=[Milestone:QualifiedName])?\r\n        (releases+=Release)*\r\n    '}';\r\n\r\nRelease:\r\n    'release' id=ID '{'\r\n        ('name:' name=STRING)?\r\n        ('description:' description=STRING)?\r\n        ('version:' version=STRING)?\r\n        ('dueDate:' dueDate=DATE)?\r\n        ('releasedDate:' releasedDate=DATE)?\r\n        ('status:' status=ReleaseStatus)?\r\n        (('item:' item=[BacklogItem:QualifiedName]) | \r\n         ('itens:' items=ReferenceList))?\r\n    '}';\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Copy-Paste Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'roadmap ProductRoadmap {\r\n    name: "E-commerce Platform Roadmap"\r\n    description: "Major milestones for our platform launch"\r\n    \r\n    milestone MVP {\r\n        name: "Minimum Viable Product"\r\n        description: "Basic store functionality"\r\n        startDate: 2024-01-15\r\n        dueDate: 2024-06-30\r\n        status: IN_PROGRESS\r\n        \r\n        release V1_0 {\r\n            name: "Version 1.0"\r\n            description: "First public release"\r\n            version: "1.0.0"\r\n            dueDate: 2024-06-30\r\n            status: IN_DEVELOPMENT\r\n            itens: ProductBacklog.UserManagement, ProductBacklog.ProductCatalog\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83c\udfaf ",(0,s.jsx)(n.strong,{children:"Strategic Planning"}),": Roadmaps help you think beyond sprints to major product milestones and releases."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-terminal-definitions---the-basic-building-blocks",children:"\ud83d\udd24 Terminal Definitions - The Basic Building Blocks"}),"\n",(0,s.jsxs)(n.p,{children:["These are the ",(0,s.jsx)(n.strong,{children:"fundamental data types"})," MADE understands:"]}),"\n",(0,s.jsx)(n.h3,{id:"basic-types",children:"Basic Types"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:'terminal ID: /[_a-zA-Z][\\w_]*/;     # Identifiers (like variable names)\r\nterminal STRING: /"[^"]*"/;          # Text in quotes\r\nterminal DATE: /\\d{4}-\\d{2}-\\d{2}/; # Dates in YYYY-MM-DD format\r\nterminal INT returns number: /[0-9]+/; # Whole numbers\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'# ID examples (identifiers)\r\nproject MyProject        # \u2705 Valid\r\nteam development_team    # \u2705 Valid\r\nepic user-management     # \u274c Invalid (no hyphens)\r\n\r\n# STRING examples\r\nname: "My Awesome Project"     # \u2705 Valid\r\ndescription: "Building cool stuff"  # \u2705 Valid\r\nname: My Project               # \u274c Invalid (needs quotes)\r\n\r\n# DATE examples  \r\nstartDate: 2024-01-15         # \u2705 Valid\r\ndueDate: 2024-12-31          # \u2705 Valid\r\nstartDate: "2024-01-15"      # \u274c Invalid (no quotes for dates)\r\nstartDate: 01/15/2024        # \u274c Invalid (wrong format)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"enumerations---predefined-values",children:"Enumerations - Predefined Values"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"enum SprintStatus:\r\n    PLANNED | IN_PROGRESS | CLOSED;\r\n\r\nenum ItemStatus:\r\n    TODO | DOING | DONE;\r\n\r\nenum Complexity:\r\n    LOW | MEDIUM | HIGH;\r\n\r\nenum MilestoneStatus:\r\n    PLANNED | IN_PROGRESS | COMPLETED | CANCELLED;\r\n\r\nenum ReleaseStatus:\r\n    PLANNED | IN_DEVELOPMENT | RELEASED | CANCELLED;\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Usage Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:"sprint Sprint1 {\r\n    status: IN_PROGRESS      # \u2705 Valid\r\n    # status: Active         # \u274c Invalid (not in enum)\r\n}\r\n\r\nitem MyTask {\r\n    status: DOING           # \u2705 Valid\r\n    complexity: HIGH        # \u2705 Valid\r\n    # complexity: EXTREME   # \u274c Invalid (not in enum)\r\n}\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,s.jsx)(n.strong,{children:"Why enums?"})," They prevent typos! MADE will catch if you write ",(0,s.jsx)(n.code,{children:"INPROGRESS"})," instead of ",(0,s.jsx)(n.code,{children:"IN_PROGRESS"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"helper-types---advanced-patterns",children:"Helper Types - Advanced Patterns"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"StringList:\r\n    values+=STRING (',' values+=STRING)*;\r\n\r\nReferenceList:\r\n    references+=[BacklogItem:QualifiedName] (',' references+=[BacklogItem:QualifiedName])*;\r\n\r\nQualifiedName:\r\n    ID ('.' ID)*;\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'# StringList - Multiple text values\r\nRequirements: "User authentication", "Data validation", "Error handling"\r\nCriterions: "Fast response", "Secure", "User-friendly"\r\n\r\n# ReferenceList - Multiple references to other items\r\ndepends: Epic1.Story1, Epic2.Story3, Epic1.Story2\r\n\r\n# QualifiedName - Hierarchical references  \r\nassignee: DevelopmentTeam.alice        # Team.Member\r\nprocess: ScrumProcess.Development      # Process.Activity\r\nitem: ProductBacklog.UserAuth.Login   # Backlog.Epic.Story\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-advanced-grammar-features",children:"\ud83d\udd17 Advanced Grammar Features"}),"\n",(0,s.jsx)(n.h3,{id:"cross-references---linking-things-together",children:"Cross-References - Linking Things Together"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What they do"}),": Let you connect different parts of your project"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"// Reference to team member\r\n'assignee:' assignee=[TeamMember:QualifiedName]\r\n\r\n// Reference to process activity  \r\n'activity:' activity=[Activity:QualifiedName]\r\n\r\n// Reference to other backlog items for dependencies\r\n'depends:' depends=ReferenceList\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Real-World Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:"# Assign work to specific team members\r\nitem UserLogin {\r\n    assignee: DevelopmentTeam.alice    # Links to team member\r\n}\r\n\r\n# Connect stories to processes\r\nstory PaymentProcess {\r\n    activity: EcommerceProcess.Payment  # Links to process activity\r\n}\r\n\r\n# Define dependencies between work items\r\nstory CheckoutFlow {\r\n    depends: UserLogin, PaymentSetup   # Must complete these first\r\n}\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83c\udfaf ",(0,s.jsx)(n.strong,{children:"Why references matter"}),": They create a connected web of project information that MADE can analyze for dependencies, workload, and progress tracking."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"optional-properties---flexibility-built-in",children:"Optional Properties - Flexibility Built In"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What they do"}),": Let you include information when relevant"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"// Optional description field\r\n('description:' description=STRING)?\r\n\r\n// Optional date fields\r\n('startDate:' startDate=DATE)?\r\n('dueDate:' dueDate=DATE)?\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Usage Patterns"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'# Minimal project definition\r\nproject QuickTest {\r\n    name: "Quick Test Project"\r\n    # No description, dates, etc. - that\'s fine!\r\n}\r\n\r\n# Detailed project definition\r\nproject ComplexProject {\r\n    name: "Enterprise Platform"\r\n    description: "Multi-year platform development"\r\n    startDate: 2024-01-01\r\n    dueDate: 2025-12-31\r\n    # All optional fields included\r\n}\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,s.jsx)(n.strong,{children:"Start simple, add detail later"}),": You can begin with minimal information and add details as your project evolves."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"collections---multiple-items",children:"Collections - Multiple Items"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What they do"}),": Let you group related items together"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"// Multiple team members\r\n(teammember+=TeamMember)*\r\n\r\n// Multiple tasks in user story\r\n(tasks+=Task)*\r\n\r\n// Multiple items in sprint backlog\r\n(items+=SprintItem)*\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Collection Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'team BigTeam {\r\n    name: "Large Development Team"\r\n    \r\n    # Multiple team members\r\n    teammember alice { name: "Alice" email: "alice@company.com" }\r\n    teammember bob { name: "Bob" email: "bob@company.com" }\r\n    teammember charlie { name: "Charlie" email: "charlie@company.com" }\r\n}\r\n\r\nstory ComplexStory {\r\n    name: "Complex Feature"\r\n    \r\n    # Multiple tasks\r\n    task DesignUI { name: "Design User Interface" }\r\n    task ImplementBackend { name: "Implement Backend Logic" }\r\n    task WriteTests { name: "Write Test Cases" }\r\n    task Documentation { name: "Update Documentation" }\r\n}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-validation-rules---keeping-your-data-clean",children:"\ud83d\udee1\ufe0f Validation Rules - Keeping Your Data Clean"}),"\n",(0,s.jsxs)(n.p,{children:["MADE automatically validates your ",(0,s.jsx)(n.code,{children:".made"})," files to catch common mistakes:"]}),"\n",(0,s.jsx)(n.h3,{id:"date-format-validation",children:"Date Format Validation"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What it catches"}),": Incorrectly formatted dates"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"export function validateDates(node: any, accept: any) {\r\n    const typeMeta = reflection.getTypeMetaData(node.$type);\r\n    for (const prop of typeMeta.properties) {\r\n        if (prop.name.match(/date$/i) && typeof node[prop.name] === 'string') {\r\n            const value = node[prop.name];\r\n            if (value && !/^\\d{4}-\\d{2}-\\d{2}$/.test(value)) {\r\n                accept('error', `Property \"${prop.name}\" must be in ISO 8601 format (YYYY-MM-DD)`, \r\n                      { node, property: prop.name });\r\n            }\r\n        }\r\n    }\r\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples of validation errors"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'project MyProject {\r\n    startDate: 2024/01/15    # \u274c Error: Use 2024-01-15\r\n    dueDate: "Jan 15, 2024"  # \u274c Error: Use 2024-01-15\r\n    startDate: 2024-01-15    # \u2705 Correct format\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"reference-validation",children:"Reference Validation"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"What it catches"}),": References to things that don't exist"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Cross-references validated at parse time"}),": If you reference ",(0,s.jsx)(n.code,{children:"DevelopmentTeam.alice"}),", alice must exist in DevelopmentTeam"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Scoped resolution"}),": References are checked within their proper context"]}),"\n",(0,s.jsxs)(n.li,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Dependency cycles detected"}),": Prevents Task A depending on Task B while Task B depends on Task A"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'team DevTeam {\r\n    teammember alice { name: "Alice" email: "alice@company.com" }\r\n}\r\n\r\nsprint Sprint1 {\r\n    sprintbacklog SB1 {\r\n        item SomeStory {\r\n            assignee: DevTeam.alice    # \u2705 Valid - alice exists\r\n            # assignee: DevTeam.bob    # \u274c Error - bob doesn\'t exist\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udea8 ",(0,s.jsx)(n.strong,{children:"Validation Benefits"}),": Catch mistakes early instead of finding out later when things don't work as expected!"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-grammar-extension-points---adding-your-own-features",children:"\ud83d\ude80 Grammar Extension Points - Adding Your Own Features"}),"\n",(0,s.jsx)(n.p,{children:"Want to extend MADE with custom components? Here's how:"}),"\n",(0,s.jsx)(n.h3,{id:"adding-new-component-types",children:"Adding New Component Types"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"When to use"}),": You need a new type of project component"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"// 1. Add to main grammar\r\nentry Model:\r\n    (project=Project)\r\n    (components+=(Team|Process|Backlog|TimeBox|Roadmap|CustomComponent))*;\r\n\r\n// 2. Define your new component\r\nCustomComponent:\r\n    'custom' id=ID '{'\r\n        'property:' property=STRING\r\n        ('optionalField:' optionalField=STRING)?\r\n        (items+=CustomItem)*\r\n    '}';\r\n\r\n// 3. Define sub-components if needed\r\nCustomItem:\r\n    'item' id=ID '{'\r\n        'value:' value=STRING\r\n    '}';\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"\ud83d\udcdd Real Example - Budget Component"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"// Add budget tracking to MADE\r\nBudget:\r\n    'budget' id=ID '{'\r\n        'name:' name=STRING\r\n        'totalAmount:' totalAmount=INT\r\n        ('currency:' currency=STRING)?\r\n        (expenses+=Expense)*\r\n    '}';\r\n\r\nExpense:\r\n    'expense' id=ID '{'\r\n        'description:' description=STRING\r\n        'amount:' amount=INT\r\n        ('category:' category=BudgetCategory)?\r\n        ('assignee:' assignee=[TeamMember:QualifiedName])?\r\n    '}';\r\n\r\nenum BudgetCategory:\r\n    DEVELOPMENT | MARKETING | INFRASTRUCTURE | MISC;\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Usage in .made files"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'budget ProjectBudget {\r\n    name: "Development Budget 2024"\r\n    totalAmount: 100000\r\n    currency: "USD"\r\n    \r\n    expense CloudServices {\r\n        description: "AWS hosting costs"\r\n        amount: 5000\r\n        category: INFRASTRUCTURE\r\n    }\r\n    \r\n    expense DeveloperSalaries {\r\n        description: "Team salaries"\r\n        amount: 80000\r\n        category: DEVELOPMENT\r\n        assignee: DevelopmentTeam.alice\r\n    }\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"adding-new-properties-to-existing-components",children:"Adding New Properties to Existing Components"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"When to use"}),": You want to add fields to existing components"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-langium",children:"// Extend existing Task component\r\nTask:\r\n    'task' id=ID '{'\r\n        'name:' name=STRING\r\n        ('description:' description=STRING)?\r\n        ('priority:' priority=Priority)?      # \ud83c\udd95 New property\r\n        ('estimatedHours:' hours=INT)?        # \ud83c\udd95 New property\r\n        ('tags:' tags=StringList)?            # \ud83c\udd95 New property\r\n        // ... existing properties\r\n    '}';\r\n\r\n// Add new enum for priority\r\nenum Priority:\r\n    LOW | MEDIUM | HIGH | CRITICAL;\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Updated usage"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-made",children:'task CriticalBugFix {\r\n    name: "Fix payment processing bug"\r\n    description: "Critical issue affecting checkout"\r\n    priority: CRITICAL          # \ud83c\udd95 New field\r\n    estimatedHours: 8           # \ud83c\udd95 New field\r\n    tags: "bugfix", "critical"  # \ud83c\udd95 New field\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"best-practices-for-extensions-",children:"Best Practices for Extensions \ud83c\udfaf"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Do \u2705"}),(0,s.jsx)(n.th,{children:"Don't \u274c"}),(0,s.jsx)(n.th,{children:"Why"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Add optional fields first"})}),(0,s.jsx)(n.td,{children:"Break existing syntax"}),(0,s.jsx)(n.td,{children:"Maintains backward compatibility"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Use meaningful enum values"})}),(0,s.jsx)(n.td,{children:'Use generic names like "TYPE1"'}),(0,s.jsx)(n.td,{children:"Makes intent clear"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Follow existing naming patterns"})}),(0,s.jsx)(n.td,{children:"Invent new conventions"}),(0,s.jsx)(n.td,{children:"Consistency helps users"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Add validation rules"})}),(0,s.jsx)(n.td,{children:"Skip validation"}),(0,s.jsx)(n.td,{children:"Prevents bad data"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Document new components"})}),(0,s.jsx)(n.td,{children:"Assume users will figure it out"}),(0,s.jsx)(n.td,{children:"Good UX requires docs"})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"-summary---your-grammar-toolkit",children:"\ud83c\udf93 Summary - Your Grammar Toolkit"}),"\n",(0,s.jsx)(n.h3,{id:"quick-reference-card-",children:"Quick Reference Card \ud83d\udccb"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Element"}),(0,s.jsx)(n.th,{children:"Syntax"}),(0,s.jsx)(n.th,{children:"Example"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Project"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"project ID { ... }"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'project MyApp { name: "My App" }'})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Team"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"team ID { ... }"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"team Devs { teammember alice { ... } }"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Sprint"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"sprint ID { ... }"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'sprint Sprint1 { name: "First Sprint" }'})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Epic"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"epic ID { ... }"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'epic UserAuth { name: "User Authentication" }'})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"References"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"[Type:QualifiedName]"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"assignee: DevTeam.alice"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Lists"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'"item1", "item2"'})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:'tags: "urgent", "frontend"'})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Dates"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"YYYY-MM-DD"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"startDate: 2024-01-15"})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"common-patterns-",children:"Common Patterns \ud83d\udd04"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Start with project"}),": Every ",(0,s.jsx)(n.code,{children:".made"})," file needs exactly one project"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Define teams early"}),": You'll reference team members in sprints and assignments"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Build hierarchy"}),": Epic \u2192 Stories \u2192 Tasks follows natural work breakdown"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use references liberally"}),": Connect related items for rich analysis"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Add details gradually"}),": Start minimal, add optional fields as needed"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"troubleshooting-tips-",children:"Troubleshooting Tips \ud83d\udd27"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Error Type"}),(0,s.jsx)(n.th,{children:"Common Cause"}),(0,s.jsx)(n.th,{children:"Fix"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Syntax Error"})}),(0,s.jsx)(n.td,{children:"Missing quotes, brackets, or colons"}),(0,s.jsxs)(n.td,{children:["Check for ",(0,s.jsx)(n.code,{children:'"quotes"'})," around strings, ",(0,s.jsx)(n.code,{children:"{}"})," around blocks"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Reference Error"})}),(0,s.jsx)(n.td,{children:"Referencing something that doesn't exist"}),(0,s.jsx)(n.td,{children:"Ensure referenced items are defined first"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Date Format Error"})}),(0,s.jsx)(n.td,{children:"Wrong date format"}),(0,s.jsx)(n.td,{children:"Use YYYY-MM-DD format (e.g., 2024-01-15)"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Enum Error"})}),(0,s.jsx)(n.td,{children:"Invalid status/complexity value"}),(0,s.jsx)(n.td,{children:"Check valid enum values (e.g., TODO, DOING, DONE)"})]})]})]}),"\n",(0,s.jsx)(n.p,{children:"This grammar structure provides a solid foundation for the MADE DSL while maintaining flexibility for extensions and customizations. With these patterns, you can create rich, connected project descriptions that MADE can transform into powerful documentation and integrations! \ud83c\udfd7\ufe0f"})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var s=r(6540);const t={},i=s.createContext(t);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);