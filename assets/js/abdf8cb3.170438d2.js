"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[8646],{6859:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>a,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var o=i(4848),t=i(8453);const s={sidebar_position:2,title:"Installation Guide"},r=void 0,l={id:"code_wise/code_wise_lib/Using in CLI CW-PR",title:"Installation Guide",description:"Installation Guide",source:"@site/docs/code_wise/code_wise_lib/Using in CLI CW-PR.md",sourceDirName:"code_wise/code_wise_lib",slug:"/code_wise/code_wise_lib/Using in CLI CW-PR",permalink:"/leds-tools-public/code_wise/code_wise_lib/Using in CLI CW-PR",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Installation Guide"},sidebar:"code_wise",previous:{title:"Overview",permalink:"/leds-tools-public/code_wise/code_wise_lib/Overview CW-PR"},next:{title:"VS Code Guide",permalink:"/leds-tools-public/code_wise/code_wise_lib/Using in VSCODE CW-PR"}},c={},d=[{value:"Installation Guide",id:"installation-guide",level:2},{value:"Step 1: Prerequisites",id:"step-1-prerequisites",level:3},{value:"Step 2: Setting Up Your Repository",id:"step-2-setting-up-your-repository",level:3},{value:"2.1 Create and Use a Virtual Environment",id:"21-create-and-use-a-virtual-environment",level:4},{value:"2.2 Install the CodeWise Tool",id:"22-install-the-codewise-tool",level:4},{value:"2.3 Configure the API Key (.env)",id:"23-configure-the-api-key-env",level:4},{value:"Important Note: The CodeWise tool expects your remotes to follow the standard GitHub convention:",id:"important-note-the-codewise-tool-expects-your-remotes-to-follow-the-standard-github-convention",level:2},{value:"2.4 Now \u2014 only once \u2014 Activate Automation in the Repository with a command.",id:"24-now--only-once--activate-automation-in-the-repository-with-a-command",level:4}];function h(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"installation-guide",children:"Installation Guide"}),"\n",(0,o.jsx)(n.p,{children:"Follow these steps to install and configure CodeWise in any of your repositories."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.p,{children:["Lib: ",(0,o.jsx)(n.a,{href:"https://pypi.org/project/codewise-lib",children:"https://pypi.org/project/codewise-lib"})]}),"\n",(0,o.jsx)(n.h3,{id:"step-1-prerequisites",children:"Step 1: Prerequisites"}),"\n",(0,o.jsx)(n.p,{children:"Before you start, ensure you have the following tools installed on your system:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Python"})," (version 3.11 or higher)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Git"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsxs)(n.strong,{children:["GitHub CLI (",(0,o.jsx)(n.code,{children:"gh"}),")"]}),": After installing from (",(0,o.jsx)(n.a,{href:"https://cli.github.com",children:"https://cli.github.com"}),"), log in with your GitHub account by running ",(0,o.jsx)(n.code,{children:"gh auth login"})," in your terminal (you only need to do this once per PC)."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"step-2-setting-up-your-repository",children:"Step 2: Setting Up Your Repository"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"For each new repository where you want to use CodeWise, follow the steps below."})}),"\n",(0,o.jsxs)(n.p,{children:['"',(0,o.jsx)(n.em,{children:"It's always a good idea to create a virtual environment in the root folder of the new repository to avoid dependency conflicts."}),'"']}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"21-create-and-use-a-virtual-environment",children:"2.1 Create and Use a Virtual Environment"}),"\n",(0,o.jsxs)(n.p,{children:["To avoid conflicts with other Python projects, use a virtual environment (",(0,o.jsx)(n.code,{children:"venv"}),")."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"To Create the Environment:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["This command creates a ",(0,o.jsx)(n.code,{children:".venv"})," folder with a clean Python installation. Do this only once per repository.\r\n",(0,o.jsx)(n.em,{children:'Remember that ".venv" is the name of the created folder; you can choose any other name for it.'})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["(",(0,o.jsx)(n.strong,{children:"inside the repository root where the .git folder is"}),")"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# On Windows\r\npy -m venv .venv\r\n\r\n# On Linux/WSL\r\npython3 -m venv .venv\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"To Activate the Environment:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Whenever you work on the project, you need to activate the environment."}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Tip for Windows/PowerShell:"})," If the activation command gives an execution policy error, run this command first: ",(0,o.jsx)(n.code,{children:"Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# On Windows (PowerShell)\r\n.\\.venv\\Scripts\\activate\r\n\r\n# On Linux/WSL\r\nsource .venv/bin/activate\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.em,{children:["You'll know it worked because the name ",(0,o.jsx)(n.code,{children:"(.venv)"})," will appear at the beginning of your terminal line."]})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"22-install-the-codewise-tool",children:"2.2 Install the CodeWise Tool"}),"\n",(0,o.jsxs)(n.p,{children:["With the virtual environment active, install the library with ",(0,o.jsx)(n.code,{children:"pip"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"pip install codewise-lib\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"It may take a while to install all dependencies the first time."})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.em,{children:["After installing the library, you can confirm everything is working with the command ",(0,o.jsx)(n.code,{children:"codewise-help"})]})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"23-configure-the-api-key-env",children:"2.3 Configure the API Key (.env)"}),"\n",(0,o.jsx)(n.p,{children:"For the AI to work, you need to configure your Google Gemini API key."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"In the root of your project"}),", create a file called ",(0,o.jsx)(n.code,{children:".env"}),". You can use the following commands in the terminal:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Windows"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"notepad .env\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Linux/WSL"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"touch .env && nano .env\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Inside the ",(0,o.jsx)(n.code,{children:".env"})," file, paste the following content, add your key, and save:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"GEMINI_API_KEY=YOUR_KEY_HERE\r\nMODEL_NAME=gemini-2.0-flash\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["\u26a0\ufe0f ",(0,o.jsx)(n.strong,{children:"Important:"})," Remember to add the ",(0,o.jsx)(n.code,{children:".env"})," file to your ",(0,o.jsx)(n.code,{children:".gitignore"}),' so you don\u2019t push your secret key to GitHub, and make sure it\u2019s an actual "ENV file" and not ',(0,o.jsx)(n.code,{children:".txt"})," or something similar."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"important-note-the-codewise-tool-expects-your-remotes-to-follow-the-standard-github-convention",children:"Important Note: The CodeWise tool expects your remotes to follow the standard GitHub convention:"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"origin:"})," Should point to your personal fork of the repository."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"upstream:"})," (if you add it to the repository) Should point to the main repository you forked from."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsxs)(n.strong,{children:["If you start a brand-new repository from scratch, you must do an initial push with ",(0,o.jsx)(n.code,{children:"git push --no-verify"})," before using the tool so that the GH CLI works properly when creating Pull Requests."]})}),"\n",(0,o.jsx)(n.h4,{id:"24-now--only-once--activate-automation-in-the-repository-with-a-command",children:"2.4 Now \u2014 only once \u2014 Activate Automation in the Repository with a command."}),"\n",(0,o.jsxs)(n.p,{children:["In the root of the project where the ",(0,o.jsx)(n.code,{children:".git"})," folder is, run:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"codewise-init --all\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Use this command whenever you want to change where the PULL REQUEST WILL BE CREATED in the pre-push hooks, because if you add an upstream remote you will need to switch which remote the PR will be generated for."})}),"\n",(0,o.jsx)(n.p,{children:"Here is the Pull Request target configuration:"}),"\n",(0,o.jsxs)(n.p,{children:["If your repository has an upstream remote configured, the installer will ask after you run ",(0,o.jsx)(n.code,{children:"codewise-init --all"})," to set the default pre-push hook behavior:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"An 'upstream' remote was detected.\r\nWhat should be the default behavior of 'git push' for this repository?\r\n1: Create Pull Request in 'origin' (your fork)\r\n2: Create Pull Request in 'upstream' (main project)\r\nChoose the default (1 or 2):\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Your choice will be saved in the hook, and you won\u2019t need to worry about it again. If there is no upstream, it will default to ",(0,o.jsx)(n.code,{children:"origin"}),"."]}),"\n",(0,o.jsx)(n.p,{children:"You\u2019ll see a success message confirming that automation is active."}),"\n",(0,o.jsx)(n.p,{children:"With this command the pre-commit and pre-push files will already have been added to your repository hooks."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:"Everything is now working in the repository you configured.\r\nIf you want to install it in a new repository, just repeat the steps."}),"\n",(0,o.jsx)(n.h1,{id:"using-codewise",children:"Using CodeWise"}),"\n",(0,o.jsxs)(n.p,{children:["With the configuration complete, you now have access to the ",(0,o.jsx)(n.strong,{children:"codewise-lint"})," and ",(0,o.jsx)(n.strong,{children:"codewise-pr"})," commands both manually and automatically after installing the hooks."]}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Add your changes"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"After modifying your files, add them to the staging area:"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"git add .\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Here you can run the ",(0,o.jsx)(n.code,{children:"codewise-lint"})," command to analyze the files and make adjustments before committing."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Commit your changes"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'git commit -m "implement new feature"\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["At this moment, the ",(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"pre-commit"})," hook will be triggered"]}),", and ",(0,o.jsx)(n.code,{children:"codewise-lint"})," will run a quick analysis in your terminal."]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Push to GitHub"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"git push\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Now, the ",(0,o.jsxs)(n.strong,{children:[(0,o.jsx)(n.code,{children:"pre-push"})," hook will be triggered"]}),". ",(0,o.jsx)(n.code,{children:"codewise-pr"})," will ask which remote you want to push to if there is an upstream besides your ",(0,o.jsx)(n.code,{children:"origin"}),", and then it will create/update your Pull Request with a title, description, and technical analysis generated by AI."]}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var o=i(6540);const t={},s=o.createContext(t);function r(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);