"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[195],{8761:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>a,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var i=s(4848),r=s(8453);const t={sidebar_position:1,title:"Overview",description:"Presents the project`s developing planning."},d="Test.AI",l={id:"test_ai/testai_overview",title:"Overview",description:"Presents the project`s developing planning.",source:"@site/docs/test_ai/testai_overview.md",sourceDirName:"test_ai",slug:"/test_ai/testai_overview",permalink:"/leds-tools-public/test_ai/testai_overview",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Overview",description:"Presents the project`s developing planning."},sidebar:"test_ai",next:{title:"Getting started",permalink:"/leds-tools-public/test_ai/testai_guide"}},c={},o=[{value:"What is Test.AI",id:"what-is-testai",level:3},{value:"Key benefits:",id:"key-benefits",level:3},{value:"How to use in Visual Studio Code:",id:"how-to-use-in-visual-studio-code",level:3},{value:"Technologies Employed",id:"technologies-employed",level:3},{value:"CrewAI + Python",id:"crewai--python",level:2},{value:"Generating Gherkin Tests with CrewAI",id:"generating-gherkin-tests-with-crewai",level:2},{value:"What is the <code>.andes</code> file and how/where is it used",id:"what-is-the-andes-file-and-howwhere-is-it-used",level:3},{value:"What is CrewAI and how/where is it used",id:"what-is-crewai-and-howwhere-is-it-used",level:3},{value:"XUnit Test Generation with CrewAI",id:"xunit-test-generation-with-crewai",level:2},{value:"What is the <code>.feature</code> File and How/Where it is Used",id:"what-is-the-feature-file-and-howwhere-it-is-used",level:3},{value:"What is CrewAI and How/Where it is Used",id:"what-is-crewai-and-howwhere-it-is-used",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Presents the project`s developing planning."}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"testai",children:(0,i.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=GabrieldePaulaBrunetti.test-ai",children:"Test.AI"})})}),"\n",(0,i.jsx)(n.h3,{id:"what-is-testai",children:"What is Test.AI"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Test.AI"})," is a software that uses ",(0,i.jsx)(n.strong,{children:"language models (LLMs)"})," and artificial intelligence agents to efficiently generate automated test files. It operates in two main stages: ",(0,i.jsx)(n.strong,{children:"Gherkin File Generatio"}),"n and Step Generation in ",(0,i.jsx)(n.strong,{children:"C# using xUnit"}),", based on requirement documents in the ",(0,i.jsx)(n.strong,{children:".andes"})," format, as well as the generation of ",(0,i.jsx)(n.strong,{children:"IEEE-standard test plans."})]}),"\n",(0,i.jsx)(n.h3,{id:"key-benefits",children:"Key benefits:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Reduces test writing time."}),"\n",(0,i.jsx)(n.li,{children:"Generates consistent and readable test code."}),"\n",(0,i.jsx)(n.li,{children:"Produces IEEE-standard test plans."}),"\n",(0,i.jsx)(n.li,{children:"Integrates with VS Code and CLI for different usage scenarios."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"how-to-use-in-visual-studio-code",children:"How to use in Visual Studio Code:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Install the extension from the VS Code extensions tab."}),"\n",(0,i.jsxs)(n.li,{children:["Use a ",(0,i.jsx)(n.strong,{children:".andes"})," file or a Gherkin ",(0,i.jsx)(n.strong,{children:".feature"})," file."]}),"\n",(0,i.jsxs)(n.li,{children:["To use the ",(0,i.jsx)(n.strong,{children:"feateures"}),", follow the steps in ",(0,i.jsx)(n.a,{href:"/leds-tools-public/test_ai/testai_guide",children:"Getting Started"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"technologies-employed",children:"Technologies Employed"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Python"}),"\n",(0,i.jsx)(n.li,{children:"CrewAI"}),"\n",(0,i.jsx)(n.li,{children:"Nodejs"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.h2,{id:"crewai--python",children:[(0,i.jsx)(n.a,{href:"https://www.crewai.com",children:"CrewAI"})," + ",(0,i.jsx)(n.a,{href:"https://www.python.org",children:"Python"})]}),"\n",(0,i.jsx)(n.h2,{id:"generating-gherkin-tests-with-crewai",children:"Generating Gherkin Tests with CrewAI"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CrewAI \u2192"})," framework for orchestrating agents (writers, reviewers and managers)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Python 3 \u2192"})," main language."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dic/List \u2192"})," static typing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:".andes"})," (file) \u2192"]})," main input with the user case (use case to be transformed into test scenarios)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"YAML"})," \u2192"]})," defines agents, tasks and outputs."]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"what-is-the-andes-file-and-howwhere-is-it-used",children:["What is the ",(0,i.jsx)(n.code,{children:".andes"})," file and how/where is it used"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:".andes"})," file"]})," is an input document that contains the use case description that will serve as the basis for generating Gherkin tests."]}),"\n",(0,i.jsxs)(n.p,{children:["It is read at the script entrypoint ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"(__main__)"})})," via:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'with open(f"andes/{file}.andes") as file:\r\n   andes = file.read()\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The content of ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:".andes"})})," is passed as a parameter to the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"crew_gherkin"})})," function:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"resultado = crew_gherkin(andes, strings)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["In other words, ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:".andes"})})," \u2192 feeds the ",(0,i.jsx)(n.strong,{children:"writer/reviewer agents"}),", which then generate automated test scenarios."]}),"\n",(0,i.jsx)(n.h3,{id:"what-is-crewai-and-howwhere-is-it-used",children:"What is CrewAI and how/where is it used"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"CrewAI"})," is a library for coordinating multiple LLM Agents that interact with each other in a structured execution flow."]}),"\n",(0,i.jsxs)(n.p,{children:["In this code, it is the engine for collaborative ",(0,i.jsx)(n.strong,{children:"Gherkin test generation:"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Each ",(0,i.jsx)(n.strong,{children:"Agent"})," is loaded from YAML definitions (AgentLoader)."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Eg: ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"gherkin_writer"})})," writes the tests."]}),"\n",(0,i.jsxs)(n.li,{children:["E.g.: ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"gherkin_reviewer"})})," reviews the tests."]}),"\n",(0,i.jsxs)(n.li,{children:["E.g.: ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"manager_gherkin"})})," consolidates the final version."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Each ",(0,i.jsx)(n.strong,{children:"Task"})," defines an action to be performed by the agent."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ex.: ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"gherkin_code"})})," generates the initial code."]}),"\n",(0,i.jsxs)(n.li,{children:["E.g.: ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"gherkin_review"})})," evaluates and adjusts."]}),"\n",(0,i.jsxs)(n.li,{children:["E.g.: manager_gherkin_task generates the final artifact ",(0,i.jsx)(n.strong,{children:"(features/resposta.feature)"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Crew"})," is instantiated and triggers the flow:"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'crew: Crew = Crew(\r\n    agents=agents+[manager],\r\n    tasks=tasks+[final_task],\r\n    max_rpm=10,\r\n    output_log_file="crew_log.txt",\r\n    manager_llm=llm_low_temp,\r\n    process=Process.sequential,\r\n    verbose=True\r\n)\r\nresultado = crew.kickoff()\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["It coordinates the sequential execution of agents and tasks until the production of the ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:".feature"})," file."]})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This is an automated pipeline for transforming use cases described in ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:".andes"})," files"]})," into Gherkin test scenarios.\r\nThe code does this via ",(0,i.jsx)(n.strong,{children:"CrewAI"}),", orchestrating a team of agents (writers, reviewers and manager), who collaborate in multiple rounds of writing/revision until generating the final artifact:"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Expected output:"})," a ",(0,i.jsx)(n.strong,{children:".feature"})," file ready to be used in ",(0,i.jsx)(n.strong,{children:"BDD test automation."})]}),"\n",(0,i.jsx)(n.h2,{id:"xunit-test-generation-with-crewai",children:"XUnit Test Generation with CrewAI"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Python 3.x"})," \u2192 main programming language."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CrewAI"})," \u2192 orchestration of agents that write, review, and manage test code."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["Custom Loaders (",(0,i.jsx)(n.code,{children:"src.infrastructure.loaders"}),")"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"AgentLoader"})," \u2192 initializes agents."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TaskLoader"})," \u2192 loads tasks."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"LLM_Loader"})," \u2192 instantiates language models."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"read_yaml_strings"})," \u2192 loads YAML configuration."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"YAML"})," \u2192 defines agents, tasks, and output examples."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"External Files"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"features/*.feature"})," \u2192 main input, defines BDD scenarios."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"dtos/"})," \u2192 directory containing request/response classes (DTOs)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"docs/endpoints.txt"})," \u2192 contains API endpoints mapped to features."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.h3,{id:"what-is-the-feature-file-and-howwhere-it-is-used",children:["What is the ",(0,i.jsx)(n.code,{children:".feature"})," File and How/Where it is Used"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:".feature"})," file"]})," is the main input containing the ",(0,i.jsx)(n.strong,{children:"BDD scenario description"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["It is read at the script entrypoint (",(0,i.jsx)(n.code,{children:"__main__"}),"):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'with open(f"features/{file}.feature") as file:\r\n    feature = file.read()\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Its content is used in three stages:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Agent debate ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"(crew_xunit_debate)"})})," \u2192 agents discuss how to implement the test."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Info gatherer ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"(info_gatherer_crew)"})})," \u2192 automatically locates:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["DTOs inside the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"dtos/"})})," folder."]}),"\n",(0,i.jsxs)(n.li,{children:["Corresponding endpoint in ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"docs/endpoints.txt"})}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Code generation ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"(crew_xunit_generation)"})})," \u2192 creates, reviews, and refines XUnit code."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:".feature"})})," file acts as the seed that drives the entire test generation process."]}),"\n",(0,i.jsx)(n.h3,{id:"what-is-crewai-and-howwhere-it-is-used",children:"What is CrewAI and How/Where it is Used"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"CrewAI"})," is the core component coordinating collaborative work among LLM agents.\r\nIn this script, it is used in four main workflows:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"crew_xunit_debate"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Defines a ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"csharp_xunit_writer agent"})})," to create the initial test proposal."]}),"\n",(0,i.jsx)(n.li,{children:"Creates up to 3 discussion agents that debate different solutions."}),"\n",(0,i.jsxs)(n.li,{children:["Uses a ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"result_analysis_manager"})," agent"]})," to consolidate the final version."]}),"\n",(0,i.jsxs)(n.li,{children:["Produces an intermediate output at ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"modalidade_bolsa_crew.cs"}),"."]})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"info_gatherer_crew"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Defines specialized agents:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"API Path Finder"})," \u2192 reads ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"endpoints.txt"})})," and finds the API route for the feature."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"File Search Specialist"})," \u2192 searches DTOs in the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"dtos/"})})," directory."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Tasks executed:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"dto_file_find"})})," \u2192 extracts DTO class content."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"api_url_find"})})," \u2192 identifies the corresponding API URL."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Outputs are written to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"dto_code.txt"})})," \u2192 DTO code."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"api_url.txt"})})," \u2192 API URL."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"crew_xunit_generation"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Uses DTOs + API URL to generate XUnit test code."}),"\n",(0,i.jsxs)(n.li,{children:["Pipeline:","\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["Initial proposal ",(0,i.jsx)(n.code,{children:"(xunit_code_proposal)"})]})," \u2192 generates C# XUnit test code."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:["Review ",(0,i.jsx)(n.code,{children:"(xunit_review)"})]})," \u2192 refines the generated code."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Logs results in ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"crew_log.txt"})}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"manager_crew"})})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Consolidates results from three parallel executions of ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"crew_xunit_generation"})}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Uses the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"result_analysis_manager"})})," agent to produce the ",(0,i.jsx)(n.strong,{children:"final consolidated"})," test in:"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"resposta/VersionarModalidadeStepAI.cs\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This code implements an ",(0,i.jsx)(n.strong,{children:"intelligent pipeline for generating automated XUnit tests in C#"})," from ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:".feature"})})," specifications."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Expected output:"})," C# test code generated under ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"resposta/*.cs"})}),", derived from the ",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:".feature"})," file"]}),", the actual API endpoint, and corresponding DTOs."]})]})}function a(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>l});var i=s(6540);const r={},t=i.createContext(r);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);