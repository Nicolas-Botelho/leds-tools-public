"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[4538],{924:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var r=t(4848),s=t(8453);const a={title:"Frontend Management Metrics","sidebar-position":3},o="GQM (Goal, Question, Metric)",i={id:"spark/project_management/2025-2_team_management/frontend_team/metrics",title:"Frontend Management Metrics",description:"Goal",source:"@site/docs/spark/project_management/2025-2_team_management/frontend_team/3_metrics.md",sourceDirName:"spark/project_management/2025-2_team_management/frontend_team",slug:"/spark/project_management/2025-2_team_management/frontend_team/metrics",permalink:"/leds-tools-public/spark/project_management/2025-2_team_management/frontend_team/metrics",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Frontend Management Metrics","sidebar-position":3},sidebar:"spark",previous:{title:"PMC",permalink:"/leds-tools-public/spark/project_management/2025-2_team_management/frontend_team/pmc"},next:{title:"Release Plan",permalink:"/leds-tools-public/spark/project_management/future/release-plan"}},c={},l=[{value:"Goal",id:"goal",level:2},{value:"Question 1",id:"question-1",level:3},{value:"Question 2",id:"question-2",level:3}];function d(e){const n={br:"br",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"gqm-goal-question-metric",children:"GQM (Goal, Question, Metric)"})}),"\n",(0,r.jsx)(n.h2,{id:"goal",children:"Goal"}),"\n",(0,r.jsx)(n.p,{children:"Ensure progress tracking based on objective metrics and facilitate anticipated decisions about scope, deadlines, and priorities."}),"\n",(0,r.jsx)(n.h3,{id:"question-1",children:"Question 1"}),"\n",(0,r.jsx)(n.p,{children:"What is the rate of features completed over time?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Metric"}),": Completed Features per Total Features",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Acronym"}),": CF/TF",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Unit"}),": Percentage of Features",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Description"}),": Percentage indicating how many features have been completed compared to the total planned for delivery."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Metric"}),": Average Time to Complete a Feature",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Acronym"}),": ATCF",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Unit"}),": Day",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Description"}),": Average number of days required to complete a feature. The calculation is based on already delivered features. Counting starts at the start of the sprint."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"question-2",children:"Question 2"}),"\n",(0,r.jsx)(n.p,{children:"What is the rate of tasks completed per completed feature?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Metric"}),": Completed Tasks per Total Tasks of the Feature",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Acronym"}),": CT/TT",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Unit"}),": Percentage of Tasks",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Description"}),": Percentage indicating how many tasks have been completed compared to the total created for a feature."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Metric"}),": Average Tasks per Feature",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Acronym"}),": AT/F or Avg\r\n",(0,r.jsx)(n.strong,{children:"Unit"}),": Task/Feature",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Description"}),": Average number of tasks created per feature. The calculation considers both completed features and the feature currently in development."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Metric"}),": Completed Tasks per Average Tasks per Feature",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Acronym"}),": CT/Avg\r\n",(0,r.jsx)(n.strong,{children:"Unit"}),": Percentage of Tasks",(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"Description"}),": Percentage indicating how many tasks were completed compared to the average number of tasks usually created per feature."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Metric"}),": Task per Feature Deviation from Average per Feature\r\n",(0,r.jsx)(n.strong,{children:"Acronym"}),": TFD/Avg\r\n",(0,r.jsx)(n.strong,{children:"Unit"}),": Task\r\n",(0,r.jsx)(n.strong,{children:"Description"}),": Indicates how the number of tasks in a given feature differs from the average number of tasks usually created per feature."]}),"\n"]}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var r=t(6540);const s={},a=r.createContext(s);function o(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);