"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[7826],{6905:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var t=r(4848),s=r(8453);const i={},a="Library Architecture",o={id:"made/advanced_concepts/made_lib_architecture",title:"Library Architecture",description:"\ud83d\udd27 For Contributors: Ready to dive into MADE's processing engine? This guide shows you how the library transforms your project data into beautiful documentation and GitHub integrations!",source:"@site/docs/made/advanced_concepts/3_made_lib_architecture.md",sourceDirName:"made/advanced_concepts",slug:"/made/advanced_concepts/made_lib_architecture",permalink:"/leds-tools-public/made/advanced_concepts/made_lib_architecture",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"made",previous:{title:"Tool Architecture",permalink:"/leds-tools-public/made/advanced_concepts/made_tool_architecture"},next:{title:"Grammar Tokens",permalink:"/leds-tools-public/made/advanced_concepts/made_grammar_tokens"}},c={},l=[{value:"\ud83c\udfaf What You&#39;ll Learn",id:"-what-youll-learn",level:2},{value:"\ud83d\ude80 Why Library Architecture Matters",id:"-why-library-architecture-matters",level:2},{value:"\ud83d\udd27 Technical Foundation",id:"-technical-foundation",level:2},{value:"\ud83d\udcca Architecture Overview",id:"-architecture-overview",level:2},{value:"\ud83c\udfad The Processing Pipeline",id:"-the-processing-pipeline",level:3},{value:"\ud83c\udfd7\ufe0f Core Components",id:"\ufe0f-core-components",level:2},{value:"1. Data Models (<code>model/models.ts</code>) \ud83d\udccb",id:"1-data-models-modelmodelsts-",level:3},{value:"Primary Models - The Core Data Types",id:"primary-models---the-core-data-types",level:4},{value:"2. Report Manager (<code>index.ts</code>) \ud83c\udfaa",id:"2-report-manager-indexts-",level:3},{value:"Main Entry Points",id:"main-entry-points",level:4},{value:"Usage Examples",id:"usage-examples",level:4},{value:"3. Markdown Services (<code>markdown/</code>) \ud83d\udcdd",id:"3-markdown-services-markdown-",level:3},{value:"MarkdownService - The Documentation Orchestrator",id:"markdownservice---the-documentation-orchestrator",level:4},{value:"Specialized Documentation Services",id:"specialized-documentation-services",level:4},{value:"4. Chart Generation (<code>chart/</code>) \ud83d\udcca",id:"4-chart-generation-chart-",level:3},{value:"Chart Generator Examples",id:"chart-generator-examples",level:4},{value:"Available Chart Types",id:"available-chart-types",level:4},{value:"5. GitHub Integration (<code>service/</code>) \ud83d\ude80",id:"5-github-integration-service-",level:3},{value:"GitHubService - Data Extraction (GitHub \u2192 MADE)",id:"githubservice---data-extraction-github--made",level:4},{value:"GitHubPushService - Data Publishing (MADE \u2192 GitHub)",id:"githubpushservice---data-publishing-made--github",level:4},{value:"GitHub Integration Capabilities",id:"github-integration-capabilities",level:4},{value:"\ud83d\udd04 Data Flow: From Input to Output",id:"-data-flow-from-input-to-output",level:2},{value:"Step 1: <strong>Input Processing</strong> \ud83d\udce5",id:"step-1-input-processing-",level:3},{value:"Step 2: <strong>Documentation Generation</strong> \ud83d\udcdd",id:"step-2-documentation-generation-",level:3},{value:"Step 3: <strong>GitHub Integration</strong> \ud83d\ude80",id:"step-3-github-integration-",level:3},{value:"\ud83d\udee0\ufe0f Key Features &amp; Patterns",id:"\ufe0f-key-features--patterns",level:2},{value:"Repository Pattern \ud83d\udcc1",id:"repository-pattern-",level:3},{value:"Dependency Analysis \ud83d\udd78\ufe0f",id:"dependency-analysis-\ufe0f",level:3},{value:"Chart Generation Pipeline \ud83d\udcca",id:"chart-generation-pipeline-",level:3},{value:"\ud83d\ude80 Extension Points: Adding Your Own Features",id:"-extension-points-adding-your-own-features",level:2},{value:"Custom Chart Generators \ud83d\udcca",id:"custom-chart-generators-",level:3},{value:"Custom Markdown Services \ud83d\udcdd",id:"custom-markdown-services-",level:3},{value:"Custom GitHub Integrations \ud83d\ude80",id:"custom-github-integrations-",level:3},{value:"Common Extension Scenarios \ud83c\udfaf",id:"common-extension-scenarios-",level:3},{value:"\ud83c\udf93 Best Practices for Library Development",id:"-best-practices-for-library-development",level:2},{value:"Code Organization \ud83d\udcc1",id:"code-organization-",level:3},{value:"Testing Strategy \ud83e\uddea",id:"testing-strategy-",level:3},{value:"Performance Considerations \u26a1",id:"performance-considerations-",level:3},{value:"Error Handling \ud83d\udee1\ufe0f",id:"error-handling-\ufe0f",level:3},{value:"\ud83c\udfaf Next Steps for Contributors",id:"-next-steps-for-contributors",level:2},{value:"Getting Started",id:"getting-started",level:3},{value:"Development Workflow",id:"development-workflow",level:3}];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"library-architecture",children:"Library Architecture"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83d\udd27 ",(0,t.jsx)(n.strong,{children:"For Contributors"}),": Ready to dive into MADE's processing engine? This guide shows you how the library transforms your project data into beautiful documentation and GitHub integrations!"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-what-youll-learn",children:"\ud83c\udfaf What You'll Learn"}),"\n",(0,t.jsx)(n.p,{children:"By the end of this page, you'll understand:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"How MADE's library turns raw data into useful outputs"}),"\n",(0,t.jsx)(n.li,{children:"The role of each service in the processing pipeline"}),"\n",(0,t.jsx)(n.li,{children:"How to add your own renderers and integrations"}),"\n",(0,t.jsx)(n.li,{children:"Best practices for extending the library"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"-why-library-architecture-matters",children:"\ud83d\ude80 Why Library Architecture Matters"}),"\n",(0,t.jsxs)(n.p,{children:["Think of MADE's library like a ",(0,t.jsx)(n.strong,{children:"professional kitchen"})," \ud83d\udc68\u200d\ud83c\udf73:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Raw Ingredients (your data)"})," come in from the tool"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Specialized Chefs (services)"})," each handle their expertise"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Kitchen Equipment (generators)"})," create the final presentations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Serving Staff (integrations)"})," deliver results to the right places"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This separation means:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Reusable"}),": Use the library in any JavaScript/TypeScript project"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Testable"}),": Each service can be tested independently"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Extensible"}),": Add new outputs without changing existing code"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Maintainable"}),": Clear responsibilities for each component"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-technical-foundation",children:"\ud83d\udd27 Technical Foundation"}),"\n",(0,t.jsxs)(n.p,{children:["The MADE Library (",(0,t.jsx)(n.code,{children:"leds-tools-made-lib"}),") is the core processing engine that handles data transformation, documentation generation, and GitHub integration. It's designed to be used by the MADE Tool, but can also be used directly in your own projects!"]}),"\n",(0,t.jsx)(n.h2,{id:"-architecture-overview",children:"\ud83d\udcca Architecture Overview"}),"\n",(0,t.jsx)(n.p,{children:"Here's how the library processes your data:"}),"\n",(0,t.jsx)(n.mermaid,{value:"graph TD\r\n    A[Data Input] --\x3e B[ReportManager]\r\n    B --\x3e C[MarkdownService]\r\n    B --\x3e D[GitHubService]\r\n    B --\x3e E[ChartGenerators]\r\n    C --\x3e F[Documentation Output]\r\n    D --\x3e G[GitHub Issues/Projects]\r\n    E --\x3e H[SVG Charts & Diagrams]"}),"\n",(0,t.jsx)(n.h3,{id:"-the-processing-pipeline",children:"\ud83c\udfad The Processing Pipeline"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Data Input"})," \ud83d\udce5 - Your project data (from tool or direct usage)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ReportManager"})," \ud83c\udfaa - The central coordinator that orchestrates everything"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"MarkdownService"})," \ud83d\udcdd - Creates beautiful documentation files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GitHubService"})," \ud83d\ude80 - Handles GitHub API integrations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ChartGenerators"})," \ud83d\udcca - Creates visual charts and diagrams"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Outputs"})," \u2728 - Documentation, GitHub issues, and visual charts"]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,t.jsx)(n.strong,{children:"Key Insight"}),": Each component has a single responsibility and can be used independently or together!"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-core-components",children:"\ud83c\udfd7\ufe0f Core Components"}),"\n",(0,t.jsxs)(n.h3,{id:"1-data-models-modelmodelsts-",children:["1. Data Models (",(0,t.jsx)(n.code,{children:"model/models.ts"}),") \ud83d\udccb"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What it does"}),": Defines the structure of all data flowing through the library"]}),"\n",(0,t.jsxs)(n.p,{children:["Think of these as ",(0,t.jsx)(n.strong,{children:"blueprints"})," that ensure everyone speaks the same language."]}),"\n",(0,t.jsx)(n.h4,{id:"primary-models---the-core-data-types",children:"Primary Models - The Core Data Types"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// \ud83c\udfe2 Your Project Information\r\ninterface Project {\r\n    id: string;           // Unique identifier\r\n    name: string;         // Project name\r\n    description?: string; // What\'s this project about?\r\n    startDate?: string;   // When it begins\r\n    dueDate?: string;     // When it should finish\r\n}\r\n\r\n// \ud83d\udccb Work Items (Epics, Stories, Tasks)\r\ninterface Issue {\r\n    id: string;              // Unique identifier\r\n    type: string;            // "epic", "story", "task"\r\n    subtype: string;         // More specific classification\r\n    title: string;           // What needs to be done\r\n    description?: string;    // Detailed requirements\r\n    labels?: string[];       // Tags for organization\r\n    assignee?: TeamMember;   // Who\'s responsible\r\n    dependencies?: string[]; // What must be done first\r\n}\r\n\r\n// \ud83d\udcc5 Time Periods (Sprints, Iterations)\r\ninterface TimeBox {\r\n    id: string;              // Unique identifier\r\n    name: string;            // Sprint name (e.g., "Sprint 1")\r\n    description?: string;    // Sprint goals\r\n    startDate?: string;      // When sprint starts\r\n    endDate?: string;        // When sprint ends\r\n    status?: string;         // "planned", "active", "completed"\r\n    sprintItems: SprintItem[]; // What work is included\r\n}\n'})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83c\udfaf ",(0,t.jsx)(n.strong,{children:"Why TypeScript interfaces?"})," They provide ",(0,t.jsx)(n.strong,{children:"type safety"})," - if you try to put a number where a string should go, TypeScript catches it immediately!"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"2-report-manager-indexts-",children:["2. Report Manager (",(0,t.jsx)(n.code,{children:"index.ts"}),") \ud83c\udfaa"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What it does"}),": The central coordinator that orchestrates all processing"]}),"\n",(0,t.jsxs)(n.p,{children:["Think of this as the ",(0,t.jsx)(n.strong,{children:"project manager"})," that delegates tasks to the right specialists."]}),"\n",(0,t.jsx)(n.h4,{id:"main-entry-points",children:"Main Entry Points"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"export class ReportManager {\r\n    // \ud83d\udcc4 Generate comprehensive documentation\r\n    public createReport(dbPath: string): void {\r\n        const markdownService = new MarkdownService(dbPath);\r\n        markdownService.createManagementDocumentation();\r\n    }\r\n\r\n    // \ud83d\udce5 Extract data FROM GitHub (GitHub \u2192 MADE)\r\n    public async githubETL(token: string, org: string, project: string): Promise<void> {\r\n        GitHubTokenManager.initialize(token);\r\n        const githubService = new GitHubService();\r\n        \r\n        await githubService.ETLProject(org, project);    // Get project info\r\n        await githubService.ETLIssue(org, project);      // Get all issues\r\n        await githubService.ETLBacklog(org, project);    // Get backlog items\r\n        await githubService.ETLTimeBox(org, project);    // Get sprint info\r\n        await githubService.ETLTeam(org);                // Get team members\r\n    }\r\n\r\n    // \ud83d\ude80 Push data TO GitHub (MADE \u2192 GitHub)\r\n    public async githubPush(/* parameters */): Promise<void> {\r\n        GitHubTokenManager.initialize(token);\r\n        const pushService = new GitHubPushService();\r\n        await pushService.fullPush(org, repo, project, epics, stories, tasks);\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// \ud83d\udcc4 Generate documentation only\r\nconst reportManager = new ReportManager();\r\nreportManager.createReport('./project-data');\r\n\r\n// \ud83d\udd04 Two-way GitHub sync\r\nawait reportManager.githubETL(token, 'myorg', 'myproject');  // GitHub \u2192 Local\r\nawait reportManager.githubPush(token, 'myorg', 'myrepo', projectData); // Local \u2192 GitHub\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,t.jsx)(n.strong,{children:"ETL stands for"}),": Extract (get data), Transform (convert format), Load (save locally). It's like downloading, translating, and storing GitHub data!"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"3-markdown-services-markdown-",children:["3. Markdown Services (",(0,t.jsx)(n.code,{children:"markdown/"}),") \ud83d\udcdd"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What it does"}),": Transforms your data into beautiful, readable documentation"]}),"\n",(0,t.jsxs)(n.p,{children:["Think of these as ",(0,t.jsx)(n.strong,{children:"technical writers"})," that know exactly how to present different types of information."]}),"\n",(0,t.jsx)(n.h4,{id:"markdownservice---the-documentation-orchestrator",children:"MarkdownService - The Documentation Orchestrator"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class MarkdownService {\r\n    constructor(private dbPath: string) {}\r\n\r\n    createManagementDocumentation(): void {\r\n        this.generateBacklogDocumentation();    // \ud83d\udccb Epic/Story/Task docs\r\n        this.generateTimeBoxDocumentation();    // \ud83d\udcc5 Sprint reports\r\n        this.generateRoadmapDocumentation();    // \ud83d\uddfa\ufe0f Milestone planning\r\n        this.generateProjectSummary();         // \ud83d\udcca Overall overview\r\n    }\r\n\r\n    private generateBacklogDocumentation(): void {\r\n        const backlogService = new MarkdownBacklogService(this.dbPath);\r\n        backlogService.generate(); // Creates detailed backlog documentation\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"specialized-documentation-services",children:"Specialized Documentation Services"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Service"}),(0,t.jsx)(n.th,{children:"What It Creates"}),(0,t.jsx)(n.th,{children:"Perfect For"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"MarkdownBacklogService"})}),(0,t.jsx)(n.td,{children:"Epic/Story/Task documentation"}),(0,t.jsx)(n.td,{children:"\ud83d\udccb Understanding work breakdown"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"MarkdownTimeBoxService"})}),(0,t.jsx)(n.td,{children:"Sprint and iteration reports"}),(0,t.jsx)(n.td,{children:"\ud83d\udcc5 Tracking progress over time"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"MarkdownRoadmapService"})}),(0,t.jsx)(n.td,{children:"Milestone and release planning"}),(0,t.jsx)(n.td,{children:"\ud83d\uddfa\ufe0f Long-term planning"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"MarkdownTeamService"})}),(0,t.jsx)(n.td,{children:"Team structure and assignments"}),(0,t.jsx)(n.td,{children:"\ud83d\udc65 Understanding who does what"})]})]})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83c\udfaf ",(0,t.jsx)(n.strong,{children:"Output Example"}),": These services create files like ",(0,t.jsx)(n.code,{children:"01_project_overview.md"}),", ",(0,t.jsx)(n.code,{children:"02_backlogs.md"}),", ",(0,t.jsx)(n.code,{children:"03_sprints.md"})," with professional formatting and charts!"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"4-chart-generation-chart-",children:["4. Chart Generation (",(0,t.jsx)(n.code,{children:"chart/"}),") \ud83d\udcca"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What it does"}),": Creates visual representations of your project data"]}),"\n",(0,t.jsxs)(n.p,{children:["Think of these as ",(0,t.jsx)(n.strong,{children:"data visualization specialists"})," that turn numbers into insights."]}),"\n",(0,t.jsx)(n.h4,{id:"chart-generator-examples",children:"Chart Generator Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// \ud83d\udcc8 Cumulative Flow Diagram - Shows work flow over time\r\nclass CumulativeFlowDiagram {\r\n    generate(timeboxes: TimeBox[]): string {\r\n        // Analyzes sprint data to show work progress trends\r\n        return svgContent; // Returns ready-to-use SVG chart\r\n    }\r\n}\r\n\r\n// \u26a1 Project Throughput - Shows team velocity\r\nclass ProjectThroughputGenerator {\r\n    generate(issues: Issue[]): string {\r\n        // Calculates how fast work is completed\r\n        return svgContent; // Shows velocity trends\r\n    }\r\n}\r\n\r\n// \ud83d\udd78\ufe0f Dependency Analysis - Shows task relationships\r\nclass ProjectDependencyAnalyzer {\r\n    generateMermaidDiagram(issues: Issue[]): string {\r\n        // Maps out which tasks depend on others\r\n        return mermaidContent; // Creates dependency graph\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"available-chart-types",children:"Available Chart Types"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Chart Type"}),(0,t.jsx)(n.th,{children:"What It Shows"}),(0,t.jsx)(n.th,{children:"When To Use"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Cumulative Flow"})}),(0,t.jsx)(n.td,{children:"Work progress over time"}),(0,t.jsx)(n.td,{children:"\ud83d\udcc8 Understanding workflow health"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Throughput"})}),(0,t.jsx)(n.td,{children:"Team velocity trends"}),(0,t.jsx)(n.td,{children:"\u26a1 Measuring team performance"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Dependencies"})}),(0,t.jsx)(n.td,{children:"Task relationships"}),(0,t.jsx)(n.td,{children:"\ud83d\udd78\ufe0f Managing complex projects"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Burndown"})}),(0,t.jsx)(n.td,{children:"Remaining work in sprint"}),(0,t.jsx)(n.td,{children:"\ud83d\udd25 Sprint progress tracking"})]})]})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,t.jsx)(n.strong,{children:"Pro Tip"}),": Charts are generated as SVG (scalable graphics) or Mermaid diagrams, so they look crisp at any size and work great in documentation!"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.h3,{id:"5-github-integration-service-",children:["5. GitHub Integration (",(0,t.jsx)(n.code,{children:"service/"}),") \ud83d\ude80"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What it does"}),": Handles all communication with GitHub's API"]}),"\n",(0,t.jsxs)(n.p,{children:["Think of these as ",(0,t.jsx)(n.strong,{children:"API specialists"})," that know how to speak GitHub's language fluently."]}),"\n",(0,t.jsx)(n.h4,{id:"githubservice---data-extraction-github--made",children:"GitHubService - Data Extraction (GitHub \u2192 MADE)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class GitHubService {\r\n    // \ud83d\udce5 Extract project information from GitHub\r\n    async ETLProject(org: string, projectName: string): Promise<Project> {\r\n        const githubProject = await this.getProjectByTitle(org, projectName);\r\n        const project = await this.mapGitHubProjectToProject(githubProject);\r\n        \r\n        // Save locally for processing\r\n        FileSystemRepository.save('project.json', project);\r\n        return project;\r\n    }\r\n\r\n    // \ud83d\udce5 Extract all issues from GitHub repository\r\n    async ETLIssue(org: string, projectName: string): Promise<Issue[]> {\r\n        // Gets issues, converts to MADE format, saves locally\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"githubpushservice---data-publishing-made--github",children:"GitHubPushService - Data Publishing (MADE \u2192 GitHub)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class GitHubPushService {\r\n    async fullPush(\r\n        org: string,\r\n        repo: string,\r\n        project: Project,\r\n        epics: Issue[],\r\n        stories: Issue[],\r\n        tasks: Issue[]\r\n    ): Promise<void> {\r\n        // 1. Create GitHub project\r\n        const projectId = await this.pushProject(org, project);\r\n        \r\n        // 2. Create issues for each work item\r\n        for (const epic of epics) {\r\n            await this.pushIssue(org, repo, projectId, epic);\r\n        }\r\n        // ... creates stories and tasks too\r\n    }\r\n\r\n    private async pushProject(org: string, project: Project): Promise<string> {\r\n        // Uses GraphQL mutation to create GitHub project\r\n        const mutation = `\r\n            mutation CreateProject($input: CreateProjectV2Input!) {\r\n                createProjectV2(input: $input) {\r\n                    projectV2 { id }\r\n                }\r\n            }\r\n        `;\r\n        \r\n        return await this.graphqlRequest(mutation, variables);\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"github-integration-capabilities",children:"GitHub Integration Capabilities"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Direction"}),(0,t.jsx)(n.th,{children:"What Happens"}),(0,t.jsx)(n.th,{children:"Use Case"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"GitHub \u2192 MADE"})}),(0,t.jsx)(n.td,{children:"Import existing projects"}),(0,t.jsx)(n.td,{children:"\ud83d\udce5 Starting with existing data"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"MADE \u2192 GitHub"})}),(0,t.jsx)(n.td,{children:"Create issues and projects"}),(0,t.jsx)(n.td,{children:"\ud83d\ude80 Setting up new projects"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Bi-directional"})}),(0,t.jsx)(n.td,{children:"Keep everything in sync"}),(0,t.jsx)(n.td,{children:"\ud83d\udd04 Ongoing project management"})]})]})]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83d\udd11 ",(0,t.jsx)(n.strong,{children:"Authentication"}),": Uses GitHub tokens for secure API access. The library handles all the complex GraphQL queries and REST API calls for you!"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-data-flow-from-input-to-output",children:"\ud83d\udd04 Data Flow: From Input to Output"}),"\n",(0,t.jsxs)(n.p,{children:["Here's the ",(0,t.jsx)(n.strong,{children:"complete journey"})," your data takes through the library:"]}),"\n",(0,t.jsxs)(n.h3,{id:"step-1-input-processing-",children:["Step 1: ",(0,t.jsx)(n.strong,{children:"Input Processing"})," \ud83d\udce5"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'// Data comes from MADE Tool or direct library usage\r\nconst project: Project = { \r\n    id: "proj-1", \r\n    name: "My Awesome Project", \r\n    description: "Building the next big thing" \r\n};\r\nconst issues: Issue[] = [\r\n    { id: "epic-1", type: "epic", title: "User Authentication", /* ... */ }\r\n];\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What happens"}),": Raw project data enters the system in a standardized format."]}),"\n",(0,t.jsxs)(n.h3,{id:"step-2-documentation-generation-",children:["Step 2: ",(0,t.jsx)(n.strong,{children:"Documentation Generation"})," \ud83d\udcdd"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Create comprehensive, professional documentation\r\nconst markdownService = new MarkdownService('./data');\r\nmarkdownService.createManagementDocumentation();\r\n\r\n// \ud83d\udcc4 Output files created:\r\n// \u251c\u2500\u2500 01_project_overview.md     (Executive summary)\r\n// \u251c\u2500\u2500 02_backlogs.md            (Detailed work breakdown)\r\n// \u251c\u2500\u2500 03_sprints.md             (Sprint planning & progress)\r\n// \u251c\u2500\u2500 04_roadmap.md             (Long-term milestones)\r\n// \u2514\u2500\u2500 charts/\r\n//     \u251c\u2500\u2500 dependencies.svg       (Task dependency graph)\r\n//     \u251c\u2500\u2500 throughput.svg         (Team velocity chart)\r\n//     \u2514\u2500\u2500 burndown.svg          (Sprint progress chart)\n"})}),"\n",(0,t.jsxs)(n.h3,{id:"step-3-github-integration-",children:["Step 3: ",(0,t.jsx)(n.strong,{children:"GitHub Integration"})," \ud83d\ude80"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Push everything to GitHub for team collaboration\r\nawait reportManager.githubPush(token, org, repo, project, epics, stories, tasks);\r\n\r\n// \ud83d\ude80 GitHub artifacts created:\r\n// \u251c\u2500\u2500 GitHub Issues (one per Epic/Story/Task)\r\n// \u251c\u2500\u2500 GitHub Project (with proper columns and views)  \r\n// \u251c\u2500\u2500 Milestones (for roadmap items)\r\n// \u251c\u2500\u2500 Labels (for categorization)\r\n// \u2514\u2500\u2500 Assignments (team members linked to work)\n"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\ud83c\udfaf ",(0,t.jsx)(n.strong,{children:"The Magic"}),": Your simple ",(0,t.jsx)(n.code,{children:".made"})," file becomes a complete project management setup with documentation, visual charts, and GitHub integration!"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"\ufe0f-key-features--patterns",children:"\ud83d\udee0\ufe0f Key Features & Patterns"}),"\n",(0,t.jsx)(n.h3,{id:"repository-pattern-",children:"Repository Pattern \ud83d\udcc1"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What it does"}),": Provides a clean interface for data storage and retrieval"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Abstract interface that any storage can implement\r\ninterface Repository<T> {\r\n    save(filename: string, data: T): void;    // Store data\r\n    load(filename: string): T;                // Retrieve data\r\n    exists(filename: string): boolean;        // Check if data exists\r\n}\r\n\r\n// File-based implementation (default)\r\nclass FileSystemRepository<T> implements Repository<T> {\r\n    save(filename: string, data: T): void {\r\n        // Saves to JSON files on disk\r\n        fs.writeFileSync(filename, JSON.stringify(data, null, 2));\r\n    }\r\n    \r\n    load(filename: string): T {\r\n        // Loads and parses JSON files\r\n        return JSON.parse(fs.readFileSync(filename, 'utf8'));\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Why this pattern?"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Flexible"}),": Easy to switch from files to databases later"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Testable"}),": Mock repository for unit tests"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Consistent"}),": Same interface for all data operations"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"dependency-analysis-\ufe0f",children:"Dependency Analysis \ud83d\udd78\ufe0f"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"What it does"}),": Analyzes task relationships and detects problems"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:'class DependencyGraph {\r\n    addNode(id: string, dependencies: string[]): void {\r\n        // Builds graph of task relationships\r\n    }\r\n    \r\n    detectCycles(): string[][] {\r\n        // Finds circular dependencies (A depends on B, B depends on A)\r\n        // Returns: [["task-1", "task-2", "task-1"]] for cycles found\r\n    }\r\n    \r\n    getTopologicalOrder(): string[] {\r\n        // Returns tasks in order they should be completed\r\n        // Example: ["foundation", "walls", "roof"]\r\n    }\r\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Real-world benefits"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\ud83d\udea8 ",(0,t.jsx)(n.strong,{children:"Prevents deadlocks"}),": Detects when Task A needs Task B, but Task B needs Task A"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83d\udccb ",(0,t.jsx)(n.strong,{children:"Smart ordering"}),": Suggests the optimal order to complete tasks"]}),"\n",(0,t.jsxs)(n.li,{children:["\ud83c\udfaf ",(0,t.jsx)(n.strong,{children:"Risk identification"}),": Highlights tasks that block many others"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"chart-generation-pipeline-",children:"Chart Generation Pipeline \ud83d\udcca"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"How charts are created"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Data Extraction"})," \ud83d\udce5"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const completedTasks = issues.filter(i => i.status === 'completed');\r\nconst sprintVelocity = calculateVelocity(completedTasks, timeboxes);\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Processing"})," \u2699\ufe0f"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const chartData = sprintVelocity.map(sprint => ({\r\n    date: sprint.endDate,\r\n    velocity: sprint.completedPoints\r\n}));\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Rendering"})," \ud83c\udfa8"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const svgChart = generateVelocityChart(chartData);\r\n// Creates professional SVG charts\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Integration"})," \ud83d\udcdd"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const markdown = `## Team Velocity\\n\\n${svgChart}\\n\\nOur team completed...`;\r\n// Embeds charts directly in documentation\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-extension-points-adding-your-own-features",children:"\ud83d\ude80 Extension Points: Adding Your Own Features"}),"\n",(0,t.jsxs)(n.p,{children:["Want to extend the library? Here are the ",(0,t.jsx)(n.strong,{children:"main extension points"}),":"]}),"\n",(0,t.jsx)(n.h3,{id:"custom-chart-generators-",children:"Custom Chart Generators \ud83d\udcca"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"When to use"}),": You want to visualize data in a new way"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class CustomChartGenerator extends BaseChartGenerator {\r\n    generate(data: any[]): string {\r\n        // Example: Generate team workload distribution chart\r\n        const workloadData = this.calculateWorkload(data);\r\n        const svgContent = this.renderWorkloadChart(workloadData);\r\n        return svgContent;\r\n    }\r\n    \r\n    private calculateWorkload(issues: Issue[]): WorkloadData[] {\r\n        // Your custom calculation logic\r\n        return issues.reduce((acc, issue) => {\r\n            // Group by assignee, calculate story points, etc.\r\n        }, []);\r\n    }\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Steps to add"}),":"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Extend ",(0,t.jsx)(n.code,{children:"BaseChartGenerator"})]}),"\n",(0,t.jsxs)(n.li,{children:["Implement your ",(0,t.jsx)(n.code,{children:"generate()"})," method"]}),"\n",(0,t.jsxs)(n.li,{children:["Register with ",(0,t.jsx)(n.code,{children:"ChartGeneratorRegistry"})]}),"\n",(0,t.jsx)(n.li,{children:"Use in markdown services"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"custom-markdown-services-",children:"Custom Markdown Services \ud83d\udcdd"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"When to use"}),": You want new types of documentation"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class CustomMarkdownService {\r\n    constructor(private dbPath: string) {}\r\n    \r\n    generateCustomReport(): void {\r\n        const data = this.loadProjectData();\r\n        const customContent = this.processCustomLogic(data);\r\n        \r\n        // Example: Generate compliance report\r\n        const complianceReport = `\r\n# Compliance Report\r\n\r\n## Security Requirements\r\n${this.generateSecuritySection(data)}\r\n\r\n## Quality Gates\r\n${this.generateQualitySection(data)}\r\n        `;\r\n        \r\n        this.saveReport('compliance_report.md', complianceReport);\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"custom-github-integrations-",children:"Custom GitHub Integrations \ud83d\ude80"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"When to use"}),": You want to integrate with other tools via GitHub"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class CustomGitHubIntegration extends GitHubService {\r\n    async pushToCustomTool(issues: Issue[]): Promise<void> {\r\n        // Example: Create Slack notifications for new issues\r\n        for (const issue of issues) {\r\n            if (issue.type === 'epic') {\r\n                await this.notifySlack(`New epic created: ${issue.title}`);\r\n            }\r\n        }\r\n    }\r\n    \r\n    async syncWithJira(issues: Issue[]): Promise<void> {\r\n        // Example: Keep Jira tickets in sync with GitHub issues\r\n        // Your custom integration logic here\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"common-extension-scenarios-",children:"Common Extension Scenarios \ud83c\udfaf"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Want to Add..."}),(0,t.jsx)(n.th,{children:"Extend..."}),(0,t.jsx)(n.th,{children:"Example Use Case"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"New chart type"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"BaseChartGenerator"})}),(0,t.jsx)(n.td,{children:"Risk heat maps, Cost analysis"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"New documentation"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"MarkdownService"})}),(0,t.jsx)(n.td,{children:"Compliance reports, Architecture docs"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"New output format"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"ReportManager"})}),(0,t.jsx)(n.td,{children:"PDF exports, Excel reports"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"New integrations"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"GitHubService"})}),(0,t.jsx)(n.td,{children:"Slack notifications, Jira sync"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"New data sources"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"Repository"})}),(0,t.jsx)(n.td,{children:"Database storage, API imports"})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-best-practices-for-library-development",children:"\ud83c\udf93 Best Practices for Library Development"}),"\n",(0,t.jsx)(n.h3,{id:"code-organization-",children:"Code Organization \ud83d\udcc1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"lib/\r\n\u251c\u2500\u2500 model/          # \ud83d\udccb Data definitions\r\n\u251c\u2500\u2500 service/        # \ud83d\ude80 External integrations  \r\n\u251c\u2500\u2500 markdown/       # \ud83d\udcdd Documentation generators\r\n\u251c\u2500\u2500 chart/          # \ud83d\udcca Visualization generators\r\n\u251c\u2500\u2500 repository/     # \ud83d\udcbe Data persistence\r\n\u2514\u2500\u2500 utils/          # \ud83d\udee0\ufe0f Helper functions\n"})}),"\n",(0,t.jsx)(n.h3,{id:"testing-strategy-",children:"Testing Strategy \ud83e\uddea"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"// Unit tests for each service\r\ndescribe('MarkdownBacklogService', () => {\r\n    it('should generate backlog documentation', () => {\r\n        const service = new MarkdownBacklogService('./test-data');\r\n        const result = service.generate();\r\n        expect(result).toContain('# Backlog Overview');\r\n    });\r\n});\r\n\r\n// Integration tests for full workflows\r\ndescribe('ReportManager Integration', () => {\r\n    it('should create complete project documentation', async () => {\r\n        const manager = new ReportManager();\r\n        await manager.createReport('./test-project');\r\n        \r\n        // Verify all expected files are created\r\n        expect(fs.existsSync('01_project_overview.md')).toBe(true);\r\n        expect(fs.existsSync('charts/dependencies.svg')).toBe(true);\r\n    });\r\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"performance-considerations-",children:"Performance Considerations \u26a1"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Lazy Loading"}),": Only load data when needed"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Caching"}),": Cache expensive calculations"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Streaming"}),": Process large datasets incrementally"]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Parallel Processing"}),": Generate charts and docs simultaneously"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"error-handling-\ufe0f",children:"Error Handling \ud83d\udee1\ufe0f"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class RobustService {\r\n    async processData(data: ProjectData): Promise<Result> {\r\n        try {\r\n            const validated = this.validateInput(data);\r\n            const processed = await this.transform(validated);\r\n            return { success: true, data: processed };\r\n        } catch (error) {\r\n            logger.error('Processing failed', { error, data });\r\n            return { success: false, error: error.message };\r\n        }\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"-next-steps-for-contributors",children:"\ud83c\udfaf Next Steps for Contributors"}),"\n",(0,t.jsx)(n.h3,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\ud83d\udcda Study existing services"})," to understand patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\ud83e\uddea Write tests first"})," for any new functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\ud83d\udcd6 Check TypeScript interfaces"})," for data contracts"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"\ud83d\udd0d Use the repository pattern"})," for data access"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"development-workflow",children:"Development Workflow"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fork and clone"})," the library repository"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Create feature branch"})," for your enhancement"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Add tests"})," that cover your new functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Update documentation"})," with usage examples"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Submit pull request"})," with clear description"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This architecture provides a robust foundation for data processing while maintaining extensibility for custom requirements. The modular design means you can enhance specific areas without affecting the whole system! \ud83c\udfd7\ufe0f"})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var t=r(6540);const s={},i=t.createContext(s);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);