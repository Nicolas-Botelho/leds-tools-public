"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[1753],{4232:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var t=i(4848),r=i(8453);const s={},l="How to Contribute",o={id:"made/how_to_contribute/how_to_contribute",title:"How to Contribute",description:"This guide explains how to set up a local development environment, where to find good starter tasks, and the project's contribution workflow.",source:"@site/docs/made/how_to_contribute/1_how_to_contribute.md",sourceDirName:"made/how_to_contribute",slug:"/made/how_to_contribute/how_to_contribute",permalink:"/leds-tools-public/made/how_to_contribute/how_to_contribute",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"made",previous:{title:"Artifact Map",permalink:"/leds-tools-public/made/advanced_concepts/made_artifact_map"},next:{title:"Project Management",permalink:"/leds-tools-public/made/project_management/overview"}},d={},c=[{value:"Getting Started",id:"getting-started",level:2},{value:"Development Setup",id:"development-setup",level:3},{value:"Repository Structure",id:"repository-structure",level:3},{value:"Priority Feature Requests",id:"priority-feature-requests",level:2},{value:"1. Avoid Duplication of Issues on GitHub",id:"1-avoid-duplication-of-issues-on-github",level:3},{value:"2. Allow Use of GitHub Templates",id:"2-allow-use-of-github-templates",level:3},{value:"3. Event-Based Programming Paradigm",id:"3-event-based-programming-paradigm",level:3},{value:"4. Improve GitHub Integration Mapping",id:"4-improve-github-integration-mapping",level:3},{value:"5. Add Option to Create Using JIRA",id:"5-add-option-to-create-using-jira",level:3},{value:"Additional Contribution Opportunities",id:"additional-contribution-opportunities",level:2},{value:"Documentation Improvements",id:"documentation-improvements",level:3},{value:"Testing Enhancement",id:"testing-enhancement",level:3},{value:"Feature Extensions",id:"feature-extensions",level:3},{value:"Developer Experience",id:"developer-experience",level:3},{value:"Contribution Guidelines",id:"contribution-guidelines",level:2},{value:"Code Style",id:"code-style",level:3},{value:"Pull Request Process",id:"pull-request-process",level:3},{value:"Testing Requirements",id:"testing-requirements",level:3},{value:"Getting Help",id:"getting-help",level:2},{value:"Recognition",id:"recognition",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"how-to-contribute",children:"How to Contribute"})}),"\n",(0,t.jsx)(n.p,{children:"This guide explains how to set up a local development environment, where to find good starter tasks, and the project's contribution workflow."}),"\n",(0,t.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,t.jsx)(n.h3,{id:"development-setup",children:"Development Setup"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Fork the repository"}),"\n",(0,t.jsx)(n.li,{children:"Clone your fork locally"}),"\n",(0,t.jsxs)(n.li,{children:["Install dependencies: Node 16+ recommended. Use a reproducible install: ",(0,t.jsx)(n.code,{children:"npm ci"})," (or ",(0,t.jsx)(n.code,{children:"npm install"})," for first-time installs)"]}),"\n",(0,t.jsxs)(n.li,{children:["Build the project: ",(0,t.jsx)(n.code,{children:"npm run build"})]}),"\n",(0,t.jsxs)(n.li,{children:["Run tests: ",(0,t.jsx)(n.code,{children:"npm test"})]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"repository-structure",children:"Repository Structure"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"leds-tools-made"})," - VS Code extension and CLI"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"leds-tools-made-lib"})," - Core processing library"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"leds-tools-made-docker"})," - Containerized runtime"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"leds-tools-made-githubaction"})," - GitHub Actions automation"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"priority-feature-requests",children:"Priority Feature Requests"}),"\n",(0,t.jsx)(n.p,{children:"We've identified several key improvements that would make MADE significantly better. These features represent excellent opportunities for contributors to make meaningful impact."}),"\n",(0,t.jsx)(n.h3,{id:"1-avoid-duplication-of-issues-on-github",children:"1. Avoid Duplication of Issues on GitHub"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Problem"}),": Currently, running the GitHub integration multiple times creates duplicate issues."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution Needed"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Compare existing repository issues before creation"}),"\n",(0,t.jsx)(n.li,{children:"Skip issues that already exist based on title/description matching"}),"\n",(0,t.jsx)(n.li,{children:"Provide option to update existing issues instead of creating duplicates"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Implementation Approach"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class GitHubDuplicationHandler {\r\n    async getExistingIssues(org: string, repo: string): Promise<GitHubIssue[]> {\r\n        // Query existing issues from repository\r\n    }\r\n    \r\n    async shouldCreateIssue(newIssue: Issue, existingIssues: GitHubIssue[]): Promise<boolean> {\r\n        // Compare titles, descriptions, labels\r\n        // Return false if similar issue exists\r\n    }\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),": Prevents cluttered repositories and improves workflow reliability."]}),"\n",(0,t.jsx)(n.h3,{id:"2-allow-use-of-github-templates",children:"2. Allow Use of GitHub Templates"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Problem"}),": Issues are created with basic formatting, missing repository-specific templates."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution Needed"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Support custom issue templates for different issue types (Epic, Story, Task)"}),"\n",(0,t.jsx)(n.li,{children:"Read templates from local folder structure"}),"\n",(0,t.jsx)(n.li,{children:"Allow variable substitution in templates"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Implementation Approach"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"project/\r\n\u251c\u2500\u2500 .made-templates/\r\n\u2502   \u251c\u2500\u2500 epic.md              # Epic issue template\r\n\u2502   \u251c\u2500\u2500 story.md             # Story issue template\r\n\u2502   \u2514\u2500\u2500 task.md              # Task issue template\r\n\u251c\u2500\u2500 project.made\r\n\u2514\u2500\u2500 .env\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Template Example"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-markdown",children:"\x3c!-- epic.md --\x3e\r\n## Epic: {{title}}\r\n\r\n**Description**: {{description}}\r\n\r\n**Acceptance Criteria**:\r\n{{#each criterions}}\r\n- [ ] {{this}}\r\n{{/each}}\r\n\r\n**Related Stories**: \r\n\x3c!-- Will be populated automatically --\x3e\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),": Better integration with existing GitHub workflows and repository standards."]}),"\n",(0,t.jsx)(n.h3,{id:"3-event-based-programming-paradigm",children:"3. Event-Based Programming Paradigm"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Problem"}),": Current implementation uses condition-checking patterns, making it harder to extend and maintain."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution Needed"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Refactor core architecture to use event-driven patterns"}),"\n",(0,t.jsx)(n.li,{children:"Implement observer pattern for component processing"}),"\n",(0,t.jsx)(n.li,{children:"Enable plugin-based extensions through events"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Implementation Approach"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"interface MadeEvent {\r\n    type: string;\r\n    data: any;\r\n    timestamp: Date;\r\n}\r\n\r\nclass EventBus {\r\n    private listeners: Map<string, Function[]> = new Map();\r\n    \r\n    emit(event: MadeEvent): void {\r\n        const handlers = this.listeners.get(event.type) || [];\r\n        handlers.forEach(handler => handler(event));\r\n    }\r\n    \r\n    on(eventType: string, handler: Function): void {\r\n        // Register event listener\r\n    }\r\n}\r\n\r\n// Usage\r\neventBus.on('backlog.processed', (event) => {\r\n    // Generate backlog documentation\r\n});\r\n\r\neventBus.on('sprint.created', (event) => {\r\n    // Update sprint metrics\r\n});\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),": Improved extensibility, better separation of concerns, and easier testing."]}),"\n",(0,t.jsx)(n.h3,{id:"4-improve-github-integration-mapping",children:"4. Improve GitHub Integration Mapping"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Problem"}),": Current GitHub integration doesn't leverage GitHub's native features optimally."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution Needed"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Better mapping of MADE components to GitHub native structures"}),"\n",(0,t.jsx)(n.li,{children:"Utilize GitHub Projects V2 custom fields more effectively"}),"\n",(0,t.jsx)(n.li,{children:"Improve milestone and release management integration"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Current vs Improved Mapping"}),":"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"MADE Component"}),(0,t.jsx)(n.th,{children:"Current GitHub Mapping"}),(0,t.jsx)(n.th,{children:"Improved Mapping"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Epic"}),(0,t.jsx)(n.td,{children:'Issue with "Epic" label'}),(0,t.jsx)(n.td,{children:"Epic issue with linked children"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Story"}),(0,t.jsx)(n.td,{children:'Issue with "Story" label'}),(0,t.jsx)(n.td,{children:"Story with proper parent Epic reference"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Task"}),(0,t.jsx)(n.td,{children:'Issue with "Task" label'}),(0,t.jsx)(n.td,{children:"Task with Story parent and proper assignees"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Sprint"}),(0,t.jsx)(n.td,{children:"Milestone"}),(0,t.jsx)(n.td,{children:"GitHub Project iteration field"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Process"}),(0,t.jsx)(n.td,{children:"Not mapped"}),(0,t.jsx)(n.td,{children:"GitHub Project template"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Dependencies"}),(0,t.jsx)(n.td,{children:"Description text"}),(0,t.jsx)(n.td,{children:"GitHub issue blocking relationships"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Implementation Ideas"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"class ImprovedGitHubMapper {\r\n    async createEpicWithChildren(epic: Epic): Promise<void> {\r\n        // Create parent Epic issue\r\n        // Create child Story issues with proper linking\r\n        // Use GitHub's issue hierarchy features\r\n    }\r\n    \r\n    async mapSprintToIteration(sprint: TimeBox): Promise<void> {\r\n        // Use GitHub Projects V2 iteration fields\r\n        // Better sprint planning integration\r\n    }\r\n    \r\n    async setupDependencyBlocking(task: Task): Promise<void> {\r\n        // Use GitHub's native issue blocking\r\n        // Create proper dependency chains\r\n    }\r\n}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),": More native GitHub experience, better project management integration."]}),"\n",(0,t.jsx)(n.h3,{id:"5-add-option-to-create-using-jira",children:"5. Add Option to Create Using JIRA"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Problem"}),": MADE currently only integrates with GitHub, limiting adoption for teams using JIRA."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Solution Needed"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Adapt MADE to also be integrated with JIRA"}),"\n",(0,t.jsx)(n.li,{children:"Support JIRA custom fields and workflows"}),"\n",(0,t.jsx)(n.li,{children:"Enable linking and dependency management using JIRA's native features"}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Implementation Approach"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"src/\r\n\u251c\u2500\u2500 extract/\r\n\u2502   \u251c\u2500\u2500 github/\r\n\u2502   \u2502   \u251c\u2500\u2500 issue.extract.ts\r\n\u2502   \u2502   \u2514\u2500\u2500 ...\r\n\u2502   \u2514\u2500\u2500 jira/\r\n\u2502       \u251c\u2500\u2500 Adapters/\r\n\u2502       \u2502   \u251c\u2500\u2500 JiraIssueAdapter.ts\r\n\u2502       \u2502   \u251c\u2500\u2500 JiraProjectAdapter.ts\r\n\u2502       \u2502   \u2514\u2500\u2500 ...\r\n\u2502       \u251c\u2500\u2500 jira.extract.ts\r\n\u2502       \u2514\u2500\u2500 ...\r\n\u2514\u2500\u2500 push/\r\n    \u251c\u2500\u2500 github/\r\n    \u2502   \u251c\u2500\u2500 githubApi.ts\r\n    \u2502   \u251c\u2500\u2500 issue.push.ts\r\n    \u2502   \u2514\u2500\u2500 ...\r\n    \u2514\u2500\u2500 jira/\r\n        \u251c\u2500\u2500 jiraApi.ts\r\n        \u251c\u2500\u2500 jiraIssue.push.ts\r\n        \u251c\u2500\u2500 jiraProject.push.ts\r\n        \u2514\u2500\u2500 ...\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Impact"}),": Broader adoption for teams using JIRA, improved project management integration, and more flexible workflow options."]}),"\n",(0,t.jsx)(n.h2,{id:"additional-contribution-opportunities",children:"Additional Contribution Opportunities"}),"\n",(0,t.jsx)(n.h3,{id:"documentation-improvements",children:"Documentation Improvements"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Add more comprehensive examples"}),"\n",(0,t.jsx)(n.li,{children:"Create video tutorials"}),"\n",(0,t.jsx)(n.li,{children:"Improve error messages and help text"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"testing-enhancement",children:"Testing Enhancement"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Increase test coverage"}),"\n",(0,t.jsx)(n.li,{children:"Add integration tests with real GitHub API"}),"\n",(0,t.jsx)(n.li,{children:"Performance testing for large projects"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"feature-extensions",children:"Feature Extensions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Support for more project management tools (Jira, Azure DevOps)"}),"\n",(0,t.jsx)(n.li,{children:"Custom chart types and metrics"}),"\n",(0,t.jsx)(n.li,{children:"Advanced dependency analysis"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"developer-experience",children:"Developer Experience"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Better error handling and debugging"}),"\n",(0,t.jsx)(n.li,{children:"Improved CLI output and progress indicators"}),"\n",(0,t.jsx)(n.li,{children:"Hot reload for development"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"contribution-guidelines",children:"Contribution Guidelines"}),"\n",(0,t.jsx)(n.h3,{id:"code-style",children:"Code Style"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Follow TypeScript best practices"}),"\n",(0,t.jsx)(n.li,{children:"Use meaningful variable and function names"}),"\n",(0,t.jsx)(n.li,{children:"Add comprehensive JSDoc comments"}),"\n",(0,t.jsx)(n.li,{children:"Include unit tests for new features"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"pull-request-process",children:"Pull Request Process"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Create feature branch from ",(0,t.jsx)(n.code,{children:"main"})]}),"\n",(0,t.jsx)(n.li,{children:"Implement feature with tests"}),"\n",(0,t.jsx)(n.li,{children:"Update documentation"}),"\n",(0,t.jsx)(n.li,{children:"Submit PR with clear description"}),"\n",(0,t.jsx)(n.li,{children:"Address review feedback"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"testing-requirements",children:"Testing Requirements"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Unit tests for new functionality"}),"\n",(0,t.jsx)(n.li,{children:"Integration tests for GitHub features"}),"\n",(0,t.jsxs)(n.li,{children:["Manual testing with example ",(0,t.jsx)(n.code,{children:".made"})," files"]}),"\n",(0,t.jsx)(n.li,{children:"Performance impact assessment"}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Open an issue for questions or bug reports"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Check existing issues before creating new ones"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Join community discussions"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Review architecture documentation first"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Where to start: look for issues labeled ",(0,t.jsx)(n.code,{children:"good-first-issue"})," or ",(0,t.jsx)(n.code,{children:"help wanted"}),', or try one of the items in the "Priority Feature Requests" section above.']}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"recognition",children:"Recognition"}),"\n",(0,t.jsx)(n.p,{children:"Contributors will be:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Listed in project contributors"}),"\n",(0,t.jsx)(n.li,{children:"Credited in release notes"}),"\n",(0,t.jsx)(n.li,{children:"Invited to maintainer discussions for significant contributions"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"These improvements would make MADE a more robust, user-friendly, and professionally viable project management tool. Each represents a meaningful opportunity to contribute to an active open-source project."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(6540);const r={},s=t.createContext(r);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);