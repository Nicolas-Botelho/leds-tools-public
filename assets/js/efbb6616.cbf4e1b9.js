"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[5271],{6910:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=t(4848),s=t(8453);const o={sidebar_position:1,title:"How to Contribute"},r="How to Contribute",a={id:"oraculo/how_to_contribute/index",title:"How to Contribute",description:"There are several ways to contribute to the project, such as proposing new features, collaborating on installation and environment setup, and suggesting improvements for continuous evolution.",source:"@site/docs/oraculo/3_how_to_contribute/index.md",sourceDirName:"oraculo/3_how_to_contribute",slug:"/oraculo/how_to_contribute/",permalink:"/leds-tools-public/oraculo/how_to_contribute/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"How to Contribute"},sidebar:"oraculo",previous:{title:"Architecture",permalink:"/leds-tools-public/oraculo/advanced_concepts/architecture"},next:{title:"Project Management",permalink:"/leds-tools-public/oraculo/project_management/"}},l={},c=[{value:"Suggestion 1: Conversation Memory in AI",id:"suggestion-1-conversation-memory-in-ai",level:3},{value:"Concept",id:"concept",level:4},{value:"Why implement?",id:"why-implement",level:4},{value:"Benefits",id:"benefits",level:4},{value:"Suggestion 2: Graph Generation and Standardized Responses",id:"suggestion-2-graph-generation-and-standardized-responses",level:3},{value:"Concept",id:"concept-1",level:4},{value:"Why implement?",id:"why-implement-1",level:4},{value:"Benefits",id:"benefits-1",level:4},{value:"Suggestion 3: Dynamic Token Management",id:"suggestion-3-dynamic-token-management",level:3},{value:"Concept",id:"concept-2",level:4},{value:"Why implement?",id:"why-implement-2",level:4},{value:"Benefits",id:"benefits-2",level:4}];function d(e){const n={br:"br",code:"code",em:"em",h1:"h1",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"how-to-contribute",children:"How to Contribute"})}),"\n",(0,i.jsxs)(n.p,{children:["There are several ways to contribute to the project, such as proposing ",(0,i.jsx)(n.strong,{children:"new features"}),", collaborating on installation and environment setup, and suggesting ",(0,i.jsx)(n.strong,{children:"improvements"})," for continuous evolution."]}),"\n",(0,i.jsx)(n.p,{children:"Below are some improvement suggestions that could be implemented:"}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"suggestion-1-conversation-memory-in-ai",children:"Suggestion 1: Conversation Memory in AI"}),"\n",(0,i.jsx)(n.h4,{id:"concept",children:"Concept"}),"\n",(0,i.jsxs)(n.p,{children:["Add ",(0,i.jsx)(n.strong,{children:"contextual memory"})," to the chatbot, allowing it to keep track of previous user interactions. This way, sequential questions can be understood within the same context, without requiring repetition."]}),"\n",(0,i.jsx)(n.h4,{id:"why-implement",children:"Why implement?"}),"\n",(0,i.jsxs)(n.p,{children:["Currently, each question to Or\xe1culo is processed in isolation, forcing users to repeat context for every query.",(0,i.jsx)(n.br,{}),"\n","With memory, it would be possible to maintain a ",(0,i.jsx)(n.strong,{children:"continuous dialogue"}),", improving usability and making interactions more natural."]}),"\n",(0,i.jsx)(n.h4,{id:"benefits",children:"Benefits"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Enables chained queries (e.g., ",(0,i.jsx)(n.em,{children:"\u201cWhich tasks are open?\u201d"})," \u2192 ",(0,i.jsx)(n.em,{children:"\u201cAnd from those, which belong to the current sprint?\u201d"}),")."]}),"\n",(0,i.jsx)(n.li,{children:"Reduces redundancy and saves user time."}),"\n",(0,i.jsxs)(n.li,{children:["Makes the chatbot behave more like an ",(0,i.jsx)(n.strong,{children:"intelligent personal assistant"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"suggestion-2-graph-generation-and-standardized-responses",children:"Suggestion 2: Graph Generation and Standardized Responses"}),"\n",(0,i.jsx)(n.h4,{id:"concept-1",children:"Concept"}),"\n",(0,i.jsxs)(n.p,{children:["Enable Or\xe1culo to ",(0,i.jsx)(n.strong,{children:"generate visual charts"})," (bar, line, pie) from GitHub metrics, and apply a ",(0,i.jsx)(n.strong,{children:"standard response format"})," for all answers."]}),"\n",(0,i.jsx)(n.h4,{id:"why-implement-1",children:"Why implement?"}),"\n",(0,i.jsxs)(n.p,{children:["Currently, the system only provides ",(0,i.jsx)(n.strong,{children:"plain text responses"}),", which can make it harder to interpret complex metrics.",(0,i.jsx)(n.br,{}),"\n","Visual outputs make results easier to understand and more useful for sprint reviews or team meetings.",(0,i.jsx)(n.br,{}),"\n","Standardized responses ensure that information is always presented consistently, supporting comparison and professional reporting."]}),"\n",(0,i.jsx)(n.h4,{id:"benefits-1",children:"Benefits"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Improves clarity of communication (e.g., sprint performance, number of open/closed issues)."}),"\n",(0,i.jsxs)(n.li,{children:["Easier analysis for managers who prefer ",(0,i.jsx)(n.strong,{children:"visuals over text"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Creates a more professional experience aligned with modern management tools."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"suggestion-3-dynamic-token-management",children:"Suggestion 3: Dynamic Token Management"}),"\n",(0,i.jsx)(n.h4,{id:"concept-2",children:"Concept"}),"\n",(0,i.jsxs)(n.p,{children:["Allow updating API tokens (e.g., ",(0,i.jsx)(n.strong,{children:"GitHub"}),", ",(0,i.jsx)(n.strong,{children:"Gemini"}),") directly through the ",(0,i.jsx)(n.strong,{children:"system interface"}),", without editing the ",(0,i.jsx)(n.code,{children:".env"})," file or restarting services."]}),"\n",(0,i.jsx)(n.h4,{id:"why-implement-2",children:"Why implement?"}),"\n",(0,i.jsxs)(n.p,{children:["Currently, token replacement requires manual changes to the ",(0,i.jsx)(n.code,{children:".env"})," file and restarting the application.",(0,i.jsx)(n.br,{}),"\n","This process creates friction, especially for non-technical users, and interrupts workflow.",(0,i.jsx)(n.br,{}),"\n","With dynamic token management, users could update credentials in real time, ensuring better ",(0,i.jsx)(n.strong,{children:"usability and flexibility"}),"."]}),"\n",(0,i.jsx)(n.h4,{id:"benefits-2",children:"Benefits"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Fast replacement of expired credentials."}),"\n",(0,i.jsx)(n.li,{children:"Reduces technical dependency by avoiding manual file editing."}),"\n",(0,i.jsx)(n.li,{children:"Increases efficiency by eliminating the need to restart the application."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);