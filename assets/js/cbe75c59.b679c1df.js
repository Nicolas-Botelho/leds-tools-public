"use strict";(self.webpackChunkdocumentacao_leds_tools=self.webpackChunkdocumentacao_leds_tools||[]).push([[7858],{4528:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=s(4848),t=s(8453);const r={sidebar_position:4,title:"Architecture and Modularization",description:"The modular architecture of the project."},l="Architecture and Modularization",o={id:"oraculo/architecture",title:"Architecture and Modularization",description:"The modular architecture of the project.",source:"@site/docs/oraculo/5_architecture.md",sourceDirName:"oraculo",slug:"/oraculo/architecture",permalink:"/leds-tools-public/oraculo/architecture",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Architecture and Modularization",description:"The modular architecture of the project."},sidebar:"oraculo",previous:{title:"Mini-World",permalink:"/leds-tools-public/oraculo/minimundo"},next:{title:"Suggestions for Improvements",permalink:"/leds-tools-public/oraculo/suggestions_improvements"}},d={},c=[{value:"Main Components",id:"main-components",level:2},{value:"Overview of the Data Flow",id:"overview-of-the-data-flow",level:2},{value:"Architecture Summary by Role",id:"architecture-summary-by-role",level:2},{value:"Design Patterns Used",id:"design-patterns-used",level:2},{value:"Deployment",id:"deployment",level:2},{value:"Security and Configuration",id:"security-and-configuration",level:2},{value:"Testing",id:"testing",level:2}];function a(e){const n={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"architecture-and-modularization",children:"Architecture and Modularization"})}),"\n",(0,i.jsx)(n.p,{children:"The Or\xe1culo project is organized into well-defined modules with specific responsibilities, forming a decoupled and scalable architecture. Below is a clear explanation of each component\u2019s role:"}),"\n",(0,i.jsx)(n.h2,{id:"main-components",children:"Main Components"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83d\udd01 ",(0,i.jsx)(n.strong,{children:"Airbyte (ETL)"}),(0,i.jsx)(n.br,{}),"\n","Responsible for extracting data from GitHub (issues, pull requests, etc.), transforming and loading it into the PostgreSQL database.",(0,i.jsx)(n.br,{}),"\n","The current approach captures data from Airbyte's temporary cache, transforms it, and inserts it into a ",(0,i.jsx)(n.strong,{children:"custom relational schema"})," with normalized tables. This improves compatibility with Vanna and enables more accurate SQL generation."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\u2699\ufe0f ",(0,i.jsx)(n.strong,{children:"Backend (FastAPI)"}),(0,i.jsx)(n.br,{}),"\n","API developed with FastAPI. It acts as a bridge between the user and the database: receives questions, uses the AI to generate SQL queries, executes them, and formats the responses.",(0,i.jsx)(n.br,{}),"\n","Pattern used: MVC (Model, View, Controller)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83e\udde0 ",(0,i.jsx)(n.strong,{children:"MyVanna (LLM/AI)"}),(0,i.jsx)(n.br,{}),"\n","AI component that uses Google's Gemini model and ChromaDB. It interprets user questions, generates SQL, runs queries, and translates responses into natural language.",(0,i.jsx)(n.br,{}),"\n","Responsibilities:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Understands the database schema"}),"\n",(0,i.jsx)(n.li,{children:"Generates and runs SQL queries"}),"\n",(0,i.jsx)(n.li,{children:"Learns from custom examples"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Additionally, to validate AI responses, the system now includes ",(0,i.jsx)(n.strong,{children:"semantic similarity tests"})," using Google BERT. These tests compare the generated SQL with expected queries using cosine similarity. If similarity is below 60%, the response is flagged as poor quality."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\ud83c\udf10 ",(0,i.jsx)(n.strong,{children:"OpenWebUI (Graphical Interface)"}),(0,i.jsx)(n.br,{}),"\n","The visual interface where the user interacts with the system, submits questions, and receives responses."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"overview-of-the-data-flow",children:"Overview of the Data Flow"}),"\n",(0,i.jsxs)(n.p,{children:["User (OpenWebUI interface)",(0,i.jsx)(n.br,{}),"\n","\u2193",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.code,{children:"pipeline_api.py"}),(0,i.jsx)(n.br,{}),"\n","\u2193",(0,i.jsx)(n.br,{}),"\n","FastAPI (backend/API)",(0,i.jsx)(n.br,{}),"\n","\u2193",(0,i.jsx)(n.br,{}),"\n","Vanna.AI (LLM)",(0,i.jsx)(n.br,{}),"\n","\u2193",(0,i.jsx)(n.br,{}),"\n","SQL \u2192 PostgreSQL Database",(0,i.jsx)(n.br,{}),"\n","\u2193",(0,i.jsx)(n.br,{}),"\n","\u21aa Response shown to the user"]}),"\n",(0,i.jsx)(n.h2,{id:"architecture-summary-by-role",children:"Architecture Summary by Role"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Component"}),(0,i.jsx)(n.th,{children:"Role"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"OpenWebUI"}),(0,i.jsx)(n.td,{children:"Interface"}),(0,i.jsx)(n.td,{children:"Frontend for user interaction"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FastAPI (API)"}),(0,i.jsx)(n.td,{children:"Backend/API"}),(0,i.jsx)(n.td,{children:"Receives questions, uses AI, queries database"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Airbyte"}),(0,i.jsx)(n.td,{children:"ETL"}),(0,i.jsx)(n.td,{children:"Extracts GitHub data and loads it into PostgreSQL"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"MyVanna"}),(0,i.jsx)(n.td,{children:"LLM / AI"}),(0,i.jsx)(n.td,{children:"Generates SQL and natural language responses using Gemini + Chroma"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"PostgreSQL"}),(0,i.jsx)(n.td,{children:"Database"}),(0,i.jsx)(n.td,{children:"Stores GitHub data queried by the system"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"design-patterns-used",children:"Design Patterns Used"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Singleton"}),(0,i.jsx)(n.br,{}),"\n","Ensures only one instance of key components like:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"AskController"})," (question logic)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MyVanna"})," (AI client)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"airbyte"})," (ETL process)"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"MVC (Model-View-Controller)"}),(0,i.jsx)(n.br,{}),"\n","Applied in the API:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Models"}),": Define the structure of questions/responses"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Controllers"}),": Process the logic (e.g. ",(0,i.jsx)(n.code,{children:"AskController.py"}),")"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Views/Routes"}),": Handle API endpoints (e.g. ",(0,i.jsx)(n.code,{children:"routes.py"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"deployment",children:"Deployment"}),"\n",(0,i.jsxs)(n.p,{children:["The entire system is containerized using Docker. Components defined in ",(0,i.jsx)(n.code,{children:"docker-compose.yml"})," include:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"db"}),": PostgreSQL database"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"back-end"}),": Python-based API and ETL"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"front-end"}),": OpenWebUI interface"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Configuration files include ",(0,i.jsx)(n.code,{children:"Dockerfile.dev"}),", ",(0,i.jsx)(n.code,{children:"Dockerfile.pub"}),", and ",(0,i.jsx)(n.code,{children:"Dockerfile"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"security-and-configuration",children:"Security and Configuration"}),"\n",(0,i.jsxs)(n.p,{children:["Sensitive data is stored in ",(0,i.jsx)(n.code,{children:".env"})," files. This includes:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"GitHub token"}),"\n",(0,i.jsx)(n.li,{children:"Database password"}),"\n",(0,i.jsx)(n.li,{children:"Gemini API key"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,i.jsxs)(n.p,{children:["Tests are implemented using ",(0,i.jsx)(n.code,{children:"pytest"}),", including:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"MyVanna tests (SQL generation and DB connection)"}),"\n",(0,i.jsx)(n.li,{children:"Pipeline tests (question handling)"}),"\n",(0,i.jsxs)(n.li,{children:["API tests (",(0,i.jsx)(n.code,{children:"/ask"})," endpoint)"]}),"\n",(0,i.jsx)(n.li,{children:"AI Response Quality Tests: Implemented with BERT to evaluate the semantic similarity between expected and generated SQL queries. Tests fail if similarity drops below 60%."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"The Or\xe1culo system demonstrates how AI and GitHub integration can simplify development tracking through natural language. Its architecture is modular, follows good design principles, and is production-ready with testing, containerization, and secure configuration."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);